<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Cerca_Rior" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________


Function Riordina_0 (ColdaRior, AscDesc as boolean )as variant &apos; Riordina l&apos;elenco prezzi con criteri
&apos;Ritorna la riga finale 										 a scelta... (si usa richiamata da altra sub)
rem manomessa 	Giuseppe Vizziello 2014
 dim lrowF as long
oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
&apos;circoscrive l&apos;elenco
	sString$ = &quot;Fine elenco&quot;
	oEnd=uFindString(sString$, oSheet) 
	If isNull (oEnd) or isEmpty (oEnd) then &apos;11111
		msgbox &quot; Probabilmente manca la riga rossa di chiusura della tabella! Controlla e PROVVEDI21! (Ctrl-Alt-P) &quot;
		ThisComponent.CurrentController.Select(oCell)
		Riordina_0 = &quot;uscita forzata&quot;
		exit FUNCTION
	end if 
	
	lrowF=oEnd.RangeAddress.EndRow 
	&apos;	lcolF=oEnd.RangeAddress.EndColumn
	lcolbase = Colonna_giusta_EP(osheet)
	if lcolbase = &quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; then
				Riordina_0 = lcolbase
				exit function
	end If
 oRanges = ThisComponent.NamedRanges
&apos;RiDefinisci_Area_Elenco_prezzi
&apos;seleziona_area (&quot;elenco_prezzi&quot;)
Riordina_ElencoPrezzi_D
unSelect &apos;unselect ranges 	
	Riordina_0 = lrowF
End Function 

rem Return the cell that contains the text
Function uFindString(sString$, oSheet ) As Variant &apos; richiamata da diverse cose
	Dim nCurCol As Integer
	Dim nCurRow As Integer
	Dim nEndCol As Integer
	Dim nEndRow As Integer
	Dim oCell As Object
	Dim oCursor As Object
	Dim aAddress As Variant
	Dim sFind As String
	rem oSheet = ThisComponent.Sheets.getByName(&quot;COMPUTO&quot;)
	rem sString = &quot;TOTALI COMPUTO&quot;
	oCell = oSheet.getCellByPosition(0,0)
	oCursor = oSheet.createCursorByRange(oCell)
	oCursor.GotoEndOfUsedArea(True)
	aAddress = oCursor.RangeAddress
	nEndRow = aAddress.EndRow
	nEndCol = aAddress.EndColumn
	For nCurCol = 0 To nEndCol &apos;Go through the range column by column
		For nCurRow = 0 To nEndRow &apos;row by row.
			&apos;oCell = oSheet.getCellByPosition( nCurCol, nCurRow )
			&apos;sFind = oCell.String &apos;Get cell contents.
			&apos;If inStr(sFind, sString$) Then
			If inStr (oSheet.getCellByPosition(nCurCol, nCurRow).String , sString$) then
						 uFindString = oSheet.getCellByPosition(nCurCol, nCurRow)
					 Exit Function
			End If
		Next
	Next
End Function




rem Return the cell that contains the text
Sub SearchARange &apos; questa mi sembra meglio...
 rem Author: Andrew Pitonyak
	 Dim oSheet
	 Dim oRange
	 Dim oFoundCell
	 oSheet = ThisComponent.getSheets().getByIndex(0)
&apos;	 oRange = oSheet.getCellRangeByName(&quot;a2:a19&quot;)
	 oRange = oSheet.getCellRangeByPosition(0,0,0,5000) 
	 sString$ = &quot;E-1&quot;
&apos;	 oFoundCell = SimpleSheetSearch(sString$, oRange, False)
	 ThisComponent.CurrentController.Select(oFoundCell)
END SUB

&apos; questa ancora meglio_ Cerca nel range predefinito
Function SimpleSheetSearch(sString$, oSheet, nStartCol, nStartRow, nEndCol, nEndRow, bWholeWord As Boolean) As Variant
 Dim oDescriptor
 Dim oFound
 if isMissing ( bWholeWord) then
 	 bWholeWord = true
 end if
 rem Create a descriptor from a searchable document.
 oDescriptor = oSheet.createSearchDescriptor()
 rem Set the text for which to search and other 
 rem http://api.openoffice.org/docs/common/ref/com/sun/star/util/SearchDescriptor.html 
 &apos;xray oDescriptor
 With oDescriptor
 .SearchString = sString$
 rem These all default to false
 rem SearchWords forces the entire cell to contain only the search string
 .SearchWords = bWholeWord
&apos; .SearchWords = true
 .SearchCaseSensitive = False
 End With
 &apos; xray oDescriptor
 rem Find the first one
 oFound = oSheet.findFirst(oDescriptor)
 SimpleSheetSearch = oFound
End Function



Sub RiDefinisci_Area_Elenco_prezzi () &apos; viene richiamata da Riordina l&apos;elenco Prezzi
rem riscritta (c) Giuseppe Vizziello 2014
&apos; Nel Computo si è scelto di usare un namedRanges per il VlookUp... a false, eppure ci sono casi in cui 
&apos; è necessario riordinare (???)
&apos; IMPORTANTE ridefinisce anche il namedRanges che contiene la lista dei codici interni di comodo

dim lRow as Long

dim oSheet as Object

	oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
rem ----------------------------------------------------------------------
rem prima riga
	oEnd=uFindString((&quot;DESCRIZIONE DEI LAVORI&quot; &amp; chr$(10) &amp; &quot;E DELLE SOMMINISTRAZIONI&quot;), oSheet)
	fRow=oEnd.RangeAddress.EndRow+1
rem ----------------------------------------------------------------------
rem ultima riga
&apos;	oEnd=uFindString(&quot;Fine elenco&quot;, oSheet)
&apos;	lRowE=oEnd.RangeAddress.EndRow
&apos;	lRowE=cerca_riga_rossa (&quot;Elenco Prezzi&quot;)+1
rem ----------------------------------------------------------------------
rem nome ultima colonna

	lCol = ColumnNameOf(getLastUsedCol(oSheet)+2) &apos; aggiungo 3 colonne in più... non si sa mai
	ScriptPy(&quot;LeenoBasicBridge.py&quot;,&quot;rifa_nomearea&quot;, ThisComponent, &quot;Elenco Prezzi&quot;, &quot;$A$&quot;&amp; fRow &amp;&quot;:$&quot;&amp; lCol &amp;&quot;$&quot;&amp; lRowE, &quot;elenco_prezzi&quot;)
	ScriptPy(&quot;LeenoBasicBridge.py&quot;,&quot;rifa_nomearea&quot;, ThisComponent, &quot;Elenco Prezzi&quot;, &quot;$A$&quot;&amp; fRow &amp;&quot;:$A$&quot;&amp; lRowE, &quot;Lista&quot;) &apos;codici
END SUB 



Function Colonna_giusta_EP (oSheet as object)

&apos; questa invece trova automaticamente la colonna giusta (+col)

 if oSheet.getCellByPosition(1,0).string = &quot; Descrizione &quot; or _
 	oSheet.getCellByPosition(1,0).string = &quot;Descrizione &quot; or _
 	oSheet.getCellByPosition(1,0).string = &quot;Descrizione&quot; then
 	lcolbase = 0
 end if
 if oSheet.getCellByPosition(2,0).string = &quot; Descrizione &quot; or _
 	oSheet.getCellByPosition(2,0).string = &quot;Descrizione &quot; or _
 	oSheet.getCellByPosition(2,0).string = &quot;Descrizione&quot; then
 	lcolbase = 1
 end if
 if oSheet.getCellByPosition(3,0).string = &quot; Descrizione &quot; or _
 	oSheet.getCellByPosition(3,0).string = &quot;Descrizione &quot; or _
 	oSheet.getCellByPosition(3,0).string = &quot;Descrizione&quot; then
 	lcolbase = 2
 end if
 if oSheet.getCellByPosition(4,0).string = &quot; Descrizione &quot; or _
 	oSheet.getCellByPosition(4,0).string = &quot;Descrizione &quot; or _
 	oSheet.getCellByPosition(4,0).string = &quot;Descrizione&quot; then
 	lcolbase = 3
 end if
 &apos; print lcolbase
 if lcolbase &lt;= 3 then
 			Colonna_giusta_EP = lcolbase
 		else
 		print &quot;questo?&quot;
 			Colonna_giusta_EP =	&quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; 
 	end if
 	if lcolbase = &quot;&quot; then
 	&apos;		Colonna_giusta_EP = lcolbase
 	&apos;	else
 	print &quot;oppure quest&apos;altro&quot;
 			Colonna_giusta_EP =	&quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; 
 			print &quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; 
 	end if

end Function

Function ultima_voce
	oSheet = thisComponent.CurrentController.ActiveSheet
    nRow = getlastusedrow(oSheet)
    For n = nRow To 0 Step -1
    	test = oSheet.getCellByPosition(0, n).CellStyle
    	Select Case test
    	Case &quot;EP-aS&quot;, &quot;An-sfondo-basso Att End&quot;, &quot;Comp End Attributo&quot;, &quot;Comp End Attributo_R&quot;, &quot;comp Int_colonna&quot;, &quot;comp Int_colonna_R_prima&quot;
    		ultima_voce = n
			Exit Function
		End Select
	Next

End Function

</script:module>