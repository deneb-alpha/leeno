<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Voci_Sistema" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL http://www.gnu.org/licenses/lgpl.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

FUNCTION templateTipo &apos; introdotta con nuovo template 5C
&apos;If thisComponent.Sheets.hasByName(&quot;S1&quot;) Then 
&apos;If ThisComponent.Sheets.getByName(&quot;COMPUTO&quot;)._
If ThisComponent.currentController.activeSheet._
	GetCellByPosition( 2 , 0).string = &quot;Rif. al Capitolato&quot; then
		templateTipo =&quot;ATT&quot;
	else
		templateTipo =&quot;5C&quot;
end if
END FUNCTION
&apos;______________________________________________________________________________________________

Function Copia_Costanti (oSheetSRC, oSheetDest, sDestCell, SrcRange as variant) 
print SrcRange
dim SrcRange as string
 &apos;oSheetSRC = ThisComponent.Sheets.getByName(&quot;Sheet11&quot;)
 &apos; oSheetDest = ThisComponent.Sheets.getByName(&quot;Tabelle10_2&quot;)
 &apos; oSrc = oSheetSRC.getCellRangeByPosition(SrcRange).RangeAddress
 &apos; oSrc = oSheetSRC.getCellRangeByName(&quot;A1&quot;).RangeAddress
 oDest = oSheetDest.getCellRangeByPosition(sDestCell).CellAddress
 &apos; oDest = oSheetDest.getCellRangeByName(&quot;B1&quot;).CellAddress
 oSheetDest.copyRange(oDest, oSrc)

exit function
print &quot;fermala&quot;

	&apos; get access to the document
	DocumentModel = ThisComponent
	DocumentView = DocumentModel.getCurrentController()
	DocumentFrame = DocumentView.Frame
	Dispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	Dim Args2(0) As New com.sun.star.beans.PropertyValue
	Args2(0).Name = &quot;Nr&quot;
	Args2(0).Value = SourceSheetNum &apos;source sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args2())

	Dim Args3(0) As New com.sun.star.beans.PropertyValue
	Args3(0).Name = &quot;ToPoint&quot;
	Args3(0).Value = SrcRange&apos;
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args3())

	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:Copy&quot; ,&quot;&quot; ,0 ,Array())

	Dim Args4(0) As New com.sun.star.beans.PropertyValue
	Args4(0).Name = &quot;Nr&quot;
	Args4(0).Value = TargetSheetNum &apos;Target sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args4())

	Dim Args5(0) As New com.sun.star.beans.PropertyValue
	Args5(0).Name = &quot;ToPoint&quot;
	Args5(0).Value = TargetCell &apos;cella destinazione
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args5())

	Dim Args6(5) As New com.sun.star.beans.PropertyValue
	Args6(0).Name = &quot;Flags&quot;
	Args6(0).Value = &quot;T&quot;
	Args6(1).Name = &quot;FormulaCommand&quot;
	Args6(1).Value = 0
	Args6(2).Name = &quot;SkipEmptyCells&quot;
	Args6(2).Value = False
	Args6(3).Name = &quot;Transpose&quot;
	Args6(3).Value = False
	Args6(4).Name = &quot;AsLink&quot;
	Args6(4).Value = False
	Args6(5).Name = &quot;MoveMode&quot;
	Args6(5).Value = 4
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:InsertContents&quot; ,&quot;&quot; ,0 ,Args6())
end Function



Function Trova_sommano$ (ByVal lrow As Long)&apos;As Long&apos; restituisce il num d riga dove c&apos;è &quot;sommano&quot; 
&apos;(ByVal lrow As Long) &apos; 11111111111111111111111111111111111
	 oSheet = ThisComponent.currentController.activeSheet 
	lcol = 3
	lcolS = lcol
	 oCell = oSheet.GetCellByPosition(3 , lrow )
	xA =oCell.String
	If xA = &quot;SOMMANO &quot; then 
 	 goto sommano_trovato 
	end if 
 Do while xA &lt;&gt; &quot;SOMMANO &quot;
 		lrow= lrow + 1
 	 oCell = oSheet.GetCellByPosition( 3 , lrow)
 	 xA =oCell.String
 	 ThisComponent.CurrentController.Select(oCell)
 &apos;	 print

 	 Loop
 sommano_trovato:
 Trova_sommano = lrow
 &apos;	 ThisComponent.CurrentController.Select(oCell)

End function




Function Copia_Formato (SourceSheetNum as long, TargetSheetNum as long, TargetCell, SrcRange as variant) 

	&apos; get access to the document
	DocumentModel = ThisComponent
	DocumentView = DocumentModel.getCurrentController()
	DocumentFrame = DocumentView.Frame
	Dispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	Dim Args2(0) As New com.sun.star.beans.PropertyValue
	Args2(0).Name = &quot;Nr&quot;
	Args2(0).Value = SourceSheetNum &apos;source sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args2())
&apos;print &quot;andato sulla sheet&quot;
	Dim Args3(0) As New com.sun.star.beans.PropertyValue
	Args3(0).Name = &quot;ToPoint&quot;
	Args3(0).Value = SrcRange&apos;
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args3())

	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:Copy&quot; ,&quot;&quot; ,0 ,Array())
&apos;print &quot;andato su range e copio&quot;
	Dim Args4(0) As New com.sun.star.beans.PropertyValue
	Args4(0).Name = &quot;Nr&quot;
	Args4(0).Value = TargetSheetNum &apos;Target sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args4())
&apos;print &quot;torno su targhet&quot;
	Dim Args5(0) As New com.sun.star.beans.PropertyValue
	Args5(0).Name = &quot;ToPoint&quot;
	Args5(0).Value = TargetCell &apos;cella destinazione
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args5())
&apos;print &quot;andato su cella&quot;
	Dim Args6(5) As New com.sun.star.beans.PropertyValue
	Args6(0).Name = &quot;Flags&quot;
	Args6(0).Value = &quot;T&quot;
	Args6(1).Name = &quot;FormulaCommand&quot;
	Args6(1).Value = 0
	Args6(2).Name = &quot;SkipEmptyCells&quot;
	Args6(2).Value = False
	Args6(3).Name = &quot;Transpose&quot;
	Args6(3).Value = False
	Args6(4).Name = &quot;AsLink&quot;
	Args6(4).Value = False
	Args6(5).Name = &quot;MoveMode&quot;
	Args6(5).Value = 4
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:InsertContents&quot; ,&quot;&quot; ,0 ,Args6())
wait 100
&apos;print &quot;copio&quot;
end Function

Function Copia_Formato_2 (SourceSheetNum, TargetSheetNum, TargetCell, SrcRange as variant) 
&apos;	oSheet = ThisComponent.currentController.activeSheet
&apos;	oSheetScr = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;) 




	&apos; get access to the document
	DocumentModel = ThisComponent
	DocumentView = DocumentModel.getCurrentController()
	DocumentFrame = DocumentView.Frame

	&apos; the dispatcher service is used to send commands from the 
	&apos; document frame to the underlaying office application
	Dispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
&apos;	Dim Args1(0) As New com.sun.star.beans.PropertyValue
&apos;	Args1(0).Name = &quot;ToPoint&quot;
&apos;	Args1(0).Value = &quot;Sheet6.F20&quot;
&apos;	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args1())

	Dim Args2(0) As New com.sun.star.beans.PropertyValue
	Args2(0).Name = &quot;Nr&quot;
	Args2(0).Value = SourceSheetNum &apos;source sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args2())

	Dim Args3(0) As New com.sun.star.beans.PropertyValue
	Args3(0).Name = &quot;ToPoint&quot;
	Args3(0).Value = SrcRange&apos;&quot;$E$45:$AI$47&quot; &apos; range sorgente
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args3())

	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:Copy&quot; ,&quot;&quot; ,0 ,Array())

	Dim Args4(0) As New com.sun.star.beans.PropertyValue
	Args4(0).Name = &quot;Nr&quot;
	Args4(0).Value = TargetSheetNum &apos;Target sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args4())

	Dim Args5(0) As New com.sun.star.beans.PropertyValue
	Args5(0).Name = &quot;ToPoint&quot;
	Args5(0).Value = TargetCell &apos;cella destinazione
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args5())

	Dim Args6(5) As New com.sun.star.beans.PropertyValue
	Args6(0).Name = &quot;Flags&quot;
	Args6(0).Value = &quot;T&quot;
	Args6(1).Name = &quot;FormulaCommand&quot;
	Args6(1).Value = 0
	Args6(2).Name = &quot;SkipEmptyCells&quot;
	Args6(2).Value = False
	Args6(3).Name = &quot;Transpose&quot;
	Args6(3).Value = False
	Args6(4).Name = &quot;AsLink&quot;
	Args6(4).Value = False
	Args6(5).Name = &quot;MoveMode&quot;
	Args6(5).Value = 4
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:InsertContents&quot; ,&quot;&quot; ,0 ,Args6())
end Function


Sub Trattini_in_Analisi ()&apos; &apos;controlla se ci sono trattini alla fine di ogni voce di analisi
&apos;al momento non c&apos;è niente che la richiama e nemmeno è assegnata ad uno short cut...
&apos; richiamarla da?? 
dim lrowW as long
dim lrow as long
	oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
	lrow = 1	
	oCell = oSheet.getCellByPosition (0,lrow)
&apos;	ThisComponent.CurrentController.Select(oCell)&apos; debug
	xA = oCell.string
&apos;	print xA
	do while xA = &quot;&quot;
		lrow = lrow +1
&apos;		print lrow
		oCell = oSheet.getCellByPosition (0,lrow)
		xA = oCell.string
	loop
	&apos; ok, trovata la prima
	if xA = &quot;----&quot; then 
		ThisComponent.CurrentController.Select(oCell)
	 	print &quot;Abbiamo un problema!!&quot;	&apos; è ok
 		exit sub
 		else
 &apos;		print &quot;e diverso&quot;
 	end if 	
 	lrow = lrow + 2
 	oCell = oSheet.getCellByPosition (0,lrow)
 	ThisComponent.CurrentController.Select(oCell)
 	xA = oCell.string
 	ThisComponent.CurrentController.Select(oCell)&apos; debug
 do while xA &lt;&gt; &quot;Fine ANALISI&quot;
 			do while xA = &quot;&quot;
				lrow = lrow +1
			&apos;	print lrow
				oCell = oSheet.getCellByPosition (0,lrow)
				ThisComponent.CurrentController.Select(oCell)&apos; debug
			&apos;	print&quot;&quot;
				xA = oCell.string
			loop
				if xA = &quot;----&quot; then 
				 	lrowW = lrow + 2
				 	oCell = oSheet.getCellByPosition (0,lrowW)
				 	xA = oCell.string
				 	ThisComponent.CurrentController.Select(oCell)&apos; debug
				 
				 	If xA = &quot;&quot; then
				 			ThisComponent.CurrentController.Select(oCell)
				 			print &quot;Temo ci siano 2 righe bianche tra queste analisi!!&quot;_
				 			&amp; &quot;Consiglio di lasciarne una sola...&quot;
				 			exit sub
				 	end if
				end if
				 	lrow = lrow + 2 
				 	oCell = oSheet.getCellByPosition (0,lrow)
				 	xA = oCell.string
				 	ThisComponent.CurrentController.Select(oCell)&apos; debug
				 	If xA = &quot;&quot; then
				 			lrow = lrow - 4
				 			oCell = oSheet.getCellByPosition (0,lrow)
				 			ThisComponent.CurrentController.Select(oCell)
				 			Print &quot;Temo manchi il segno ---- di chiusura della voce di analisi!!&quot;_
				 			&amp; &quot;Correggi e poi riprova...&quot;
				 			exit sub
				 		else
				 			If xA = &quot;Fine ANALISI&quot; then
				 			 		exit sub
				 			 	else
				 					lrowW = lrow + 2
				 					oCell = oSheet.getCellByPosition (0,lrow)
				 					xA = oCell.string
				 			end if
				 end if
lrow = lrow +1		 
oCell = oSheet.getCellByPosition (0,lrow)
xA = oCell.string					 
Loop

END SUB

&apos;___________________________________________________________________________________
Sub Riformatta_Voce_Analisi &apos; versione standard &apos; prob. non più usata
&apos; traballina... per il momento accontentiamoci!
dim lSrow as long
dim lrowe as long
dim TargetCell as string
Dim CellRangeAddress As New com.sun.star.table.CellRangeAddress
dim oCelle as object
msgbox &quot;se leggi questo messaggio scrivimi citando: Sub Riformatta_Voce_Analisi&quot;
	lSrow= Range2Cell &apos; queste 4 righe per ridurre a cella iniziale un eventuale range
	if lSrow = -1 then
		 
		exit sub
	end if
&apos;	oSheet = ThisComponent.currentController.activeSheet
	oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)

	oCell = oSheet.GetCellByPosition( 0 , lSrow)&apos; errata selezione di un range
 &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;	ThisComponent.CurrentController.Select(oCell)

&apos;	oVoce = CircoscrivileAnalisi_5$ (lSrow)
&apos;print &quot;parto da &quot; &amp; lSrow
	oVoce = CircoscrivileAnalisi_7 (lSrow)

&apos;	ThisComponent.CurrentController.Select(oVoce)
&apos;	print
	lrowS = oVoce.RangeAddress.Startrow &apos;+1
	lrowE = oVoce.RangeAddress.Endrow
	lcolS = 0
print 4444444444444
	&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
	Rifa_Sum_Ana_sing(lrowS, lrowE)
	&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
	
	if lrows = 0 then

		print &quot;Non sei DENTRO una Analisi...&quot;
		exit sub
	end if
	
	lRowF = lRowE &apos; si userà alla fine per spostarsi a quella sotto
&apos;	ThisComponent.CurrentController.Select(ovoce)
&apos;print lrowE
	oCelle = osheet.getCellRangeByPosition (0,lrowS,8,lrowE )
&apos;	oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
&apos;	oCelle=thisComponent.getCurrentSelection()
	 
 &apos;	 lrowS = oCelle.RangeAddress.StartRow
 &apos;	 print lrowS
 	 TargetSheetNum = oCelle.RangeAddress.sheet
 	TargetSheetNum = TargetSheetNum+1
 	SourceSheetNum = SheetNameToNumber (&quot;S1&quot;)
 	SourceSheetNum = SourceSheetNum+1
 	
 &apos;xray oNomeS
 &apos;	print &quot;lrowS &quot; &amp; lrowS
&apos;	TargetCell = TargetSheetNum &amp; &quot;.A&quot; &amp; (lrowS+1)
	TargetCell = &quot;A&quot; &amp; (lrowS-1+1)
 &apos; print &quot;TargetCell &quot; &amp; TargetCell

 
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$42:$AW$44&quot;)
 &apos;formati prime 3 rows

	&apos;qwerty

&apos;	COPIA_ANCHE_ATTRIBUTI
 lrowE = oCelle.RangeAddress.EndRow
 TargetCell = &quot;A&quot; &amp; (lrowE+1 )
 &apos; print lrowe
 &apos; print &quot;TargetCell &quot; &amp; TargetCell
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$42:$Aw$42&quot;)
 &apos;formati riga GRIGIA

&apos;	print &quot;grigia &quot; &amp; lrowE-1 &amp; &quot; &quot; &amp; TargetCell
 lrowE = oCelle.RangeAddress.EndRow
 
 TargetCell = &quot;A&quot; &amp; (lrowE-1 +1)
 
 &apos; print &quot;TargetCell &quot; &amp; TargetCell
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$48:$AW$48&quot;)
 &apos;formati ultima riga 
 

 lrowE =lrowE-2
 &apos; print &quot;lrowe riaggiustato: &quot; &amp; lrowe
 oCell = oSheet.GetCellByPosition( 4 , lrowE)
 ThisComponent.CurrentController.Select(oCell)
 &apos; print &quot;riparto da &quot; &amp; lrowE
 xA = oCell.string
 do while xA &lt;&gt; &quot;rif. El. Prezzi&quot;
 &apos; print &quot;ciclo con &quot; &amp; lrowE
 	If xA = &quot;&quot; then
 			TargetCell = &quot;A&quot;+ (lrowE+1 )
 &apos;				print &quot;utili&quot;
 			&apos;print &quot;&quot;
 		 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$49:$AW$49&quot;)
 		 &apos;grigio
 			
 		else
 		 TargetCell = &quot;A&quot;+ (lrowE+1 )
 	&apos;	 print &quot;normale&quot;
 		 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$46:$AW$46&quot;)&apos; &quot;$AL$47:$AT$47&quot;)
 		 
 	end if
 	lrowE = lrowE-1
 	oCell = oSheet.GetCellByPosition( 4 , lrowE)
 	xA = oCell.string
	loop
		oCell = oSheet.GetCellByPosition( 1 , lrowF+3)
	 ThisComponent.CurrentController.Select(oCell)
END SUB

Sub Rifa_Sum_Ana_sing(lrowS as long, lrowE as long ) &apos; 

&apos; FUNZIONA SOLO SU VECCHIE CON &quot;^Sommano^&quot;... COMPLETARLA SE SERVE
	oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
&apos;	lrowS = Range2Cell 
	&apos; oCell = oSheet.GetCellByPosition( lcol , lrow)
	&apos; ThisComponent.CurrentController.Select(oCell)
	lcol =6
	oCellB = oSheet.GetCellByPosition( lcol , lrowS)
	 sCol= ColumnNameOf(lcol)

lrow = lrowE
&apos;print lrow
	 do while oSheet.GetCellByPosition( lcol , lrow).string &lt;&gt; &quot;^Sommano^&quot; and _
	 		oSheet.GetCellByPosition( lcol , lrow).string &lt;&gt; &quot;^ Sommano ^&quot;
	 	 	lrow = lrow-1
		&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( lcol , lrow))
		&apos;	print lrow
	 loop

	 lrow = lrow+2
	
	 sFormula = &quot;=SUM(&quot; &amp; sCol &amp; lrowE &amp; &quot;:&quot; &amp; sCol &amp; lrow &amp; &quot;)&quot;
	 oCellB.setformula(sFormula )
&apos;print sFormula
	 lcol =7
	 sCol= ColumnNameOf(lcol)
	 sFormula1 = &quot;=SUM(&quot; &amp; sCol &amp; lrowE &amp; &quot;:&quot; &amp; sCol &amp; lrow &amp; &quot;)&quot;
	 oSheet.GetCellByPosition( lcol , lrowS).setformula(sFormula1)	
&apos;	 ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( scol , lrowS))
&apos;print sFormula1
	&apos; Rifa_Somma_Analisi (6,lrowS) 
End sub

Sub Riformatta_Voce_Analisi_special (Optional lSrow as long) &apos; è speciale perché converte le vecchie voci in nuove e
		&apos; e rifà le somme
&apos;dim lSrow as long
print &quot;se leggi questo messaggio scrivi citando: Sub Riformatta_Voce_Analisi_special&quot;
dim lrowe as long
dim TargetCell as string
Dim CellRangeAddress As New com.sun.star.table.CellRangeAddress
dim oCelle as object
&apos;print lsrow
	if ismissing (lSrow) or lSrow = 0 then
&apos;	print &quot;me la faccio&quot;
		lSrow= Range2Cell &apos; queste 4 righe per ridurre a cella iniziale un eventuale range
		if lSrow = -1 then
		 
		exit sub
	end if
	end if
		oSheet = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
		oCell = oSheet.GetCellByPosition( 0 , lSrow)
 &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;	ThisComponent.CurrentController.Select(oCell)

&apos;	oVoce = CircoscrivileAnalisi_5$ (lSrow)
&apos;print &quot;parto da &quot; &amp; lSrow
	oVoce = CircoscrivileAnalisi_7 (lSrow)
&apos;print &quot;torno&quot;
	ThisComponent.CurrentController.Select(oVoce)
&apos;	print &quot;tornato&quot;
	lrowS = oVoce.RangeAddress.Startrow &apos;+1
	lrowE = oVoce.RangeAddress.Endrow
	lcolS = 0
&apos;print lrowS

	if lrows = 0 then

		print &quot;Non sei DENTRO una Analisi...&quot;
		exit sub
	end if
	
	lRowF = lRowE &apos; si userà alla fine per spostarsi a quella sotto
&apos;	ThisComponent.CurrentController.Select(ovoce)
&apos;print lrowE
	oCelle = osheet.getCellRangeByPosition (0,lrowS,8,lrowE )
&apos;	oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
&apos;	oCelle=thisComponent.getCurrentSelection()
	 
 &apos;	 lrowS = oCelle.RangeAddress.StartRow
 &apos;	 print lrowS
 	 TargetSheetNum = oCelle.RangeAddress.sheet
 	TargetSheetNum = TargetSheetNum+1
 	SourceSheetNum = SheetNameToNumber (&quot;S1&quot;)
 	SourceSheetNum = SourceSheetNum+1
 	
 &apos;xray oNomeS
 &apos;	print &quot;lrowS &quot; &amp; lrowS
&apos;	TargetCell = TargetSheetNum &amp; &quot;.A&quot; &amp; (lrowS+1)
	TargetCell = &quot;A&quot; &amp; (lrowS-1+1)
 
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AT$42:$BD$44&quot;)
 &apos;Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$42:$AW$44&quot;)
 &apos;formati prime 3 rows

	 oSheet = ThisComponent.currentController.activeSheet 

	oTargetSheet = ThisComponent.Sheets.getByName(&quot;S1&quot;)
 	oSRC = oTargetSheet.getCellRangeByName(&quot;AU43:BC44&quot;).RangeAddress
 &apos;oSRC = oTargetSheet.getCellRangeByName(&quot;AQ43:AV44&quot;).RangeAddress 
 	oDest = oSheet.GetCellByPosition( 3, lrowS ).CellAddress
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 	oSheet.copyRange(oDest,oSRC)&apos; per copiare colori, formati e dati

&apos;	COPIA_ANCHE_ATTRIBUTI
 lrowE = oCelle.RangeAddress.EndRow
 TargetCell = &quot;A&quot; &amp; (lrowE+1 )
 &apos; print &quot;2&quot; &amp; lrowe
 &apos; print &quot;TargetCell &quot; &amp; TargetCell
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AT$42:$BD$42&quot;)
 &apos; Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$42:$Aw$42&quot;)

 &apos;formati riga GRIGIA

&apos;	print &quot;grigia &quot; &amp; lrowE-1 &amp; &quot; &quot; &amp; TargetCell
 lrowE = oCelle.RangeAddress.EndRow
 
 TargetCell = &quot;A&quot; &amp; (lrowE-1 +1)
 
 &apos; print &quot;TargetCell &quot; &amp; TargetCell
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AT$48:$BD$48&quot;)
 &apos; Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$48:$AW$48&quot;)
 &apos;formati ultima riga 
 
 
 	oSRC = oTargetSheet.getCellRangeByName(&quot;AT48:BB48&quot;).RangeAddress 
 &apos;	oSRC = oTargetSheet.getCellRangeByName(&quot;AN48:AU48&quot;).RangeAddress 
 	oDest = oSheet.GetCellByPosition( 0, lrowe-1 ).CellAddress
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 	oSheet.copyRange(oDest,oSRC)&apos; per copiare colori, formati e dati
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;	
	Rifa_Somma_Analisi (6,lrowS) 
	
 lrowE =lrowE-2
 &apos; print &quot;lrowe riaggiustato: &quot; &amp; lrowe
 oCell = oSheet.GetCellByPosition( 4 , lrowE)
 ThisComponent.CurrentController.Select(oCell)
 &apos; print &quot;riparto da &quot; &amp; lrowE
 xA = oCell.string
 do while xA &lt;&gt; &quot;rif. El. Prezzi&quot;
 &apos; print &quot;ciclo con &quot; &amp; lrowE
 	If xA = &quot;&quot; then
 			TargetCell = &quot;A&quot;+ (lrowE+1 )
 &apos;		 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 		 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AT$49:$BD$49&quot;)
 	&apos;	 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$49:$AW$49&quot;)

 		 &apos;grigio
 			
 		else
 		 TargetCell = &quot;A&quot;+ (lrowE+1 )
 	&apos;	 print &quot;normale&quot;
 &apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 		 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AT$46:$BD$46&quot;)&apos;
 &apos;	 Copia_Formato (SourceSheetNum, TargetSheetNum, TargetCell, &quot;$AN$46:$AW$46&quot;)&apos; &quot;$AL$47:$AT$47&quot;)
 		 
 	end if
 	lrowE = lrowE-1
 	oCell = oSheet.GetCellByPosition( 4 , lrowE)
 	xA = oCell.string
	loop
	
		oCell = oSheet.GetCellByPosition( 1 , lrowF+3)
	 ThisComponent.CurrentController.Select(oCell)
	 &apos;print
END SUB



&apos;__________________________________________________________________________

FUNCTION CircoscrivileAnalisi_7(ByVal lrow As Long) &apos;individua un record di Analisi
&apos;---------------------------------------------------------------------------
							&apos;restituisce il range

dim lrowS as long
dim lrowE as long
	 oSheet = ThisComponent.currentController.activeSheet 
	lcol = 0
	oCell = oSheet.GetCellByPosition( 0 , lrow)
&apos;ThisComponent.CurrentController.Select(oCell)
&apos;print &quot;0&quot; &amp; lrow
	nCurRow = lrow
&apos;	print lrow
	Do while oSheet.GetCellByPosition( 4, nCurRow).string &lt;&gt; &quot;TOTALE&quot; and oSheet.GetCellByPosition( 5, nCurRow).string &lt;&gt; &quot;TOTALE&quot;&apos; And nCurRow &gt; 2 
				if nCurRow &lt; 2 then
					Do while oSheet.GetCellByPosition( 4, nCurRow).string &lt;&gt; &quot;TOTALE&quot; And oSheet.GetCellByPosition( 5, nCurRow).string &lt;&gt; &quot;TOTALE&quot;
	&apos;print oSheet.GetCellByPosition( 4, nCurRow).string
						nCurRow = nCurRow+1
						oCell=oSheet.GetCellbyPosition( 5, nCurRow)
				&apos;		ThisComponent.CurrentController.Select(oCell)
				&apos;		print &quot;iniz&quot;
					loop
				end if
 				nCurRow = nCurRow-1
				oCell=oSheet.GetCellbyPosition( 5, nCurRow)
			&apos;	ThisComponent.CurrentController.Select(oCell)
			&apos;	print &quot;!1&quot;
	loop
	lrowS = nCurRow
&apos;	print nCurRow
	Do while oSheet.GetCellByPosition( 0, nCurRow).string &lt;&gt; &quot;----&quot; 
				nCurRow = nCurRow+1
				oCell=oSheet.GetCellbyPosition( 0, nCurRow)
			&apos;					ThisComponent.CurrentController.Select(oCell)
			&apos;	print &quot;2&quot;
	loop
	lrowE = nCurRow+1

 oRangeVoceC = osheet.getCellRangeByPosition (0,lrowS,250,lrowE )

	CircoscrivileAnalisi_7 = oRangeVoceC
&apos; ThisComponent.CurrentController.Select(oRangeVoceC)
&apos; print &quot;questo?&quot;
end Function


&apos;================================================================================= 
		
FUNCTION CircoscrivileAnalisi_7_ATT (ByVal lrow As Long) &apos;individua un record di Analisi
&apos;---------------------------------------------------------------------------
	&apos;non funziona bene.. !!						&apos;restituisce il range

dim lrowS as long
dim lrowE as long
	 oSheet = ThisComponent.currentController.activeSheet 
	lcol = 0
	oCell = oSheet.GetCellByPosition( 0 , lrow)
ThisComponent.CurrentController.Select(oCell)
&apos;print
	nCurRow = lrow
&apos;	print lrow
&apos;	Do while oSheet.GetCellByPosition( 4, nCurRow).string &lt;&gt; &quot;TOTALE&quot; And nCurRow &gt; 2
	oCell=oSheet.GetCellbyPosition( 3, nCurRow)
	Do while (Trova_Attr_N (oCell, oSheet)) &lt;&gt; &quot;Start_voce_ANALISI&quot; and nCurRow &gt; 2&apos;_
&apos;		and ((oSheet.GetCellByPosition( 0, nCurRow).string &lt;&gt; &quot;&quot;)_
&apos;			or	 (oSheet.GetCellByPosition( 0,nCurRow).string &lt;&gt;&quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 1,nCurRow).string &lt;&gt; &quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 2,nCurRow).string &lt;&gt; &quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 3,nCurRow).string = &quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 4,nCurRow).string &lt;&gt; &quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 5,nCurRow).string &lt;&gt; &quot;&quot;)_
&apos;			 or (oSheet.GetCellByPosition( 6,nCurRow).string &lt;&gt; &quot;&quot;))_
	&apos;	or (oSheet.GetCellByPosition( 4, nCurRow).string &lt;&gt; &quot;TOTALE&quot;)	 &apos; era AND
						nCurRow = nCurRow-1
						oCell=oSheet.GetCellbyPosition( 3, nCurRow)
	&apos;loop		&apos;	loop
	ThisComponent.CurrentController.Select(oCell)
&apos;	if (Trova_Attr_N (oCell, oSheet)) = &quot;Start_voce_ANALISI&quot; then
	&apos;	print &quot;trovato&quot; &amp; nCurRow
&apos;	end if
&apos;	print &quot;111&quot;
	loop	
	if nCurRow &lt; 2 then
					Do while (Trova_Attr_N (oCell, oSheet)) &lt;&gt; &quot;Start_voce_ANALISI&quot;_
						and ((oSheet.GetCellByPosition( 0, nCurRow).string = &quot;&quot;)_
							or (oSheet.GetCellByPosition( 0,nCurRow).string =&quot;&quot;)_
							or (oSheet.GetCellByPosition( 1,nCurRow).string = &quot;&quot;)_
			 				or (oSheet.GetCellByPosition( 2,nCurRow).string = &quot;&quot;)_
			 				or (oSheet.GetCellByPosition( 3,nCurRow).string = &quot;&quot;)_
							or (oSheet.GetCellByPosition( 4,nCurRow).string = &quot;&quot;)_
			 				or (oSheet.GetCellByPosition( 5,nCurRow).string = &quot;&quot;)_
			 				or (oSheet.GetCellByPosition( 6,nCurRow).string = &quot;&quot;))_
						and (oSheet.GetCellByPosition( 4, nCurRow).string &lt;&gt; &quot;TOTALE&quot;)	
							nCurRow = nCurRow+1
							oCell=oSheet.GetCellbyPosition( 3, nCurRow)
							ThisComponent.CurrentController.Select(oCell)
						&apos;	print &quot;iniz&quot; &amp; nCurRow
					loop
	end if
 				nCurRow = nCurRow+1
				oCell=oSheet.GetCellbyPosition( 3, nCurRow)
			&apos;	ThisComponent.CurrentController.Select(oCell)
			&apos;	print &quot;!1&quot;
&apos;	loop
	lrowS = nCurRow-1
&apos;	print nCurRow
	oCell=oSheet.GetCellbyPosition( 0, nCurRow)
	Do while (Trova_Attr_N (oCell, oSheet)) &lt;&gt; &quot;End_voce_ANALISI&quot; 
				nCurRow = nCurRow+1
				oCell=oSheet.GetCellbyPosition( 0, nCurRow)
		&apos;						ThisComponent.CurrentController.Select(oCell)
		&apos;		print &quot;2&quot;
	loop
	lrowE = nCurRow+1

 oRangeVoceC = osheet.getCellRangeByPosition (0,lrowS,250,lrowE )

	CircoscrivileAnalisi_7_ATT = oRangeVoceC
 ThisComponent.CurrentController.Select(oRangeVoceC)
 &apos;print &quot;questo?&quot;
end Function

&apos;================================================================================= 
Sub Concatena_Analisi_Funzione
&apos; inizia dalla riga corrente
Dim lrow as long
Dim lrowE as long
dim lastUrow as long
&apos;if msgbox (&quot;Attento! la macro ri-registra le analisi in Elenco Prezzi... è meglio prima riplulirlo ANNULLO? &quot;, 4) = 6 then
&apos;	exit sub
&apos;end if


	oSheet = thiscomponent.Sheets.getByName (&quot;Analisi di Prezzo&quot;)
	&apos;----------------------------------------
	if msgbox (&quot; La macchina sta per riformattare la tabella &quot;&quot;Analisi di Prezzo&quot;&quot; &quot;&amp; CHR$(10)_
				&amp; &quot;uniformando gli stili di cella a quelli della maschera in S1!&quot;&amp; CHR$(10)_
				&amp; &quot; Consiglio di salvare prima il documento!&quot; &amp; CHR$(10)_
			&amp;	&quot;ATTENZIONE! la macro ri-registra le analisi in Elenco Prezzi...bisogna prima ripulirlo...?&quot;&amp; CHR$(10)_
			&amp; &quot; ANNULLO? &quot;, 4,&quot;&quot;&amp; CHR$(10)) = 6 then
		&apos;	&amp;&quot;&quot;,4, &quot;&quot;&amp; CHR$(10)) = 7 then

		exit sub	
	end if

	ThisComponent.CurrentController.Select(oSheet)
&apos;&apos;
	Var = InputBox(&quot;Formattazione di tutte le Analisi: Da quale numero di riga vuoi iniziare?&quot;, &quot;Inserisci il numero di riga da cui vuoi iniziare a Formattare&quot;, &quot;1&quot;)
	If var = &quot;&quot; then
		exit sub
	end if
	lrow = CDbl(Var)
	
 &apos;	VarScelta = InputBox(&quot;Sovrascrivo colori e altre formattazioni forzate applicate localmente?&quot;&amp; CHR$(10)_
 &apos;	 &amp; &quot; 1 per mantenere --- 0 per sovrascrivere&quot; , &quot;SCEGLI 1 PER MANTENERE I FORMATI FORZATI - 0 PER SOVRASCRIVE CON GLI STILI&quot;, &quot;1&quot;)
&apos;	If VarScelta = &quot;&quot; then
&apos;			exit sub
&apos;	end if	
&apos;	VarScelta= CDbl(VarScelta)
	&apos;-------------------
&apos;	ThisComponent.CurrentController.Select(oSheet)
&apos;	lrow = 2
&apos;	oCell = oSheet.GetCellByPosition( 0 , lrow)
&apos;	ThisComponent.CurrentController.Select(oCell)
	lastUrow = getLastUsedRow(oSheet)
	sString$ = &quot;Fine ANALISI&quot; &apos; DOPPIO CONTROLLO sulla fine della sheet
	oEnd=uFindString(sString$, oSheet)
	If isNull (oEnd) or isEmpty (oEnd) then 
		ThisComponent.CurrentController.Select(oSheet.getCellByPosition(0, getLastUsedRow(oSheet)))
		msgbox &quot; Manca la riga rossa di chiusura della tabella! PROVVEDI6! &quot;
		exit sub
	end if 
	lRowE=oEnd.RangeAddress.EndRow 
&apos;	oCell = ThisComponent.CurrentSelection
 &apos; lrow = oCell.CellAddress.row
&apos;	oCell = oSheet.GetCellByPosition( 3 , lrow)
&apos;	xA = oCell.string

	Do while lrow &lt; lastUrow And lrow &lt; lRowE
&apos;	print lrow &amp; &quot; - &quot; &amp; lastUrow &amp; &quot; - &quot; &amp; lRowE
				 &apos;Do while oSheet.GetCellByPosition( 0, lrow).string &lt;&gt; &quot;&quot;
	 					lRow = lrow+1
			 &apos; loop			 
			&apos;	 if oSheet.GetCellByPosition( 0, lrow).string = &quot;----&quot; then
	 		&apos;				lRow = lrow+1
	 		&apos;		&apos;	else
	 		ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 0, lrow))
	 				&apos;	print &quot;ora&quot;
	 					dim sflag as string
	 					sflag = &quot;no&quot;
	 						ANALISI_IN_ELENCOPREZZI_Der(sflag) &apos;&quot;no&quot; è un flag che impedisce riordino e adatta riga
	 					&apos;	ANALISI_IN_ELENCOPREZZI(sflag) &apos;&quot;no&quot; è un flag che impedisce riordino e adatta riga
	 				
	 				&apos;	print lrow
	 					
	 						ThisComponent.CurrentController.Select(osheet)
	 						
	 					&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
	 						Riformatta_Voce_Analisi_special(lrow)
	 						&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
	 						
	 						oCell = ThisComponent.CurrentSelection
	 						lrow = oCell.CellAddress.row
	 					&apos;	Riformatta_Voce_Analisi(lrow)
	 				
		&apos;	 end if
			 &apos;&apos;&apos;oCell = ThisComponent.CurrentSelection
 		&apos;&apos;&apos;	lrow = oCell.CellAddress.row
			
		oCell = oSheet.GetCellByPosition( 0 , lrow)	
		if lrow &gt; lastUrow then 
			Msgbox &quot;Finito&quot;
			exit sub
		end if
 &apos;	 ThisComponent.CurrentController.Select(oCell) &apos; ok sono sulla cella giusta... debug
&apos;print
 	loop
 &apos;	msgbox &quot;La macchina ha rifatto tutte le somme delle quantità parziali del Computo! Sembra tutto a posto, ma non è detto...&quot;
END SUB
&apos;__________________________________________________________________________

Sub Concatena_Analisi_Funzione____________
&apos; inserire una richiesta se cominciare sul posto o dall&apos;inizio...
Dim lrow as long
Dim lrowE as long
dim lastUrow as long
	oSheet = thiscomponent.Sheets.getByName (&quot;Analisi di Prezzo&quot;)
	ThisComponent.CurrentController.Select(oSheet)
&apos;	lrow = 2
&apos;	oCell = oSheet.GetCellByPosition( 0 , lrow)
&apos;	ThisComponent.CurrentController.Select(oCell)
	lastUrow = getLastUsedRow(oSheet)
	sString$ = &quot;Fine ANALISI&quot; &apos; DOPPIO CONTROLLO sulla fine della sheet
	oEnd=uFindString(sString$, oSheet)
	If isNull (oEnd) or isEmpty (oEnd) then 
		ThisComponent.CurrentController.Select(oSheet.getCellByPosition(0, getLastUsedRow(oSheet)))
		msgbox &quot; Manca la riga rossa di chiusura della tabella! PROVVEDI7! &quot;
		exit sub
	end if 
	lRowE=oEnd.RangeAddress.EndRow 
	lrow = 2
	oCell = oSheet.GetCellByPosition( 3 , lrow)
	xA = oCell.string

	Do while lrow &lt; lastUrow And lrow &lt; lRowE
				 Do while oSheet.GetCellByPosition( 0, lrow).string &lt;&gt; &quot;&quot;
	 					lRow = lrow+1
			 loop			 
			&apos;	 if oSheet.GetCellByPosition( 0, lrow).string = &quot;----&quot; then
	 		&apos;				lRow = lrow+1
	 		&apos;			else
	 						Riformatta_Voce_Analisi_special(lrow)
		&apos;	 end if
			 
			
		oCell = oSheet.GetCellByPosition( 0 , lrow)	
 		 ThisComponent.CurrentController.Select(oCell) &apos; ok sono sulla cella giusta... @@@@ debug
print
 	loop
 &apos;	msgbox &quot;La macchina ha rifatto tutte le somme delle quantità parziali del Computo! Sembra tutto a posto, ma non è detto...&quot;
END SUB
&apos;_________________________________

Sub Controlla_Somme_Su_Tutto_Computo &apos;(msg As Boolean) 
&apos; inserire una richiesta se cominciare sul posto o dall&apos;inizio...
Dim lrow as long
Dim lrowE as long
dim lastUrow as long
	oSheet = thiscomponent.Sheets.getByName (&quot;COMPUTO&quot;)
	ThisComponent.CurrentController.Select(oSheet)
	lrow = 3
	oCell = oSheet.GetCellByPosition( 3 , lrow)
	ThisComponent.CurrentController.Select(oCell)
	lastUrow = getLastUsedRow(oSheet)
	sString$ = &quot;Fine Computo&quot; &apos; DOPPIO CONTROLLO sulla fine della sheet
	oEnd=uFindString(sString$, oSheet)
	If isNull (oEnd) or isEmpty (oEnd) then 
		ThisComponent.CurrentController.Select(oSheet.getCellByPosition(0, getLastUsedRow(oSheet)))
		msgbox &quot; Manca la riga rossa di chiusura della tabella! PROVVEDI8! &quot;
		exit sub
	end if 
	lRowE=oEnd.RangeAddress.EndRow 
	lrow = 3
	oCell = oSheet.GetCellByPosition( 2 , lrow)
	xA = oCell.string

	Do while lrow &lt; lastUrow And lrow &lt; lRowE
				Do while xA &lt;&gt; &quot;SOMMANO &quot; &apos;and lrow &lt; lastUrow
						If lrowE &lt;= lrow then
						sTag = &quot;esci&quot;
							exit do
						end if		
						lrow = lrow+1
 						oCell = oSheet.GetCellByPosition( 2 , lrow)
 						xA = oCell.string
						ThisComponent.CurrentController.Select(oCell) &apos; ok sono sulla cella giusta... @@@@ debug
					&apos;	print
		 		Loop
 		 if sTag = &quot;esci&quot; then
 		 		exit do
 		 end if
 	&apos;	 print 
 	&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
 		 Controlla_Somma_Computo_Sing_Voce
 	&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&apos;
		
		lrow = lrow+1
 		oCell = oSheet.GetCellByPosition( 3 , lrow)
 		xA = oCell.string
 		 ThisComponent.CurrentController.Select(oCell) &apos; ok sono sulla cella giusta... @@@@ debug
 	loop
 	if msg = 1 then
	 	msgbox &quot;La macchina ha rifatto tutte le somme delle quantità parziali del Computo! Sembra tutto a posto, ma non è detto...&quot;
	end if
END SUB


Sub Controlla_Somma_Computo_Sing_Voce &apos; agisce su una voce soltanto
 &apos;
dim nome_sheet as string
dim lrow1 as long
dim lcol as long
dim osheet as object
dim ocell as object
	nome_sheet = thisComponent.currentcontroller.activesheet.name

	sAttributo = Trova_Attr_Sheet
	if sAttributo &lt;&gt; &quot;TIPO_COMPUTO&quot; then
		msgbox &quot;#1 Questa macro non lavora su questa tipologia di tabella!&quot;&amp; CHR(10)_
		&amp; &quot;Eseguila su una tabella COMPUTO o similare!&quot;
		exit sub
	end if

	oSheet = ThisComponent.currentController.activeSheet &apos;controllo cella/range
	&apos; errata selezione di un range
	lrow= Range2Cell 
	oCell = oSheet.GetCellByPosition( 0 , lrow) 
 &apos;
 &apos; oCell = ThisComponent.CurrentSelection
 &apos; lrow = oCell.CellAddress.row
 &apos; print lrow 
 &apos; oRangeVC = Circoscrive_Voce_Computo_B (lrow) &apos;061218
	oRangeVC = Circoscrive_Voce_Computo_Att(lrow)
 lrow = oRangeVC.RangeAddress.EndRow
 oCell = oSheet.GetCellByPosition( 9 , lrow)
 &apos; print &quot;e adesso &quot; &amp; lrow
 &apos; ThisComponent.CurrentController.Select(oCell)
&apos;print lrow
&apos;xray osheet
print lrow
 Controlla_Somma_locale (9, lrow)
 rem LE SUCCESSIVE NON SONO PIù VALIDE DALLA 3.9.2
&apos; Controlla_Somma_locale (10, lrow) &apos; perizia di variante
&apos; Controlla_Somma_locale (12, lrow) &apos;sal1
&apos; Controlla_Somma_locale (13, lrow) &apos;sal1
&apos; Controlla_Somma_locale (14, lrow) &apos;sal1
&apos; Controlla_Somma_locale (15, lrow) &apos;sal1
&apos; Controlla_Somma_locale (16, lrow) &apos;sal1
&apos; Controlla_Somma_locale (17, lrow) &apos;sicurezza
&apos;print &quot;dopo la seriereisulta&quot;
&apos; xray osheet
 &apos;print &quot;e ritorno&quot;
&apos;	oCell = oSheet.GetCellByPosition( 3 , lrow+3)
&apos;	ThisComponent.CurrentController.Select(oCell)
&apos;	print
END SUB

Function Controlla_Somma_locale (lCol as long, lrowB as long) &apos; agisce su singola colonna richiamata da sub NON USATA
dim lrow as long
&apos;dim lcol as long
dim lrowE as long
Dim oCell as object
Dim oCellB as object
Dim osheet as object
	oSheet = ThisComponent.currentController.activeSheet
	
	 lrow = lrowB
	 
	nome_sheet = thisComponent.currentcontroller.activesheet.name

	 
&apos;	oCellB = oCell
&apos;	 xA = oCell.string
&apos;	oCellB = oSheet.GetCellByPosition( lcol , lrowB)
	 &apos;	ThisComponent.CurrentController.Select(oCell) &apos; debug
	&apos; print nome_sheet &amp; &quot; &quot; &amp; lrow
	 sCol= ColumnNameOf(lcol)

	do while oSheet.GetCellByPosition( lcol , lrow).string &lt;&gt; &quot;-&quot; &apos;or _
			if oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche in mezzo&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche in mezzo_R&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche sopra&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche sopra_R&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;vuote2&quot; or _
				lrow &lt; 4 then
				exit do
			 Else
				lrow = lrow-1
			end if
	Loop

	 lrow = lrow+2
	 Select Case nome_sheet
	 	Case &quot;COMPUTO&quot;
	 	oCell = oSheet.GetCellByPosition( lcol , lrowb)
	 		 sFormula = &quot;=SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb+1 &amp; &quot;)&quot;
	 	Case &quot;CONTABILITA&quot;
	 	oCell = oSheet.GetCellByPosition( lcol , lrowb-1)
	 		 sFormula = &quot;=IF(SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb &amp; &quot;)&lt;0;&quot;&quot;&quot;&quot;;SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb &amp; &quot;))&quot;
	 End select

&apos;	 sFormula = &quot;=SUM(&quot; &amp; sCol &amp; lrowB &amp; &quot;:&quot; &amp; sCol &amp; lrow-1 &amp; &quot;)&quot;
	 oCell.setformula(sFormula)
&apos;	 ThisComponent.CurrentController.Select(oCellB) &apos; debug
&apos;	 print 
end Function



&apos;*************************************************************************************************



Sub Indirizzo_in_forma_leggibile_
oActiveCell = ThisComponent.getCurrentSelection()
 oConv = ThisComponent.createInstance(&quot;com.sun.star.table.CellAddressConversion&quot;)
 oConv.Address = oActiveCell.getCellAddress
 xray oconv
 &apos;Print oConv.UserInterfaceRepresentation
 &apos;Print oConv.PersistentRepresentation
END SUB

&apos;_________________________________________________________________________________
Function ColumnNameOf( nColumnNumber As Long )&apos;converte num col in alfanumerico
 oDoc = ThisComponent
 oSheet = oDoc.getSheets().getByIndex( 0 ) &apos; there must always be a zero&apos;th sheet!
 lcolumns = oSheet.getColumns()
 lcolumn = lcolumns.getByIndex( nColumnNumber )
 cColumnName = lcolumn.getName()
 ColumnNameOf() = cColumnName
End Function 


</script:module>