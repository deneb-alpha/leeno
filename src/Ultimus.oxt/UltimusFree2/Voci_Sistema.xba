<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Voci_Sistema" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

FUNCTION templateTipo &apos; introdotta con nuovo template 5C
&apos;If thisComponent.Sheets.hasByName(&quot;S1&quot;) Then 
&apos;If ThisComponent.Sheets.getByName(&quot;COMPUTO&quot;)._
If ThisComponent.currentController.activeSheet._
	GetCellByPosition( 2 , 0).string = &quot;Rif. al Capitolato&quot; then
		templateTipo =&quot;ATT&quot;
	else
		templateTipo =&quot;5C&quot;
end if
END FUNCTION
&apos;______________________________________________________________________________________________

Function Copia_Formato (SourceSheetNum as long, TargetSheetNum as long, TargetCell, SrcRange as variant) 

	&apos; get access to the document
	DocumentModel = ThisComponent
	DocumentView = DocumentModel.getCurrentController()
	DocumentFrame = DocumentView.Frame
	Dispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	Dim Args2(0) As New com.sun.star.beans.PropertyValue
	Args2(0).Name = &quot;Nr&quot;
	Args2(0).Value = SourceSheetNum &apos;source sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args2())
&apos;print &quot;andato sulla sheet&quot;
	Dim Args3(0) As New com.sun.star.beans.PropertyValue
	Args3(0).Name = &quot;ToPoint&quot;
	Args3(0).Value = SrcRange&apos;
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args3())

	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:Copy&quot; ,&quot;&quot; ,0 ,Array())
&apos;print &quot;andato su range e copio&quot;
	Dim Args4(0) As New com.sun.star.beans.PropertyValue
	Args4(0).Name = &quot;Nr&quot;
	Args4(0).Value = TargetSheetNum &apos;Target sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args4())
&apos;print &quot;torno su targhet&quot;
	Dim Args5(0) As New com.sun.star.beans.PropertyValue
	Args5(0).Name = &quot;ToPoint&quot;
	Args5(0).Value = TargetCell &apos;cella destinazione
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args5())
&apos;print &quot;andato su cella&quot;
	Dim Args6(5) As New com.sun.star.beans.PropertyValue
	Args6(0).Name = &quot;Flags&quot;
	Args6(0).Value = &quot;T&quot;
	Args6(1).Name = &quot;FormulaCommand&quot;
	Args6(1).Value = 0
	Args6(2).Name = &quot;SkipEmptyCells&quot;
	Args6(2).Value = False
	Args6(3).Name = &quot;Transpose&quot;
	Args6(3).Value = False
	Args6(4).Name = &quot;AsLink&quot;
	Args6(4).Value = False
	Args6(5).Name = &quot;MoveMode&quot;
	Args6(5).Value = 4
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:InsertContents&quot; ,&quot;&quot; ,0 ,Args6())
wait 100
&apos;print &quot;copio&quot;
end Function

Function Copia_Formato_2 (SourceSheetNum, TargetSheetNum, TargetCell, SrcRange as variant) 
&apos;	oSheet = ThisComponent.currentController.activeSheet
&apos;	oSheetScr = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;) 




	&apos; get access to the document
	DocumentModel = ThisComponent
	DocumentView = DocumentModel.getCurrentController()
	DocumentFrame = DocumentView.Frame

	&apos; the dispatcher service is used to send commands from the 
	&apos; document frame to the underlaying office application
	Dispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
&apos;	Dim Args1(0) As New com.sun.star.beans.PropertyValue
&apos;	Args1(0).Name = &quot;ToPoint&quot;
&apos;	Args1(0).Value = &quot;Sheet6.F20&quot;
&apos;	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args1())

	Dim Args2(0) As New com.sun.star.beans.PropertyValue
	Args2(0).Name = &quot;Nr&quot;
	Args2(0).Value = SourceSheetNum &apos;source sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args2())

	Dim Args3(0) As New com.sun.star.beans.PropertyValue
	Args3(0).Name = &quot;ToPoint&quot;
	Args3(0).Value = SrcRange&apos;&quot;$E$45:$AI$47&quot; &apos; range sorgente
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args3())

	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:Copy&quot; ,&quot;&quot; ,0 ,Array())

	Dim Args4(0) As New com.sun.star.beans.PropertyValue
	Args4(0).Name = &quot;Nr&quot;
	Args4(0).Value = TargetSheetNum &apos;Target sheet
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:JumpToTable&quot; ,&quot;&quot; ,0 ,Args4())

	Dim Args5(0) As New com.sun.star.beans.PropertyValue
	Args5(0).Name = &quot;ToPoint&quot;
	Args5(0).Value = TargetCell &apos;cella destinazione
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,Args5())

	Dim Args6(5) As New com.sun.star.beans.PropertyValue
	Args6(0).Name = &quot;Flags&quot;
	Args6(0).Value = &quot;T&quot;
	Args6(1).Name = &quot;FormulaCommand&quot;
	Args6(1).Value = 0
	Args6(2).Name = &quot;SkipEmptyCells&quot;
	Args6(2).Value = False
	Args6(3).Name = &quot;Transpose&quot;
	Args6(3).Value = False
	Args6(4).Name = &quot;AsLink&quot;
	Args6(4).Value = False
	Args6(5).Name = &quot;MoveMode&quot;
	Args6(5).Value = 4
	Dispatcher.executeDispatch(DocumentFrame, &quot;.uno:InsertContents&quot; ,&quot;&quot; ,0 ,Args6())
end Function

Sub Controlla_Somma_Computo_Sing_Voce &apos; agisce su una voce soltanto
 &apos;
dim nome_sheet as string
dim lrow1 as long
dim lcol as long
dim osheet as object
dim ocell as object
	nome_sheet = thisComponent.currentcontroller.activesheet.name

	sAttributo = Trova_Attr_Sheet
	if sAttributo &lt;&gt; &quot;TIPO_COMPUTO&quot; then
		msgbox &quot;#1 Questa macro non lavora su questa tipologia di tabella!&quot;&amp; CHR(10)_
		&amp; &quot;Eseguila su una tabella COMPUTO o similare!&quot;
		exit sub
	end if

	oSheet = ThisComponent.currentController.activeSheet &apos;controllo cella/range
	&apos; errata selezione di un range
	lrow= Range2Cell 
	oCell = oSheet.GetCellByPosition( 0 , lrow) 
 &apos;
 &apos; oCell = ThisComponent.CurrentSelection
 &apos; lrow = oCell.CellAddress.row
 &apos; print lrow 
 &apos; oRangeVC = Circoscrive_Voce_Computo_B (lrow) &apos;061218
	oRangeVC = Circoscrive_Voce_Computo_Att(lrow)
 lrow = oRangeVC.RangeAddress.EndRow
 oCell = oSheet.GetCellByPosition( 9 , lrow)
 &apos; print &quot;e adesso &quot; &amp; lrow
 &apos; ThisComponent.CurrentController.Select(oCell)
&apos;print lrow
&apos;xray osheet
print lrow
 Controlla_Somma_locale (9, lrow)
 rem LE SUCCESSIVE NON SONO PIù VALIDE DALLA 3.9.2
&apos; Controlla_Somma_locale (10, lrow) &apos; perizia di variante
&apos; Controlla_Somma_locale (12, lrow) &apos;sal1
&apos; Controlla_Somma_locale (13, lrow) &apos;sal1
&apos; Controlla_Somma_locale (14, lrow) &apos;sal1
&apos; Controlla_Somma_locale (15, lrow) &apos;sal1
&apos; Controlla_Somma_locale (16, lrow) &apos;sal1
&apos; Controlla_Somma_locale (17, lrow) &apos;sicurezza
&apos;print &quot;dopo la seriereisulta&quot;
&apos; xray osheet
 &apos;print &quot;e ritorno&quot;
&apos;	oCell = oSheet.GetCellByPosition( 3 , lrow+3)
&apos;	ThisComponent.CurrentController.Select(oCell)
&apos;	print
END SUB

Function Controlla_Somma_locale (lCol as long, lrowB as long) &apos; agisce su singola colonna richiamata da sub NON USATA
dim lrow as long
&apos;dim lcol as long
dim lrowE as long
Dim oCell as object
Dim oCellB as object
Dim osheet as object
	oSheet = ThisComponent.currentController.activeSheet
	
	 lrow = lrowB
	 
	nome_sheet = thisComponent.currentcontroller.activesheet.name

	 
&apos;	oCellB = oCell
&apos;	 xA = oCell.string
&apos;	oCellB = oSheet.GetCellByPosition( lcol , lrowB)
	 &apos;	ThisComponent.CurrentController.Select(oCell) &apos; debug
	&apos; print nome_sheet &amp; &quot; &quot; &amp; lrow
	 sCol= ColumnNameOf(lcol)

	do while oSheet.GetCellByPosition( lcol , lrow).string &lt;&gt; &quot;-&quot; &apos;or _
			if oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche in mezzo&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche in mezzo_R&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche sopra&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;Comp-Bianche sopra_R&quot; or _
				oSheet.GetCellByPosition( lcol , lrow).cellstyle = &quot;vuote2&quot; or _
				lrow &lt; 4 then
				exit do
			 Else
				lrow = lrow-1
			end if
	Loop

	 lrow = lrow+2
	 Select Case nome_sheet
	 	Case &quot;COMPUTO&quot;
	 	oCell = oSheet.GetCellByPosition( lcol , lrowb)
	 		 sFormula = &quot;=SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb+1 &amp; &quot;)&quot;
	 	Case &quot;CONTABILITA&quot;
	 	oCell = oSheet.GetCellByPosition( lcol , lrowb-1)
	 		 sFormula = &quot;=IF(SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb &amp; &quot;)&lt;0;&quot;&quot;&quot;&quot;;SUBTOTAL(9;&quot;&amp; sCol &amp; lrow &amp; &quot;:&quot; &amp; sCol &amp; lrowb &amp; &quot;))&quot;
	 End select

&apos;	 sFormula = &quot;=SUM(&quot; &amp; sCol &amp; lrowB &amp; &quot;:&quot; &amp; sCol &amp; lrow-1 &amp; &quot;)&quot;
	 oCell.setformula(sFormula)
&apos;	 ThisComponent.CurrentController.Select(oCellB) &apos; debug
&apos;	 print 
end Function



&apos;*************************************************************************************************



Sub Indirizzo_in_forma_leggibile_
oActiveCell = ThisComponent.getCurrentSelection()
 oConv = ThisComponent.createInstance(&quot;com.sun.star.table.CellAddressConversion&quot;)
 oConv.Address = oActiveCell.getCellAddress
 xray oconv
 &apos;Print oConv.UserInterfaceRepresentation
 &apos;Print oConv.PersistentRepresentation
END SUB

&apos;_________________________________________________________________________________
Function ColumnNameOf( nColumnNumber As Long )&apos;converte num col in alfanumerico
 oDoc = ThisComponent
 oSheet = oDoc.getSheets().getByIndex( 0 ) &apos; there must always be a zero&apos;th sheet!
 lcolumns = oSheet.getColumns()
 lcolumn = lcolumns.getByIndex( nColumnNumber )
 cColumnName = lcolumn.getName()
 ColumnNameOf() = cColumnName
End Function 


</script:module>