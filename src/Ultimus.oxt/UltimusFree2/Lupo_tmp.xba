<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Lupo_tmp" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________


&apos;********************************************************
sub SetTabColor_1

colore = RGB(255,128,0)
	rem ----------------------------------------------------------------------
	rem define variables
	dim document as object
	dim dispatcher as object
	rem ----------------------------------------------------------------------
	rem get access to the document
	If ThisComponent.supportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot; ) Then
		document = ThisComponent.CurrentController.Frame
		dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
		
		rem ----------------------------------------------------------------------
		dim args1(0) as new com.sun.star.beans.PropertyValue
		args1(0).Name = &quot;TabBgColor&quot;
		args1(0).Value = colore &apos; RGB(255,128,0)
		dispatcher.executeDispatch(document, &quot;.uno:SetTabBgColor&quot;, &quot;&quot;, 0, args1())		
	End If
End Sub

Sub SetTabColor
	rem ----------------------------------------------------------------------
	rem define variables
	dim document as object
	dim dispatcher as object
	rem ----------------------------------------------------------------------
	rem get access to the document
	If ThisComponent.supportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot; ) Then
		document = ThisComponent.CurrentController.Frame
		dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
		
		rem ----------------------------------------------------------------------
		dispatcher.executeDispatch(document, &quot;.uno:TableSelectAll&quot;, &quot;&quot;, 0, Array())
		
		rem ----------------------------------------------------------------------
		dim args2(0) as new com.sun.star.beans.PropertyValue
		args2(0).Name = &quot;TabBgColor&quot;
		args2(0).Value = RGB(195,192,192)
	&apos;	args2(0).Value = &quot;33023&quot; &apos;&quot;Default&quot; &apos;RGB(0,128,255)
				
		dispatcher.executeDispatch(document, &quot;.uno:SetTabBgColor&quot;, &quot;&quot;, 0, args2())
	End If
End Sub


function cerca_in_arrayD(anArrayD as object, aString as string) as string
 dim iStop as integer
 iStop = UBound(anArrayD, 2)
 for i=0 to iStop
 if(anArrayD(0, i) = aString) then
 cerca_in_arrayD = anArrayD(1,i) &amp; &quot; - &quot; &amp; anArrayD(2,i)
 exit function
 end if
 next
end function

Sub dentro
&apos;	oSheet = ThisComponent.currentController.activeSheet
&apos;xray oSheet.getCellRangeByName(&quot;Aprova2&quot;)
&apos;exit sub
	oAreeNomi = StarDesktop.CurrentComponent.NamedRanges
	aNomi = oAreeNomi.getElementNames
	&apos;xray oAreeNomi
	&apos;oName.getReferredCells() 
	for i = 0 to ubound(aNomi)
 		oNome = oAreeNomi.getByName(aNomi(i))
		if oNome.NAME = &quot;Aprova2&quot;	 then
		&apos;	oNamedAddress = oNamedRange.referredCells.RangeAddress
		xray oNome &apos;.Content
&apos;		xray = oNome.referredCells.RangeAddress
&apos;		xray = oNome.getReferencePosition&apos; ( ) AS com.sun.star.table.CellAddress com.sun.star.sheet.XNamedRange 
&apos;		xray = oNome.getReferredCells ( ) 

		end if
 	next
end sub
&apos;_________________________________

&apos;For Each mShArea In mSheetAreas()
 &apos; oSh = oSheets.getByName(mShArea(0))
 &apos; oSh.PrintAreas() = mShArea(1)
 &apos; Next
 
 
function cerca_in_array(anArray as object, aString as string) as string
 dim iStop as integer
 iStop = UBound(anArray, 2)
 for i=0 to iStop
 if(anArray(0, i) = aString) then
 cerca_in_array = anArray(1,i)
 exit function
 end if
 next
end function


Sub ExampleArray______________________
Dim a(), i%
a = Array(0, 1, 2)
a = Array(&quot;Zero&quot;, 1, 2.0, Now)
rem String, Integer, Double, Date
For i = LBound(a()) To UBound(a())
Print TypeName(a(i))
Next
End Sub


SUB paolom
mAreas() = oSheet.getPrintAreas()
aRangeAddress = mAreas(0)


&apos;Come per tutti gli array in Basic puoi eseguire un ciclo anche senza usare direttamente gli indici (ciclo For Each...)

mAreas() = oSheet.getPrintAreas()
For Each aRangeAddress in mAreas()
 xray aRangeAddress
Next 
end sub


SUB Rifa_nomi_area____ &apos; questa li rifà e basta

&apos;impostazione dei dati delle aree
 dim a(3,15) as string
 
a(0,	0	) =	&quot;blocco_analisi&quot;
a(0,	1	) =	&quot;Bozza_8&quot;
a(0,	2	) =	&quot;data_prog_8&quot;
a(0,	3	) =	&quot;progetto_8&quot;
a(0,	4	) =	&quot;Super_ego_8&quot;

a(0,	6	) =	&quot;Nome_CC1&quot;
a(0,	7	) =	&quot;oData_8&quot;
a(0,	8	) =	&quot;Serv_gen1_8&quot;
a(0,	9	) =	&quot;utili&quot;
a(0,	10	) =	&quot;Serv_gen2&quot;
a(0,	11	) =	&quot;utili_gs&quot;
a(0,	12	) =	&quot;Schema_V_tmp&quot;
a(0,	13	) =	&quot;dati_Economici_Anagrafica	&quot;
a(0,	14	) =	&quot;elenco_prezzi&quot;
a(0,	15	) =	&quot;elenco_prezzi_R&quot;


a(1,	0	) =	&quot;$S1.$AT$42:$BC$48&quot;
a(1,	1	) =	&quot;$M1.$D$4&quot;
a(1,	2	) =	&quot;$M1.$C$19&quot;
a(1,	3	) =	&quot;$M1.$C$4&quot;
a(1,	4	) =	&quot;$M1.$B$4&quot;
a(1,	5	) =	&quot;$S1.$E$12&quot;
a(1,	6	) =	&quot;$S1.$E$2&quot;
a(1,	7	) =	&quot;$M1.$E$4&quot;
a(1,	8	) =	&quot;$S1.$E$45:$AQ$48&quot;
a(1,	9	) =	&quot;$S1.$AT$49:$BB$49&quot;
a(1,	10	) =	&quot;$S1.$AI$46:$AK$46&quot;
a(1,	11	) =	&quot;$S1.$AT$49:$BB$51&quot;
a(1,	12	) =	&quot;$S4.$FA$146:$GZ$149&quot;
a(1,	13	) =	&quot;$S2.$B$54:$E$55&quot;
a(1,	14	) =	&quot;$&apos;Elenco Prezzi&apos;.$A$2:$L$96&quot;
a(1,	15	) =	&quot;$&apos;Elenco Prezzi&apos;.$A$2:$L$96&quot;


a(2,	0	) =	&quot;S1&quot;
a(2,	1	) =	&quot;M1&quot;
a(2,	2	) =	&quot;M1&quot;
a(2,	3	) =	&quot;M1&quot;
a(2,	4	) =	&quot;M1&quot;
a(2,	5	) =	&quot;S1&quot;
a(2,	6	) =	&quot;S1&quot;
a(2,	7	) =	&quot;M1&quot;
a(2,	8	) =	&quot;S1&quot;
a(2,	9	) =	&quot;S1&quot;
a(2,	10	) =	&quot;S1&quot;
a(2,	11	) =	&quot;S1&quot;
a(2,	12	) =	&quot;S4&quot;
a(2,	13	) =	&quot;S2&quot;
a(2,	14	) =	&quot;Elenco Prezzi&quot;
a(2,	15	) =	&quot;Elenco Prezzi&quot;

a(3,	0	) = &quot;AT42&quot;
a(3,	1	) = &quot;D4&quot;
a(3,	2	) =	&quot;C19&quot;
a(3,	3	) =	&quot;C4&quot;
a(3,	4	) =	&quot;B4&quot;
a(3,	5	) =	&quot;E12&quot;
a(3,	6	) =	&quot;E2&quot;
a(3,	7	) =	&quot;E4&quot;
a(3,	8	) =	&quot;E45&quot;
a(3,	9	) =	&quot;AT49&quot;
a(3,	10	) =	&quot;AI46&quot;
a(3,	11	) =	&quot;AT49&quot;
a(3,	12	) =	&quot;FA146&quot;
a(3,	13	) =	&quot;B54&quot;
a(3,	14	) =	&quot;A2&quot;
a(3,	15	) =	&quot;A2&quot;


	oAreeNomi = StarDesktop.CurrentComponent.NamedRanges
	aNomi = oAreeNomi.getElementNames
	
	&apos;percorre l&apos;array (impostato sopra) con i dati dei Nomi di Area
	for i = 0 to ubound(a,2)
			&apos; se il nome di area c&apos;è già lo cancella 
		If ThisComponent.NamedRanges.hasByName(a(0,i)) Then
				 ThisComponent.NamedRanges.removeByName(a(0,i))
		End If	
			&apos; rimette insieme il celladdress del riferimento relativo
		oCellAddress = ThisComponent.Sheets.getByName(a(2,i)).getCellRangeByName(a(3,i)).getCellAddress()
			&apos; e rifà il nome di area
		ThisComponent.NamedRanges.addNewByName(a(0,i),a(1,i),oCellAddress,0 )
 	next
end sub&apos;

SUB Controlla_nomi_area___ &apos; questa controlla

&apos;impostazione dei dati delle aree
&apos; dim a(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18) as string
 dim a(1,19) as string
 
a(0,	0	) =	&quot;blocco_analisi&quot;
a(0,	1	) =	&quot;Bozza_8&quot;
a(0,	2	) =	&quot;data_prog_8&quot;
a(0,	3	) =	&quot;progetto_8&quot;
a(0,	4	) =	&quot;Super_ego_8&quot;

a(0,	6	) =	&quot;Nome_CC1&quot;
a(0,	7	) =	&quot;oData_8&quot;
a(0,	8	) =	&quot;Serv_gen1_8&quot;
a(0,	9	) =	&quot;utili&quot;
a(0,	10	) =	&quot;Serv_gen2&quot;
a(0,	11	) =	&quot;utili_gs&quot;
a(0,	12	) =	&quot;Schema_V_tmp&quot;
a(0,	13	) =	&quot;dati_Economici_Anagrafica	&quot;
a(0,	14	) =	&quot;SALspec&quot;
a(0,	15	) =	&quot;AAAspec&quot;
a(0,	16	) =	&quot;SAL&quot;
a(0,	17	) =	&quot;elenco_prezzi&quot;
a(0,	18	) =	&quot;elenco_prezzi_R&quot;
a(0,	19	) =	&quot;Lista&quot;

a(1,	0	) =	&quot;=$S1.$AT$42:$BC$48&quot;
a(1,	1	) =	&quot;$M1.$D$4&quot;
a(1,	2	) =	&quot;$M1.$C$19&quot;
a(1,	3	) =	&quot;$M1.$C$4&quot;
a(1,	4	) =	&quot;$M1.$B$4&quot;
a(1,	5	) =	&quot;$S1.$E$12&quot;
a(1,	6	) =	&quot;$S1.$E$2&quot;
a(1,	7	) =	&quot;$M1.$E$4&quot;
a(1,	8	) =	&quot;$S1.$E$45:$AQ$48&quot;
a(1,	9	) =	&quot;$S1.$AT$49:$BB$49&quot;
a(1,	10	) =	&quot;$S1.$AI$46:$AK$46&quot;
a(1,	11	) =	&quot;$S1.$AT$49:$BB$51&quot;
a(1,	12	) =	&quot;$S4.$FA$146:$GZ$149&quot;
a(1,	13	) =	&quot;$S2.$B$54:$E$55&quot;
a(1,	14	) =	&quot;$CONTABILITA.$M$48:$M$72&quot;
a(1,	15	) =	&quot;$CONTABILITA.$AR$48:$AR$72&quot;
a(1,	16	) =	&quot;$CONTABILITA.$M$2:$M$72&quot;
a(1,	17	) =	&quot;$&apos;Elenco Prezzi&apos;.$A$2:$L$96&quot;
a(1,	18	) =	&quot;$&apos;Elenco Prezzi&apos;.$A$2:$L$96&quot;
a(1,	19	) =	&quot;$&apos;Elenco Prezzi&apos;.$A$2:$A$96&quot;



	oAreeNomi = StarDesktop.CurrentComponent.NamedRanges
	aNomi = oAreeNomi.getElementNames

	&apos;If thisComponent.DatabaseRanges.hasByName(&quot;MyName1&quot;) OR _
&apos;		thisComponent.DatabaseRanges.hasByName(&quot;unnamed&quot;) then	
&apos;xray anomi
&apos;exit sub
&apos;print cerca_in_array(a,&quot;blocco_analisi&quot;) 

			for i = 0 to ubound(aNomi)
 				 oNome = oAreeNomi.getByName(aNomi(i))
 			&apos;	 xray onome
 				 sNome = oNome.getName	
 				 print snome
 				 exit sub			 
 				 	 &apos; le due che seguono annotano sulla tabella attiva i nomi di area e idati (decommentarle alla bisogna)
 					 &apos;ThisComponent.currentController.activeSheet.GetCellbyPosition( 0, i ).string = oNome.name
 					 &apos;ThisComponent.currentController.activeSheet.GetCellbyPosition( 1, i ).string = oNome.Content 
 				 if InStr(oNome.Content, &quot;#REF&quot;) &lt;&gt; 0 or InStr(oNome.Content,&quot;#rif!&quot;) &lt;&gt; 0 or _
 				 		oNome.Content = &quot;&quot;	 then
 						sCogn = cerca_in_array(a,sNome) 
 						if not isnull (sCogn) then
 					 	&apos;&apos;	print oNome.name &amp; &quot; &gt; &quot; &amp; oNome.Content &amp; &quot; ma diventa &quot; &amp; sCogn
 					 &apos;	xray oNome 
 					 &apos;	xray sCogn
 					 	&apos;	oNome.setContent = sCogn
 					 	&apos;xray oNome.Content
 					 		sName = &quot;SALspec&quot; &apos;&amp; c-iColBase+1
	sRange = &quot;$&apos;CONTABILITA&apos;.$M$&quot;&amp; iSALsopra &amp; &quot;:$M$&quot; &amp; iRowEnd_Aree 	
 	oCellAddress = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;).getCellRangeByName(&quot;A1&quot;).getCellAddress() &apos;Parameter aPosition specifies the base address for relative cell references
	If ThisComponent.NamedRanges.hasByName(sName) Then
 			 ThisComponent.NamedRanges.removeByName(sName)
	End If	
	ThisComponent.NamedRanges.addNewByName(sNome,sCogn,oCellAddress,0 )
 					 	end if
 					 &apos;	
 				&apos;	 xray 	oNome
 				 	 &apos;oNome.setContent(
 				 	&apos;	print&quot; l&apos; area &quot; &amp; oNome.name &amp; &quot;è corrotta&quot;
 				 end if
 				 &apos; questo serve per infilare a forzaun errore per testare
 				 if oNome.name = &quot;blocco_analisi&quot; then
 				 	&apos;oNome.Content = &quot;$contabilita.$k$#ref!:$k$#ref!&quot;
 				 end if
 
 			next
 &apos;	end if
exit sub&apos;
	If ThisComponent.NamedRanges.hasByName(sName) Then
 			 ThisComponent.NamedRanges.removeByName(sName)
	End If	
	ThisComponent.NamedRanges.addNewByName(SName,sRange,oCellAddress,0 )

 	If ThisComponent.NamedRanges.hasByName(&quot;AAAspec&quot;) Then
 			 ThisComponent.NamedRanges.removeByName(&quot;AAAspec&quot;)
	End If
	sRange = &quot;$&apos;CONTABILITA&apos;.$AR&quot; &amp; &quot;$&quot; &amp; iSALsopra &amp; &quot;:$AR$&quot; &amp; iRowEnd_Aree 		
	ThisComponent.NamedRanges.addNewByName(&quot;AAAspec&quot;,sRange,oCellAddress,0 )	

	If thisComponent.DatabaseRanges.hasByName(&quot;MyName1&quot;) then	
			for i = 0 to ubound(mRangeNames)
 				 oDBRange = oDbRanges.getByName(mRangeNames(i))		 
 				 if thisComponent.DatabaseRanges.getByName(&quot;MyName1&quot;).AutoFilter = true then
 		 					subTurnOffAutoFilter 
 		 				&apos;	goto fine
 		 	 		else
 		 				Crea_AutoFilter	
 		 			&apos;	goto fine	 		
 		 		 end if
			next
		else
			Crea_AutoFilter	
	end if

end sub



</script:module>