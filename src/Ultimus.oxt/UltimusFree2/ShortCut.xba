<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ShortCut" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
rem Il codice contenuto in questo modulo è parte integrante del pacchetto UltimusFree					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________
&apos; gruppo di macro per ripulire (rimuovere?) il file di conf delle SC a livello di documento

sub rimuovi_SC_Doc &apos; svuota il file Current .xml del documento Corrente
	removeKeyConfigurationFromDoc(ConvertToUrl(ThisComponent.getURL())) 
end sub



&apos; svuota il file Current .xml di un documento (file picker)
Sub removeKeyConfigurationFromDoc(optional sFileURL as string)
	&apos;rimuove 
exit sub
 if isnull(sFileURL) or isEmpty(sFileURL) Then
 		sFileURL = GetFileURL( _
 	&quot;Select a file you want to remove the key configuration.&quot;)
 else
 	sMs = 0
 end if

 If sFileURL = &quot;&quot; Then Exit Sub
 oSFAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
 If oSFAccess.exists(sFileURL) Then
 If removeZipFileContent(sFileURL,sKeyConfigFile) Then
 	if sMs &lt;&gt; 0 then
		 msgbox &quot;removed.&quot;
		end if
 End If
 End If
End Sub

&apos; remove the key configuration file from zip
Function removeZipFileContent( sZipURL As String, _
 sContentName As String )
 &apos;On Error GoTo Handler: 
 on error resume next
 If NOT IsNull(oInputStream) Then
 Dim oZipPkg As Object, oSFA As Object
 Dim oContentStream As Object, oZipFolder As Object
 sSettingFile = &quot;current.xml&quot;
 sSettingDir = &quot;Configurations2/accelerator&quot;
 oZipPkg = CreateUnoService(&quot;com.sun.star.packages.Package&quot;)
 oZipPkg.initialize(array(sZipURL))
 If NOT oZipPkg.hasByHierarchicalName(sSettingDir) Then
 PutZipContentStream = False
 Exit Function
 End If
 oZipFolder = oZipPkg.getByHierarchicalName(sSettingDir)
 oContentStream = oZipPkg.createInstanceWithArguments(array(false))
 oPipe = CreateUnoService(&quot;com.sun.star.io.Pipe&quot;)
 oPipe.writeBytes(Array())
 oPipe.flush()
 oPipe.closeOutput()
 oContentStream.setInputStream(oPipe)
 
 If oZipFolder.hasByName(sSettingFile) Then
 oZipFolder.replaceByName(sSettingFile,oContentStream)
 oZipPkg.commitChanges()
 End If
 oPipe.closeInput()
 End If
 removeZipFileContent = True
 Exit Function
 Handler:
 msgbox &quot;Please close the file.&quot;
 removeZipFileContent = False
End Function

&apos; select a file
Function GetFileURL( sTitle As String )
 Dim oFilePicker As Object
 Dim sFileURL As String
 oFilePicker = CreateUnoService( _
 &quot;com.sun.star.ui.dialogs.FilePicker&quot;)
 oFilePicker.setTitle(sTitle)
 If oFilePicker.execute() = 1 Then
 sFileNames = oFilePicker.getFiles()
 sFileURL = sFileNames(0)
 End Function
 GetFileURL = sFileURL
End Function 

Sub SetUpKeyBinding&apos;(sModifier as string, sChiave as string, sAzione as string)
&apos; copyright Paolo Mantovani
Exit Sub 
Dim oModuleCfgMgrSupplier As Object
Dim oModuleCfgMgr As Object
Dim oWriterShortCutMgr As Object

Dim sCommand As String
Dim sLocCommand As String
Dim sMsg As String
Dim iMsgResult As Integer
print sModifier
	 &apos; Initialize strings
	 sCommand = &quot;service:vnd.pycalendar?execute&quot; &apos;python
	oModuleCfgMgr = ThisComponent.getUIConfigurationManager()&apos;.getUIConfigurationManager()
	oWriterShortCutMgr = oModuleCfgMgr.getShortCutManager
	
	Dim aKeyEvent As New com.sun.star.awt.KeyEvent
&apos;	With aKeyEvent
&apos;		.Modifiers = sModifier
&apos;		.KeyCode = sChiave
&apos;	End With
&apos;print sModifier
	With aKeyEvent
		.Modifiers = com.sun.star.awt.KeyModifier.MOD1 &apos;cioè API const for the CTRL key = 2
		.KeyCode = com.sun.star.awt.Key.NUM0
	End With
&apos;	xray aKeyEvent
&apos;	print sCommand 
&apos;xray oWriterShortCutMgr
	On Error Resume Next
	sLocCommand = oWriterShortCutMgr.getCommandByKeyEvent(aKeyEvent)
	On Error GoTo 0 &apos;restore the error handler

	Select Case sLocCommand
	
		Case = &quot;&quot; &apos;no previous bindings
			oWriterShortCutMgr.setKeyEvent( aKeyEvent, sCommand )
			oWriterShortCutMgr.store
			
		Case = sCommand &apos;ok the key event is already used by our command
			&apos;nothing to do
			
		Case Else &apos;the key event is already used by another command
		
			sMsg = &quot;La combinazione di tasti &quot;&quot;CTRL+T&quot;&quot; è già usata per il comando:&quot; &amp; Chr(10)
			sMsg = sMsg &amp; sLocCommand &amp; &quot;&quot;&quot;.&quot; &amp; Chr(10) &amp; Chr(10)
			sMsg = sMsg &amp; &quot;Si desidera ugualmente usare questa combinazione per lanciare Standard.Module1.Main?&quot;
					 
			iMsgResult = MsgBox( sMsg, 1)
			If iMsgResult = 1 Then
				oWriterShortCutMgr.removeKeyEvent( aKeyEvent)
				oWriterShortCutMgr.setKeyEvent( aKeyEvent, sCommand )
				oWriterShortCutMgr.store
			End If
			
	End Select
	
End Sub
</script:module>