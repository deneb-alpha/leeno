<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Magic" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________



Function Replace_G(Source As String, Search As String, NewPart As String)
 Dim Result As String
 Dim StartPos As Long
 Dim CurrentPos As Long
 
 Result = &quot;&quot;
 StartPos = 1
 CurrentPos = 1
 
 If Search = &quot;&quot; Then
 Result = Source
 Else 
 Do While CurrentPos &lt;&gt; 0
 CurrentPos = InStr(StartPos, Source, Search)
 If CurrentPos &lt;&gt; 0 Then
 Result = Result + Mid(Source, StartPos, _
 CurrentPos - StartPos)
 Result = Result + NewPart
 StartPos = CurrentPos + Len(Search)
 Else
 Result = Result + Mid(Source, StartPos, Len(Source))
 End If &apos; Position &lt;&gt; 0
 Loop 
 End If 
 
 Replace_G = Result
End Function



Sub Formula_magica_aggiorna &apos;su tutto il foglio
dim lrow as long
	
	&apos;ma prima vede se nella riga corrente c&apos;è una formula
	iRowQ= Range2Cell
	if iRowQ = -1 then exit Sub
&apos;	Formula_magica(iRowQ) &apos; e la scrive in col C
	
	oSheet = ThisComponent.currentController.activeSheet
	lLastUrow = getLastUsedRow(oSheet)
	lrow = 3

rem per circoscrivere l&apos;operazione alla singola voce di computo:
&apos;	lrow=thisComponent.getCurrentSelection().RangeAddress.StartRow
&apos;	sStRange = Circoscrive_Voce_Computo_Att (lRow)
&apos;	With sStRange.RangeAddress
&apos;		iVoce =.StartRow
&apos;		fVoce =.EndRow
&apos;	End With

	For lrow=3 to lLastUrow &apos;lrow=iVoce To fVoce&apos;lLastUrow
		if oSheet.GetCellbyPosition(5, lrow ).cellStyle= &quot;comp 1-a&quot; And _
			oSheet.GetCellbyPosition(2, lrow ).Type &lt;&gt; com.sun.star.table.CellContentType.FORMULA Then
 			Formula_magica (lrow)
		end if&apos; questo le aggiorna tutte
	
		sSimbDividente = &quot; &gt;( &quot;
&apos;	print 	InStr((oSheet.GetCellbyPosition( 2, lrow ).string) , sSimbDividente)
		if oSheet.GetCellbyPosition( 5, lrow ).cellStyle= &quot;comp 1-a&quot; and _
			InStr((oSheet.GetCellbyPosition( 2, lrow ).string) , sSimbDividente) &lt;&gt; 0 then
 			Formula_magica (lrow)
		end if
	next	

end Sub

Sub Formula_magica_off
&apos;	oEnd=uFindString(&quot; &gt;( &quot;, oSheet)
&apos;	If ismissing(oEnd) Or isNull(oEnd) Then
	oSheet = ThisComponent.currentController.activeSheet
	lLastUrow = getLastUsedRow(oSheet)
	lrow = 3
	For lrow=3 to lLastUrow &apos;lrow=iVoce To fVoce&apos;lLastUrow
		If oSheet.GetCellbyPosition( 5, lrow ).cellStyle= &quot;comp 1-a&quot; Then
			stringa = oSheet.GetCellbyPosition(2, lrow ).getString()
			If instr (stringa , &quot; &gt;( &quot;) &lt;&gt; 0 Then oSheet.GetCellbyPosition(2, lrow ).String = left (stringa, (instr (stringa , &quot; &gt;( &quot;)) -1)
		EndIf 
	Next
End Sub



Sub Formula_magica (optional iRowQ0 as long)&apos; scrive (sotto forma di testo e per esteso) tutti i numeri e le
					&apos; formule di calcolo che trova nelle colonne delle quantità
					&apos;l&apos;eventuale testo già immesso per &quot;localizzare&quot; le misure
					&apos; viene prelevato e accodato
					&apos; &apos; (se si ripete la macro lo ripreleva)
rem MODIFICATA Giuseppe Vizziello 2014
	iRowQ = iRowQ0
	oSheet = ThisComponent.currentController.activeSheet

	IF IsMissing (iRowQ) then 
		iRowQ= Range2Cell
		if iRowQ = -1 then
			
			exit sub
		end if
	end if
	
	dim iProvv as Double	
	if oSheet.GetCellByPosition( 2, iRowQ ).cellstyle = &quot;comp 1-a&quot; or _
		oSheet.GetCellByPosition( 5, iRowQ ).cellstyle = &quot;comp 1-a&quot;	then	
		sSimbDividente = &quot; &gt;( &quot;

		sComp=oSheet.GetCellByPosition( 2, iRowQ ).string
		if InStr(1, sComp, sSimbDividente) &lt;&gt; 0 then
			sComp = Left(sComp,InStr(1, sComp, sSimbDividente)-1) &apos; Restituisce la stringa 
		end If
	If left (oSheet.GetCellByPosition( 5, iRowQ ).formula, 1)=&quot;=&quot; Or _
		left (oSheet.GetCellByPosition( 6, iRowQ ).formula, 1)=&quot;=&quot; Or _
		left (oSheet.GetCellByPosition( 7, iRowQ ).formula, 1)=&quot;=&quot; Or _
		left (oSheet.GetCellByPosition( 8, iRowQ ).formula, 1)=&quot;=&quot; Then
		GoTo procedi:
		Else
		Exit Sub
	End If
	print
	procedi:

		If left (oSheet.GetCellByPosition( 5, iRowQ ).formula, 2)=&quot;=$&quot; Or _
			left (oSheet.GetCellByPosition( 5, iRowQ ).formula, 3)=&quot;=-$&quot; Then
			Exit Sub
		Else
		sString5 = oSheet.GetCellByPosition( 5, iRowQ ).formula
		If instr (sString5 , &quot;$&quot;) &lt;&gt; 0 Then sString5 = oSheet.GetCellByPosition( 5, iRowQ ).value
		End If 
			sProvv = Replace_G(sString5,&quot;=&quot;,&quot;&quot;)
			iProvv = sProvv
		 	if iProvv + 1.999958689 = 1.999958689 then
		 			if oSheet.GetCellByPosition( 5, iRowQ ).value = 0 then
		 					sString5 = &quot;&quot;
		 				else
							sString5 = oSheet.GetCellByPosition( 5, iRowQ ).formula
					end if
		 	end if	
	
		sString6 = oSheet.GetCellByPosition( 6, iRowQ ).formula
		If instr (sString6 , &quot;$&quot;) &lt;&gt; 0 Then sString5 = oSheet.GetCellByPosition( 6, iRowQ ).value
			sProvv = Replace_G(sString6,&quot;=&quot;,&quot;&quot;)
			iProvv = sProvv
		 	if iProvv + 1.999958689 = 1.999958689 then
		 			if oSheet.GetCellByPosition( 6, iRowQ ).value = 0 then
		 					sString6 = &quot;&quot;
		 				else
					 		sString6 = oSheet.GetCellByPosition( 6, iRowQ ).formula
					end if
		 	end if
		sString7 = oSheet.GetCellByPosition( 7, iRowQ ).formula
		If instr (sString7 , &quot;$&quot;) &lt;&gt; 0 Then sString5 = oSheet.GetCellByPosition( 7, iRowQ ).value
			sProvv = Replace_G(sString7,&quot;=&quot;,&quot;&quot;)
			iProvv = sProvv
		 	if iProvv + 1.999958689 = 1.999958689 then
		 			if oSheet.GetCellByPosition( 7, iRowQ ).value = 0 then
		 					sString7 = &quot;&quot;
		 				else
		 					sString7 = oSheet.GetCellByPosition( 7, iRowQ ).formula
		 			end if
		 	end if
		sString8 = oSheet.GetCellByPosition( 8, iRowQ ).formula
		If instr (sString8 , &quot;$&quot;) &lt;&gt; 0 Then sString5 = oSheet.GetCellByPosition( 8, iRowQ ).value
			sProvv = Replace_G(sString8,&quot;=&quot;,&quot;&quot;)
			iProvv = sProvv
		 	if iProvv + 1.999958689 = 1.999958689 then
		 			if oSheet.GetCellByPosition( 8, iRowQ ).value = 0 then
		 					sString8 = &quot;&quot;
		 				else
							sString8 = oSheet.GetCellByPosition( 8, iRowQ ).formula
					end if
		 	end if

		&apos; elimina qualsiasi spazio (anche n spazi)
		&apos; che potrebbe essere rimasto nella cella
		sString4 = Replace_G (sString4 , &quot; &quot; , &quot;&quot; )	
		sString5 = Replace_G (sString5 , &quot; &quot; , &quot;&quot; )			
		sString6 = Replace_G (sString6 , &quot; &quot; , &quot;&quot; )	
		sString7 = Replace_G (sString7 , &quot; &quot; , &quot;&quot; )		
		sString8 = Replace_G (sString8 , &quot; &quot; , &quot;&quot; )	
	
			
		iTag = 0
		if sString4 &lt;&gt; &quot;&quot; then 
			if left(sString4,1) = &quot;=&quot; then 
					sString4 =	&quot;(&quot; &amp; sString4 &amp;&quot;)&quot; 
				else
					 sString4 = sString4 
			end if
			iTag = 1
		end if	
		if sString5 &lt;&gt; &quot;&quot; then 
			if left(sString5,1) = &quot;=&quot; then 
					sString5 =	&quot;(&quot; &amp; sString5 &amp;&quot;)&quot;
				else
					 sString5 = sString5 
			end if
			if itag = 1 then &apos;
					sString5 =	&quot;*&quot; &amp; sString5
			end if	
			iTag = 1			
		end if

		if sString6 &lt;&gt; &quot;&quot; then 
			if left(sString6,1) = &quot;=&quot; then 
					sString6 =	&quot;(&quot; &amp; sString6 &amp;&quot;)&quot;
				else
					 sString6 = sString6 
			end if
			if itag = 1 then &apos;
					sString6 =	&quot;*&quot; &amp; sString6
			end if				
			iTag = 1
		end if
		
		if sString7 &lt;&gt; &quot;&quot; then 
			if left(sString7,1) = &quot;=&quot; then 
					sString7 =	&quot;(&quot; &amp; sString7 &amp;&quot;)&quot;
				else
					 sString7 = sString7 
			end if
			if itag = 1 then &apos;
					sString7 =	&quot;*&quot; &amp; sString7
			end if	
			iTag = 1
		end if
		
		
		if sString8 &lt;&gt; &quot;&quot; then 
			if left(sString8,1) = &quot;=&quot; then
					sString8 =	&quot;(&quot; &amp; sString8 &amp;&quot;)&quot;
				else
					 sString8 = sString8 
			end if
			if itag = 1 then &apos; and sString7 &lt;&gt; &quot;&quot; then 
					sString8 =	&quot;*&quot; &amp; sString8
			end if			
		end If
		If cLng(mid (oSheet.GetCellByPosition( 5, iRowQ ).formula, 2)) = 0 Then
			sString8 = sString4 &amp; &quot;par.ug.&quot; &amp;sString6 &amp; sString7 &amp; sString8 &amp; &quot;)&quot;
		Else
			sString8 = sString4 &amp; sString5 &amp; sString6 &amp; sString7 &amp; sString8 &amp; &quot;)&quot;
		EndIf
		Search = &quot;=&quot;
		NewPart = &quot;&quot;		
		sString8 = Replace_G (sString8 , Search , NewPart )			
		sTringTUTTA = sComp &amp; sSimbDividente &amp; sString8 

		oSheet.GetCellByPosition( 2, iRowQ ).Formula = sTringTUTTA
	end if&apos;

End Sub
</script:module>