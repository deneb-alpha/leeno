<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Menu" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL http://www.gnu.org/licenses/lgpl.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

rem ######################################################################
rem buona parte delle macro in questo modulo sono tratte da
rem http://www.pitonyak.org/AndrewMacro.odt
rem ######################################################################
Sub _nuove_icone
&apos;	sURL = ConvertToUrl(&quot;/home/giuserpe/Scaricati/00.png&quot;)
	sURL = LeenO_path +&quot;/icons/py.png&quot;
	sName = Replace_G(sURL, &quot;.png&quot;, &quot;&quot;)
	sNewURL= sName + &quot;_26h.bmp&quot;
	Filecopy sURL, sNewURL &apos;agisce direttamente su disco in modo &quot;invisibile&quot;
	sNewURL= sName + &quot;_26.bmp&quot;
	Filecopy sURL, sNewURL &apos;agisce direttamente su disco in modo &quot;invisibile&quot;
	sNewURL= sName + &quot;_16h.bmp&quot;
	Filecopy sURL, sNewURL &apos;agisce direttamente su disco in modo &quot;invisibile&quot;
	sNewURL= sName + &quot;_16.bmp&quot;
	Filecopy sURL, sNewURL &apos;agisce direttamente su disco in modo &quot;invisibile&quot;
	kill (sURL)
End Sub
rem ######################################################################

sub _molte_copie_file &apos;Giuseppe Vizziello 2014
	Dim sURL, sNewURL, sName As String
&apos;	sURL = ConvertToUrl(ThisComponent.getURL())
	sURL = ConvertToUrl(&quot;/home/giuserpe/Scaricati/00.ods&quot;)
 	sName = Replace_G(sURL, &quot;.ods&quot;, &quot;&quot;)
	For i=0 To 9
		sNewURL= sName + i + &quot;.ods&quot;
		Filecopy sURL, sNewURL &apos;agisce direttamente su disco in modo &quot;invisibile&quot;
	Next i

End Sub
rem ######################################################################

Function IsToolbarVisible(oDoc, sURL) As Boolean
	Dim oFrame
	Dim oLayout
	oFrame = oDoc.getCurrentController().getFrame()
	oLayout = oFrame.LayoutManager
	IsToolbarVisible = oLayout.isElementVisible(sURL)
End Function
rem ######################################################################

Sub SeeComponentsElements()
	Dim oDoc, oFrame
	Dim oCfgManager
	Dim oToolInfo
	Dim x
	Dim s$
	Dim iToolType as Integer
	oDoc = ThisComponent
	REM This is the integer value three.
	iToolType = com.sun.star.ui.UIElementType.TOOLBAR
	oFrame = oDoc.getCurrentController().getFrame()
	oCfgManager = oDoc.getUIConfigurationManager()
	oToolInfo = oCfgManager.getUIElementsInfo( iToolType )
	For Each x in oFrame.LayoutManager.getElements()
		s = s &amp; x.ResourceURL &amp; CHR$(10)
	Next
	MsgBox s, 0, &quot;Toolbars in Component&quot;
daVoce = InputBox (&quot;Da voce n.:&quot;, &quot;REGISTRA&quot;, daVoce)
xray	ThisComponent.getCurrentController().getFrame().LayoutManager.getElements()(daVoce)&apos;.ResourceURL()

End Sub
rem ######################################################################
Sub myTestToolBarVisible
	Dim s$, sName$
	For Each sName In GetmyToolBarNames()
		s = s &amp; IsToolbarVisible(ThisComponent, sName) &amp; _
		&quot;: &quot; &amp; sName &amp; CHR$(10)
	Next
	MsgBox s, 0, &quot;Toolbar Is Visible&quot;
End Sub
rem ######################################################################

Sub Toolbar_vedi&apos;(oDoc, sURL)
	Dim oLayout
	oDoc = thiscomponent
	oLayout = oDoc.CurrentController.getFrame().LayoutManager	
rem stabilisce il comportamento
rem se il livelli di difficoltà è impostato su 0 (primo approccio), tutte le toolbars restano visibili
	If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,316).value = 0 Then
rem SEMPRE VISIBILI
		Dim s$, sName$
		For Each sName In GetmyToolBarNames()
			toolbar_on (sName, 1)
		Next
	Else
rem CONTESTUALIZZATE
		For Each sName In GetmyToolBarNames()
			toolbar_on (sName, 0)
		Next
		toolbar_on (&quot;private:resource/toolbar/addon_ULTIMUS_3.OfficeToolBar&quot;, 1)
		Select Case oDoc.currentcontroller.activesheet.Name
			Case &quot;Elenco Prezzi&quot;
				toolbar_on(&quot;private:resource/toolbar/addon_ULTIMUS_3.OfficeToolBar_ELENCO&quot;, 1)
			Case &quot;Analisi di Prezzo&quot;
				toolbar_on(&quot;private:resource/toolbar/addon_ULTIMUS_3.OfficeToolBar_ANALISI&quot;, 1)
			Case &quot;COMPUTO&quot;, &quot;VARIANTE&quot;
				toolbar_on(&quot;private:resource/toolbar/addon_ULTIMUS_3.OfficeToolBar_COMPUTO&quot;, 1)
			Case &quot;CONTABILITA&quot;
				toolbar_on(&quot;private:resource/toolbar/addon_ULTIMUS_3.OfficeToolBar_CONTABILITA&quot;, 1)
			Case Else
		End Select
	EndIf
End Sub
rem ######################################################################
	
Sub toolbar_on (toolbarURL As string, optional flag As Integer) &apos;(C) Giuseppe Vizziello 2015
rem se il flag è 0 (zero) la toolbarURL viene nascosta
	Dim oDoc 	:	oDoc = thiscomponent
	Dim oLayout :	oLayout = oDoc.CurrentController.getFrame().LayoutManager
	If flag = 0 Then
		oLayout.hideElement(toolbarURL)
	else
		oLayout.showElement(toolbarURL)
	EndIf
End Sub
rem ######################################################################

Sub set_eventi_doc &apos;Giuseppe Vizziello 2014
rem controlla che il file sia un template LeenO
	Dim oDoc 	:	oDoc = thiscomponent
rem ----------------------------------------------------------------------
rem controllo esistenza proprietà definita dall&apos;utente
	Dim test() As Object 
	test() =oDoc.DocumentProperties.UserDefinedProperties.PropertyValues()
&apos;xray test(1).value
	If ubound(test()) &gt;= 2 Then 
		If oDoc.DocumentProperties.UserDefinedProperties.PropertyValues(2).name = &quot;Versione LeenO&quot; Then
&apos;			eventi_assegna
		EndIf	
	EndIf 
End Sub
rem ######################################################################


Sub eventi_pulisci &apos;Giuseppe Vizziello 2014
rem elimina tutte le macro legate agli eventi in ogni foglio e per l&apos;intero documento
rem da mettere in uscita
	Dim oDoc 				:	oDoc = thiscomponent
	Dim elenco_sheets() 	:	elenco_sheets() = oDoc.sheets.elementnames
	Dim eventi_sheet()		:	eventi_sheet() = oDoc.CurrentController.ActiveSheet.Events.ElementNames
	Dim eventi_doc() 		:	eventi_doc() = oDoc.Events.ElementNames
	For Each foglio In elenco_sheets()
		For Each evento In eventi_sheet() 
			Macro_SHEET (foglio, evento, &quot;&quot;)
		next
	Next
	For Each evento In eventi_doc()
		Macro_doc (evento, &quot;&quot;)
&apos;		s = s &amp; &quot;&apos;&quot; &amp; evento &amp; CHR$(10)
	Next
Macro_Doc (&quot;OnNew&quot;,				&quot;vnd.sun.star.script:Standard.Controllo.Controlla_Esistenza_LibUltimus?language=Basic&amp;location=document&quot;)
Macro_Doc (&quot;OnLoad&quot;,			&quot;vnd.sun.star.script:Standard.Controllo.Controlla_Esistenza_LibUltimus?language=Basic&amp;location=document&quot;)
&apos;	msgbox s
End Sub
rem ######################################################################
Sub computo_OnSelect
	cerca_in_elenco
End Sub

Sub elenco_OnFocus
	Toolbar_vedi
	If codice_da_cercare_in_elenco = &quot;Cod. Art.?&quot;  Then Exit Sub
	If codice_da_cercare_in_elenco &lt;&gt; &quot;&quot; Then
		oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
		oCell=uFindString(codice_da_cercare_in_elenco, oSheet)
		ThisComponent.CurrentController.Select(oCell)
		ThisComponent.CurrentController.setFirstVisibleRow(oCell.RangeAddress.StartRow)
	EndIf
End Sub
Sub elenco_OnUnFocus
	Toolbar_vedi
	codice_da_cercare_in_elenco = &quot;&quot;
End Sub


Sub eventi_assegna
&apos;Array : T( 0 To 6 ) As string  
&apos;(0)       | string : &quot;OnFocus&quot;
&apos;(1)       | string : &quot;OnUnfocus&quot;
&apos;(2)       | string : &quot;OnSelect&quot;
&apos;(3)       | string : &quot;OnDoubleClick&quot;
&apos;(4)       | string : &quot;OnRightClick&quot;
&apos;(5)       | string : &quot;OnChange&quot;
&apos;(6)       | string : &quot;OnCalculate&quot;
&apos;xray thiscomponent.currentcontroller.activesheet.events

&apos; (flag As integer)
&apos;	Dim oDoc 				:	oDoc = thiscomponent
&apos;	xray eventi_doc()
&apos;	If flag = 0 Then	Exit Sub
Macro_SHEET (&quot;Elenco Prezzi&quot;,	&quot;OnFocus&quot;,	&quot;vnd.sun.star.script:UltimusFree2.Menu.elenco_OnFocus?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;Elenco Prezzi&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.elenco_OnUnFocus?language=Basic&amp;location=application&quot;)

Macro_SHEET (&quot;Analisi di Prezzo&quot;,	&quot;OnFocus&quot;, 	&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;Analisi di Prezzo&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)

Macro_SHEET (&quot;COMPUTO&quot;,	&quot;OnFocus&quot;, 	&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;COMPUTO&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;COMPUTO&quot;,	&quot;OnSelect&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.computo_OnSelect?language=Basic&amp;location=application&quot;)

If thisComponent.Sheets.hasByName(&quot;VARIANTE&quot;) Then
	Macro_SHEET (&quot;VARIANTE&quot;,	&quot;OnFocus&quot;, 	&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
	Macro_SHEET (&quot;VARIANTE&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
	Macro_SHEET (&quot;VARIANTE&quot;,	&quot;OnSelect&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.computo_OnSelect?language=Basic&amp;location=application&quot;)
EndIf

Macro_SHEET (&quot;CONTABILITA&quot;,	&quot;OnFocus&quot;, 	&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;CONTABILITA&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.Toolbar_vedi?language=Basic&amp;location=application&quot;)
Macro_SHEET (&quot;CONTABILITA&quot;,	&quot;OnSelect&quot;,&quot;vnd.sun.star.script:UltimusFree2.Menu.computo_OnSelect?language=Basic&amp;location=application&quot;)

Macro_SHEET (&quot;S2&quot;,	&quot;OnUnfocus&quot;,&quot;vnd.sun.star.script:UltimusFree2.Header_Footer.set_header_auto?language=Basic&amp;location=application&quot;)
&apos;OnStartApp
&apos;OnCloseApp
&apos;OnCreate
Macro_Doc (&quot;OnNew&quot;,	&quot;vnd.sun.star.script:Standard.Controllo.Controlla_Esistenza_LibUltimus?language=Basic&amp;location=document&quot;)
&apos;OnLoadFinished
Macro_Doc (&quot;OnLoad&quot;,	&quot;vnd.sun.star.script:Standard.Controllo.Controlla_Esistenza_LibUltimus?language=Basic&amp;location=document&quot;)
Macro_Doc (&quot;OnPrepareUnload&quot;,	&quot;vnd.sun.star.script:UltimusFree2._variabili.autoexec_off?language=Basic&amp;location=application&quot;)
Macro_Doc (&quot;OnUnload&quot;,	&quot;vnd.sun.star.script:UltimusFree2.Lupo_0.Svuota_Globale?language=Basic&amp;location=application&quot;)
&apos;OnSave
&apos;OnSaveDone
&apos;OnSaveFailed
Macro_Doc (&quot;OnSaveAs&quot;,	&quot;vnd.sun.star.script:UltimusFree2.Lupo_0.Svuota_Globale?language=Basic&amp;location=application&quot;)
&apos;OnSaveAsDone
Macro_Doc (&quot;OnSaveAsFailed&quot;,	&quot;vnd.sun.star.script:UltimusFree2._variabili.autoexec?language=Basic&amp;location=application&quot;)
&apos;Macro_doc (&quot;OnCopyTo&quot;, &quot;vnd.sun.star.script:UltimusFree2.Lupo_0.Svuota_Globale?language=Basic&amp;location=application&quot;)
&apos;OnCopyToDone
&apos;OnCopyToFailed
&apos;OnFocus
&apos;OnUnfocus
&apos;OnPrint
&apos;OnViewCreated
&apos;OnPrepareViewClosing
&apos;OnViewClosed
&apos;OnModifyChanged
&apos;OnTitleChanged
&apos;OnVisAreaChanged
&apos;OnModeChanged
&apos;OnStorageChanged
End Sub
rem ######################################################################

Sub Macro_SHEET(nome As String, nomeEvento As string, miamacro As String)
rem http://bit.ly/1EgROQt
rem esempio: assegnaMacro_SHEET (&quot;COMPUTO&quot;, &quot;OnFocus&quot;, &quot;vnd.sun.star.script:UltimusFree2.Menu.SeeComponentsElements?language=Basic&amp;location=application&quot;)
rem ----------------------------------------------------------------------
rem nomeEvento:
rem &quot;OnFocus&quot;			entrando nel foglio
rem &quot;OnUnfocus&quot;			uscendo dal foglio
rem &quot;OnSelect&quot;			selezionando
rem &quot;OnDoubleClick&quot;		doppio click
rem &quot;OnRightClick&quot;		click destro
rem &quot;OnChange&quot;			modificando il contenuto
rem &quot;OnCalculate&quot;		mboh...
rem ----------------------------------------------------------------------
	Dim oDoc As Object, oFeuille As Object, oEve
	Dim PropEve(1) As New com.sun.star.beans.PropertyValue
	PropEve(0).Name = &quot;EventType&quot;
	PropEve(0).Value = &quot;Script&quot;
	PropEve(1).Name = &quot;Script&quot;
	PropEve(1).Value = miamacro &apos; persorso macro da assegnare
	oDoc = ThisComponent
	oFeuille = oDoc.Sheets.getbyname(nome) &apos;nome foglio
	oEve = oFeuille.Events
	oEve.replaceByName(nomeEvento, PropEve()) &apos; nome evento
End Sub


Sub Macro_Doc (nomeEvento As string, miamacro As String)
rem http://bit.ly/1EgROQt
rem esempio: assegnaMacro_doc(&quot;OnUnfocus&quot;, &quot;vnd.sun.star.script:UltimusFree2.Menu.SeeComponentsElements?language=Basic&amp;location=application&quot;)
rem ----------------------------------------------------------------------
rem ----------------------------------------------------------------------
	Dim oDoc As Object, oFeuille As Object, oEve
	Dim PropEve(1) As New com.sun.star.beans.PropertyValue
	PropEve(0).Name = &quot;EventType&quot;
	PropEve(0).Value = &quot;Script&quot;
	PropEve(1).Name = &quot;Script&quot;
	PropEve(1).Value = miamacro &apos; persorso macro da assegnare
	oDoc = ThisComponent
	oEve = oDoc.Events
	oEve.replaceByName(nomeEvento, PropEve()) &apos; nome evento
End Sub

Sub insertItem
   Dim oSheet as object, oMyCombo as object
   Dim ListEntries() as string

   oSheet = ThisComponent.CurrentController.ActiveSheet
	oDialog = CreateUnoDialog(DialogLibraries.UltimusFree2.Dialog_tabellaferri)
	&apos;		oDialogScenari_EP.getControl(&quot;Sommario Variante&quot;).State = 1
			oDialog.Execute()
   NewItem$ = &quot;Test&quot;
   with oMyCombo
      ListEntries = .StringItemList
      NextItemIndex% = UBound(ListEntries) + 1
      Redim Preserve ListEntries(NextItemIndex)
      ListEntries(NextItemIndex) = NewItem
      .StringItemList = ListEntries()
   End with
End Sub

Sub tabella_ferri
	oDialog1=CreateUnoDialog(DialogLibraries.UltimusFree2.Dialog_tabellaferri)
&apos;	ComboBox=oDialog1.getControl(&quot;ComboBox1&quot;)
	ListBox=oDialog1.getControl(&quot;ListBox1&quot;)
	oDialog1.Execute()
&apos;	xray oDialog1
	item = ListBox.SelectedItem
&apos;Item=ComboBox.Text	
	val0 = cDbl(split (item, &quot; &quot;)(2))
	
	ocell = thiscomponent.currentselection
		With ocell.CellAddress
		lcol = .Column
		lrow = .Row
		lshe = .Sheet
	End With
	oSheet = ThisComponent.currentController.activeSheet &apos; presumo sia il foglio CONTABILITA
	oSheet.getCellByPosition(lcol, lRow).Value = val0
End Sub

Sub ferri
&apos;	DialogLibraries.UltimusFree2.Dialog_tabellaferri
	oDialog1=CreateUnoDialog(DialogLibraries.UltimusFree2.Dialog_tabellaferri)
&apos;	DialogLibraries.LoadLibrary(&quot;Standard&quot;)
 &apos;      oDialog1=CreateUnoDialog(DialogLibraries.Standard.Dialog)
       &apos;-------ListBox--------
       ListBox=oDialog1.getControl(&quot;ListBox1&quot;)
       oDialog1.Execute()
       Item=ListBox.SelectedItem
       Print &quot;Selected Item in ListBox= &quot;+item
       Item=ListBox.GetSelectedItempos()
       Print &quot;Selected Itempos in ListBox= &quot;+item
       &apos;------ ComboBox ---------
       ComboBox=oDialog1.getControl(&quot;ComboBox1&quot;)
       
       Item=ComboBox.Text
       Print &quot;Selected Item in ComboBox= &quot;+item
       
       For x = 0 to ComboBox.ItemCount - 1
          If ComboBox.Items(x) = ComboBox.Text Then
             PickedItemPos = x
          end if
       next x
       Print &quot;SelectedItempos in ListBox= &quot;+ PickedItemPos 
End Sub 
</script:module>