<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Taxi_temp" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________


Sub P1
oSheetDest = ThisComponent.Sheets.getByName(&quot;Analisi di Prezzo&quot;)
	Set oView = ThisComponent.CurrentController
	Set oCalcSheet = oSheetDest
	oView.setActiveSheet(oCalcSheet)
	oCell = oSheetDest.GetCellByPosition( 5, lrow )
&apos;	xray oSheetDest
&apos;	xray ThisComponent.CurrentController
	xA = oCell.string
	lLastUrowNN = getLastUsedRow(oSheetDest)
&apos;	sString$ = &quot;Fine ANALISI&quot;
&apos;	oEnd = uFindString_taxi(sString$, oSheetDest)
&apos;	xray oEnd
&apos;	lLastUrowNN = oEnd.RangeAddress.EndRow 
	
&apos;	ThisComponent.CurrentController.Select(oSheetDest)	
&apos; ThisComponent.CurrentController.Select(oCell) &apos;debug @@@@@@@@@@@@@@@
&apos;	print lLastUrowNN

&apos;exit sub
&apos; percorre le analisi di Prezzo e ciascuna viene &quot;registrata nell&apos;Elenco Prezzi
	For i = lrow to lLastUrowNN - 3
&apos;print i &amp; &quot; &quot; &amp; lrow
	&apos;	 	if oCell.string = &quot;TOTALE&quot; OR (Trova_Attr_N (oCell1, oSheet)) = &quot;End_voce_ANALISI&quot; then
		
		
		&apos;lrow = lrow +1
		LROW 	= i 
		oCell = oSheetDest.GetCellByPosition( 4, lrow )
		ThisComponent.CurrentController.Select(oCell)
		xA = oCell.string
	&apos;	PRINT XA
			 if xA = &quot;TOTALE&quot; then
				 &apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	
				&apos;	Clessid_lock_End
				&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	
			 		&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
				 ANALISI_IN_ELENCOPREZZI_taxi (i)&apos;&apos; da modificare
				 
				 &apos;lrow = lrow +1
					&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
			 &apos;	Analisi_in_ElencoPrezzi_taxi(i)
			 end if
			 
	next
&apos;print lrow &amp; &quot; &quot; &amp; lLastUrowNN

&apos; Copia il computo da Computo_2 a Computo 
&apos; se era stato richiesto flag nella sub richiamata effettuerà o meno la copiatura

&apos;	UltimusFree2.Taxi.Solo_Computo (anche_computo) 
&apos;	UltimusFree2.Taxi.Anche_Dati_Progetto (anche_Dati)

&apos;	oSheets = ThisComponent.Sheets
&apos;	oSheets.removeByName(&quot;COMPUTO_2&quot;) 
&apos;	oSheets.removeByName(&quot;Analisi di Prezzo_2&quot;) 
&apos;	oSheets.removeByName(&quot;Elenco Prezzi_2&quot;) 
	
&apos;	oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
&apos;	Sel_Elenco_Prezzi
	
	
&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	
&apos;	Clessid_lock_End
&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	


	
	Msgbox &quot;L&apos;accodamento è terminato! &quot;&amp; CHR$(10)_
			&amp; &quot; Adesso puoi nuovamente toccare mouse e tastiera come ti pare! &quot;&amp; CHR$(10)_
			&amp; &quot;Il trasferimento delle voci mi risulta correttamente completato.... &quot;&apos; &amp; CHR$(10)_
		&apos;	&amp; &quot;Dovresti poi Adattare l&apos;altezza delle righe in alcune tabelle ! &quot;&apos;&amp; CHR$(10)_
	&apos;		&amp; &quot;...ma prima di lamentarti prova a riordinare l&apos;Elenco Prezzi.... !&quot;&amp; CHR$(10)_
	&apos;		&amp; &quot;... e adattare l&apos;altezza ottimale delle righe del Computo...&quot;
END SUB


Function Controlla_esistenza_sheet (sNameDocDest as string, sCurr_Sheet, sDest_sheet)
&apos; modulino in lavorazione... controlla se nel doc di destinazione esiste già una sheet con quel nome 
	secondDoc = stardesktop.LoadComponentFromUrl(sNameDocDest, &quot;_default&quot;, 0, Array())
 oSheets = secondDoc.getSheets()	
	aSheetNames = oSheets.getElementNames()
 For i = LBound( aSheetNames ) To UBound( aSheetNames )
 cSheetName2 = aSheetNames( i ) &apos; get string from array 
 If cSheetName2 = sDest_sheet Then
 			If msgbox (&quot;la tabella &quot; &amp; sDest_sheet &amp; &quot; esiste gà nel doc di destinazione...&quot;&amp; CHR$(10) _
 					 &amp; &quot;Se premi &quot;&quot;OK&quot;&quot; la elimino e proseguo... &quot;&amp; CHR$(10) _
 					 &amp; &quot;Se invece premi &quot;&quot;Annulla&quot;&quot; interrompo l&apos;accodamento!&quot; ,33, &quot;&quot;&amp; CHR$(10)) = 1 then
 					 oSheets.removebyname(cSheetName2)		
 					&apos;print &quot;rimossa! ... proseguo!! &quot; 			
 				else
 					oSheets.getByName(sDest_sheet).isVisible = TRUE
						selectSheetByName(secondDoc, sDest_sheet )
						msgbox &quot;Sul doc di destinazione (&quot; &amp; sNameDocDest &amp; &quot;) esiste già una tabella &quot; &amp; sDest_sheet &amp; CHR$(10) _
								&amp; &quot;decidi cosa farne...&quot;
						Controlla_esistenza_sheet = &quot;annulla&quot;
					&apos;	print &quot;annullo e seleziono!!!&quot;
						exit Function 
				end if
 End If
 Next
&apos; fine modulino di controllo esistenza
End Function


sub Main
&apos; Recorded by 
&apos; Date: Tue Jun 10 16:46:24 2008
	
	&apos; get access to the document
	oDocumentModel = ThisComponent
	oDocumentView = oDocumentModel.getCurrentController()
	oDocumentFrame = oDocumentView.Frame

	&apos; the dispatcher service is used to send commands from the 
	&apos; document frame to the underlaying office application
	oDispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	Dim mArgs1(0) As New com.sun.star.beans.PropertyValue
	mArgs1(0).Name = &quot;ToPoint&quot;
	mArgs1(0).Value = &quot;S2.A1:C1&quot;
	oDispatcher.executeDispatch(oDocumentFrame, &quot;.uno:GoToCell&quot; ,&quot;&quot; ,0 ,mArgs1())

	Dim mArgs2(2) As New com.sun.star.beans.PropertyValue
	mArgs2(0).Name = &quot;DocName&quot;
	mArgs2(0).Value = &quot;Esempio_55_Ultimus-3.1.xx_tmpp.ods_temp_&quot;
	mArgs2(1).Name = &quot;Index&quot;
	mArgs2(1).Value = 1
	mArgs2(2).Name = &quot;Copy&quot;
	mArgs2(2).Value = True
	oDispatcher.executeDispatch(oDocumentFrame, &quot;.uno:Move&quot; ,&quot;&quot; ,0 ,mArgs2())


end sub


sub selectSheetByName(document,sNameDocDest)
 document.getCurrentController.select(document.getSheets().getByName(sNameDocDest))
end sub

Sub Anche_Dati_Progetto (anche_Dati as boolean)

	If anche_Dati = true and _
		ThisComponent.Sheets.hasByName(&quot;S2_2&quot;) then 
&apos;	print &quot;copio Anagrafica!&quot;
			oSheet = ThisComponent.Sheets.getByName(&quot;S2_2&quot;)
			oSheetDest = ThisComponent.Sheets.getByName(&quot;S2&quot;)
			lLastrow = getLastUsedRow(oSheet)
			oSrc = oSheet.getCellRangeByPosition(1,1,8,lLastrow).RangeAddress &apos;
			oDest = oSheetDest.GetCellByPosition(1,1).CellAddress
			oSheetDest.copyRange(oDest, oSrc)
			ThisComponent.Sheets.removeByName(&quot;S2_2&quot;) 
			
			oSheet = ThisComponent.Sheets.getByName(&quot;M1_2&quot;)
			oSheetDest = ThisComponent.Sheets.getByName(&quot;M1&quot;)

		&apos;	oSrc = oSheet.getCellRangeByPosition(1,3,4,18).RangeAddress
			oSrc = oSheet.getCellRangeByPosition(1,3,1,3).RangeAddress
			oDest = oSheetDest.GetCellByPosition(1,3).CellAddress
			oSheetDest.copyRange(oDest, oSrc)

			oSrc = oSheet.getCellRangeByPosition(3,3,4,3).RangeAddress
			oDest = oSheetDest.GetCellByPosition(3,3).CellAddress
			oSheetDest.copyRange(oDest, oSrc)

			oSrc = oSheet.getCellRangeByPosition(2,5,2,9).RangeAddress
			oDest = oSheetDest.GetCellByPosition(2,5).CellAddress
			oSheetDest.copyRange(oDest, oSrc)	
&apos;	
			ThisComponent.Sheets.removeByName(&quot;M1_2&quot;) 

 	 Else
 		
 	 		If thisComponent.Sheets.hasByName(&quot;S2_2&quot;) Then &apos; se la sheet esiste
 	 	 	 	oSheets = ThisComponent.Sheets
 		 		oSheets.removeByName(&quot;S2_2&quot;) 
			end if
	 	 	If thisComponent.Sheets.hasByName(&quot;M1_2&quot;) Then &apos; se la sheet esiste
 	 	 	 	oSheets = ThisComponent.Sheets
 		 		oSheets.removeByName(&quot;M1_2&quot;) 
			end if		
 end if
End Sub


SUB Elimina_Tutti_Nomi_Definitiva 
dim n as integer
 oDoc = ThisComponent
 oAree=oDoc.NamedRanges&apos;
 oNomiArea() = oAree.ElementNames()
 n = oAree.Count - 1
 For i = 0 to n &apos; elimino i nomi fino ad elenco_prezzi (by Marco Caresia)
 	 if oNomiArea(i) = &quot;elenco_prezzi&quot; then 
 			exit for
 	 end if
 oAree. removeByName(oNomiArea(i)) 	
 next
&apos; nomi cancellati fino ad elenco_prezzi (escluso)
&apos; Adesso inverto l&apos;ordine di cancellazione incominciando 
&apos; dall&apos;ultima... (by Lido Bernardini)
	For i = 0 to oAree.getCount() - 1
	 	a = oAree.getCount()
		oNomiArea = oAree.ElementNames(a - 1)
		oAree. removeByName(oNomiArea)
	next
&apos;print &quot;finito!!&quot;
END SUB





sub Elimina_Tutti_NomiArea 

	oDoc = ThisComponent
	oAree=oDoc.NamedRanges&apos;
	dim iStep as integer
	dim iNumAree as integer
	dim i as integer
	
	
	oProgressbar =ThisComponent.GetCurrentController.GetFrame.CreateStatusIndicator()
 oProgressbar.Start(&quot;&quot;,100)

 iNumAree = oAree.getCount()
	iStep = (100/iNumAree)
	oProgressbar.Value = iStep
	
	 For i = 0 to oAree.getCount() - 1
			oNomiArea = oAree.ElementNames(n)
			oAree. removeByName(oNomiArea)
			iNew = ((istep *i) +1 )
		&apos;	If iNew = 0 then
		&apos;		 inew = istep
		&apos;	end if
	&apos;		print &quot;i &quot; &amp; i
	&apos;		oProgressbar.Value = (100 / i)&apos; /oAree.getCount())
			oProgressbar.Value = iNew
	&apos;		print (iStep * n )
		&apos;	print &quot; ho cancellato :&quot; &amp; oNomiArea
	next
&apos;print	inew
	oProgressbar.reset()
END SUB


Sub Solo_Computo_ (anche_computo as boolean)

&apos; l&apos;If che segue (con flag a true/false) verifica la scelta dell&apos;utente 
&apos; su copiare o meno anche il computo... 
	If anche_computo = true then 
		&apos; circoscrive e copiaComputo_2 in computo
	&apos;	print anche_computo
	
		oSheet = ThisComponent.Sheets.getByName(&quot;COMPUTO_2&quot;)
		
		&apos;ricerca della fine dl range da prelevare (fondo)
		sString$ = &quot;Fine Computo&quot;
		oEnd=uFindString_taxi(sString$, oSheet) 
		lrowEnd=oEnd.RangeAddress.EndRow 
		if oSheet.GetCellByPosition( 18, lrowEnd-1 ).cellstyle = &quot;Comp TOTALI num&quot; _
			or oSheet.GetCellByPosition( 18, lrowEnd-1 ).cellstyle = &quot;TOTALI num&quot; then
			&apos;	print &quot;caso 1&quot;For i
			lrowend =lrowEnd-1
		end if
		if oSheet.GetCellByPosition( 18, lrowEnd-2 ).cellstyle = &quot;Comp TOTALI num&quot; _
			or oSheet.GetCellByPosition( 18, lrowEnd-2 ).cellstyle = &quot;TOTALI num&quot; then
					&apos;	print &quot;caso 2&quot;
			lrowend =lrowEnd-2
		end if		
		if oSheet.GetCellByPosition( 18, lrowEnd-3 ).cellstyle = &quot;Comp TOTALI num&quot; _
			or oSheet.GetCellByPosition( 18, lrowEnd-3 ).cellstyle = &quot;TOTALI num&quot; then
			 &apos;	lrowend =lrowEnd-3
		end if	&apos; queste per evitare di includere righe di totali in posizioni improprie
		lrowend =lrowEnd-1
		
		
		&apos;questo invece per trovare l&apos;inizio (che esclusa righe di somme e totali)
		For i = 1 to 7
			if oSheet.GetCellByPosition( 18,i).cellstyle = &quot;livello-1-sopra&quot; _
			 	or oSheet.GetCellByPosition( 18,i).cellstyle = &quot;Comp-Bianche sopra&quot; then
			 	lrowInizio = i
			 	exit for
			end if 
		next
		

		oSrc = oSheet.getCellRangeByPosition(0,lrowInizio,250,lrowEnd-1).RangeAddress
		
		oSheetDest = ThisComponent.Sheets.getByName(&quot;COMPUTO&quot;)
		sString$ = &quot;Fine Computo&quot;
		oEnd=uFindString_taxi(sString$, oSheetDest)
		lrowDest=oEnd.RangeAddress.EndRow 
		if oSheetDest.GetCellByPosition( 18, lrowDest-1 ).cellstyle = &quot;Comp TOTALI num&quot; then
			lrowDest =lrowDest-2
		end if
		
	
		&apos;ThisComponent.getCurrentController.select(oSheetDest.getCellRangeByPosition(0,lrowdest,250,lrowdest))
		&apos;print lrowdest
		&apos;	exit sub
 	 oDest = oSheetDest.GetCellByPosition(0,lrowDest ).CellAddress
 	 oSheetDest.unprotect(&quot;&quot;)
 
		 &apos;exit sub
	insRows (lrowDest, lrowEnd -2 )
&apos; 	 oSheetDest.getRows.insertByIndex(lrowDest, lrowEnd -2 )
 	 oSheetDest.copyRange(oDest, oSrc)
 &apos;	 If mantieni_S2 = false then
 	 	oSheets = ThisComponent.Sheets
 	 	oSheets.removeByName(&quot;COMPUTO_2&quot;)
 	 	IF ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,314).string = 1 then
Rifa_Somme_TOT_Computo
		end if
&apos; 	 	End If 	
 	 &apos;oSheets = ThisComponent.Sheets
 &apos;	 &apos; 	oSheets.removeByName(&quot;COMPUTO_2&quot;)
 &apos;	 Else
 	 &apos; print &quot;mantieni_S2&quot; 
 	&apos; xray mantieni_S2
 	&apos;&apos; 	If mantieni_S2 = false then
 	&apos; 		oSheets = ThisComponent.Sheets
 	&apos; 		oSheets.removeByName(&quot;COMPUTO_2&quot;)
 	 	&apos;End If 	
 End if

END SUB

Sub dispatchURL (optional document, optional aURL) &apos; se da problemi mettere optional 2
		if isnull(document) then
			document=ThisComponent
		end if
		if isnull (document) then
			aURL = &quot;.uno:SelectAll&quot;
 end if
 Dim noProps()
 Dim URL as new com.sun.star.util.URL

 frame = document.getCurrentController().getFrame()
 URL.Complete = aURL
 transf = createUnoService(&quot;com.sun.star.util.URLTransformer&quot;)
 transf.parseStrict(URL)
 disp = frame.queryDispatch(URL, &quot;&quot;, com.sun.star.frame.FrameSearchFlag.SELF OR com.sun.star.frame.FrameSearchFlag.CHILDREN)
 disp.dispatch(URL, noProps())
End Sub


Sub dispatchURL2 (document, aURL) &apos; se da problemi mettere optional
&apos;document=thisconponent
	&apos;	aurl = &quot;.uno:SelectAll&quot;
 Dim noProps()
 Dim URL as new com.sun.star.util.URL

 frame = document.getCurrentController().getFrame()
 URL.Complete = aURL
 transf = createUnoService(&quot;com.sun.star.util.URLTransformer&quot;)
 transf.parseStrict(URL)
 disp = frame.queryDispatch(URL, &quot;&quot;, com.sun.star.frame.FrameSearchFlag.SELF OR com.sun.star.frame.FrameSearchFlag.CHILDREN)
 disp.dispatch(URL, noProps())
End Sub

</script:module>