<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Voci_Sistema_7" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

sub cella_cella_cella(oSheetSRC as object, oSheetDest as object, oRangeSRC as object, oRangeDest as object, mantieni_colori as long) 
&apos;sembra buona (e recente)


 Dim nCurCol As Integer
 Dim nCurRow As Integer
 Dim nEndCol As Integer
 Dim nEndRow As Integer
 Dim oCell As Object
 Dim oCursor As Object
 Dim aAddress As Variant
 Dim sFind As String
 &apos; dim mantieni_colori 
 
 if isnull (mantieni_colori) then
 	mantieni_colori =1
 end if
 
 
&apos;____________________________ 
&apos;	mantieni_colori = 1 &apos; se settata a 1 li mantiene
	&apos; a 0 sovrascive
&apos;----------------------------
&apos;PRINT mantieni_colori
 aAddress = oRangeSRC.RangeAddress
 nEndRow = aAddress.EndRow
 nStartRow = aAddress.StartRow			
 nEndCol = aAddress.EndColumn 
 nStartCol = aAddress.StartColumn 
 
 BAddress = oRangeDest.RangeAddress
 BEndRow = BAddress.EndRow
 BStartRow = BAddress.StartRow			
 BEndCol = BAddress.EndColumn 
 BStartCol = BAddress.StartColumn 
 
 difRow = BStartRow - nStartRow
 difCol = BStartCol - nStartCol
&apos; print difRow
&apos;print difCol
 &apos; Clessid_lock_Start
 &apos; ciclo di for nelle due direzioni
 For nCurCol = nStartCol To nEndCol &apos;Go through the range column by column,
 For nCurRow = nStartRow To nEndRow &apos;row by row. 
 
 oCellSRC = oSheetSRC.getCellByPosition( nCurCol, nCurRow )
 sCellStyle = oCellSRC.CellStyle
	if mantieni_colori = 0	then
				oCellSRC = oSheetSRC.getCellByPosition( nCurCol, nCurRow )
				oCellDest = oSheetDest.getCellByPosition( nCurCol+difCol, nCurRow+difRow )
 			oValidation = oCellSRC.ValidationLocal
 			sCellStyle = oCellSRC.CellStyle
 			oCellDest.CellStyle = sCellStyle
 			oCellDest.ValidationLocal = oValidation
 		else
 			 oCellSRC = oSheetSRC.getCellByPosition( nCurCol, nCurRow )
 			 	oCellDest = oSheetDest.getCellByPosition( nCurCol+difCol, nCurRow+difRow )
				oValidation = oCellSRC.ValidationLocal
 			 sCellStyle = oCellSRC.CellStyle
			 lcolorSRC =oCellDest.Cellbackcolor
 			lCharColorSRC =oCellDest.CharColor
 
 			&apos;	oCellDest = oSheetDest.getCellByPosition( nCurCol+difCol, nCurRow+difRow )
 				oCellDest.CellStyle = sCellStyle
 				oCellDest.ValidationLocal = oValidation 
 			oCellDest.Cellbackcolor = lcolorSRC 
 			oCellDest.CharColor = lCharColorSRC 
 			
 end if
 &apos; ThisComponent.CurrentController.Select(oCellDest)
 &apos; print &quot;a&quot;
 Next
 Next
 &apos; Clessid_lock_End
 &apos; oProgressbar.End
 &apos; msgbox &quot;Finito!&quot;
End sub



</script:module>