<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Strutture" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________
Sub Autofilter_On_Off &apos;per filtro Automatico su tabelle di tipo computo

&apos; Attiva /disattiva il filtro creato con questa macro
&apos; disattiva un filtro creato dalla GUI
	oDbRanges = StarDesktop.CurrentComponent.DatabaseRanges	
	mRangeNames = oDbRanges.getElementNames	
	If thisComponent.DatabaseRanges.hasByName(&quot;MyName1&quot;) OR _
		thisComponent.DatabaseRanges.hasByName(&quot;unnamed&quot;) then	
			for i = 0 to ubound(mRangeNames)
 				 oDBRange = oDbRanges.getByName(mRangeNames(i))
	 
 				 if odbrange.Name=&quot;MyName1&quot; then
 				 	if thisComponent.DatabaseRanges.getByName(&quot;MyName1&quot;).AutoFilter = true then
 		 					subTurnOffAutoFilter 
 		 					goto fine				 	
 				 	end if
 				 end if
 				 if odbrange.Name=(&quot;unnamed&quot;) then
 				 	if thisComponent.DatabaseRanges.getByName(&quot;unnamed&quot;).AutoFilter = true then
 		 					subTurnOffAutoFilter 
 		 					goto fine				 	
 				 	end if
 				 end if
 			next
 	end if
	Crea_AutoFilter	

	fine: 
end sub
&apos;#########################################################################

sub subTurnOffAutoFilter &apos; in test...
&apos;non mi è chiaro se cancella &quot;qualsiasi&quot; filtro Automatico
 
 dim oDbRanges as object, mRangeNames, oDBRange as object 
 dim i as integer 
 oCellStart=thisComponent.getCurrentSelection()&apos;.getCellAddress()
 oDbRanges = StarDesktop.CurrentComponent.DatabaseRanges 
 mRangeNames = oDbRanges.getElementNames 
 for i = 0 to ubound(mRangeNames) 
 	oDBRange = oDbRanges.getByName(mRangeNames(i))
 	sDBname = oDBRange.Name
 	&apos;print oDBname
	if oDBRange.AutoFilter = true then 
	 	&apos; get access to the document
		oDocumentModel = ThisComponent
		oDocumentView = oDocumentModel.getCurrentController()
		oDocumentFrame = oDocumentView.Frame

		&apos; the dispatcher service is used to send commands from the 
		&apos; document frame to the underlaying office application
		oDispatcher = CreateUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
		Dim mArgs2(0) As New com.sun.star.beans.PropertyValue
		mArgs2(0).Name = &quot;DbName&quot;
		mArgs2(0).Value = sDBname
		oDispatcher.executeDispatch(oDocumentFrame, &quot;.uno:SelectDB&quot; ,&quot;&quot; ,0 ,mArgs2())
		oDispatcher.executeDispatch(oDocumentFrame, &quot;.uno:DataFilterAutoFilter&quot; ,&quot;&quot; ,0 ,Array())
 end if 
 next 
 
	If ThisComponent.DatabaseRanges.hasByName(&quot;MyName1&quot;) Then
 		 ThisComponent.DatabaseRanges.removeByName(&quot;MyName1&quot;)
 	End If
 	oQualeSheet = ThisComponent.currentController.activeSheet
	ThisComponent.CurrentController.Select(oCellStart) 
 end sub 
&apos;#########################################################################


Sub Filter_On_Off_EP &apos;su elenco prezzi (non attiva... credo niente la azioni...)
	oDbRanges = StarDesktop.CurrentComponent.DatabaseRanges	
	mRangeNames = oDbRanges.getElementNames	
&apos;	xray oDbRanges
	If thisComponent.DatabaseRanges.hasByName(&quot;MyName1&quot;) then	
			for i = 0 to ubound(mRangeNames)
 				 oDBRange = oDbRanges.getByName(mRangeNames(i))		 
 				 if thisComponent.DatabaseRanges.getByName(&quot;MyName1&quot;).AutoFilter = true then
 		 					subTurnOffAutoFilter 
 		 					goto fine
 		 	 		else
 		 				Crea_AutoFilter	
 		 				goto fine	 		
 		 		 end if
			next
		else
			Crea_AutoFilter	
	end if
	fine: 
end sub




Sub removeSheetFilter() &apos;RIMUOVE IL &quot;FILTRO STANDARD&quot; SULLA SHEET CORRENTE
 Dim oSheet &apos; Sheet to filter.
 Dim oFilterDesc &apos; Filter descriptor.
 
 oSheet = ThisComponent.currentController.activeSheet
 &apos; oSheet = ThisComponent.getSheets().getByIndex(0)
 oFilterDesc = oSheet.createFilterDescriptor(True)
 oSheet.filter(oFilterDesc)
End Sub


sub subTurnOffAutoFilter_
&apos;print &quot;B&quot;
	dim oDbRanges as object, mRangeNames, oDBRange as object
	dim i as integer



	oDbRanges = StarDesktop.CurrentComponent.DatabaseRanges
	
		oCellStart=thisComponent.getCurrentSelection()&apos;.getCellAddress()
	mRangeNames = oDbRanges.getElementNames
	
	for i = 0 to ubound(mRangeNames)
 		 oDBRange = oDbRanges.getByName(mRangeNames(i))
	&apos;	 xray oDbRanges.getByName(mRangeNames(i))
 		 oDBRange.AutoFilter = false
 	 thisComponent.DatabaseRanges.getByName(&quot;MyName1&quot;).ReferredCells.Rows.IsVisible=true
	next
	ThisComponent.CurrentController.Select(oCellStart)
&apos;on error resume next
	oContr = ThisComponent.CurrentController
				&apos;	oContr.setFirstVisibleColumn (oCellStart.cellAddress.row)
					oContr.setFirstVisibleRow (oCellStart.cellAddress.row)
end sub
rem fine filtri
rem ----------------------------------------------------------------------

Sub Struttura
	Select case ThisComponent.currentController.activeSheet.Name
		Case &quot;COMPUTO&quot;, &quot;VARIANTE&quot;
	ScriptPy(&quot;pyleeno.py&quot;,&quot;struttura_ComputoM&quot;)
			exit sub
		Case &quot;CONTABILITA&quot;
			Struttura_Contab (&quot;#Lib#&quot;)
			exit Sub
		Case &quot;Registro&quot;
			Struttura_Contab (&quot;#Reg#&quot;)
			exit Sub
		Case &quot;SAL&quot;
			Struttura_Contab (&quot;#Sal#&quot;)
			exit Sub
		Case &quot;Analisi di Prezzo&quot;
	ScriptPy(&quot;pyleeno.py&quot;,&quot;struttura_Analisi&quot;)
			exit Sub
		Case &quot;Elenco Prezzi&quot;
	ScriptPy(&quot;pyleeno.py&quot;,&quot;struttura_Elenco&quot;)
			exit Sub
	End Select
&apos;ThisComponent.enableAutomaticCalculation(True)
end Sub
rem ----------------------------------------------------------------------
Sub Struttura_Contab (tag As string) &apos; (c) Giuseppe Vizziello 2014
	Dim nSaln As Integer
	Dim LSaln As Integer
	Dim oSheet As Object
	Dim oRanges As Object
	Togli_Struttura
	ThisComponent.CurrentController.ZoomValue = 100
	oSheet = ThisComponent.currentController.activeSheet
	oRanges = ThisComponent.NamedRanges
rem ----------------------------------------------------------------------
rem PROTEZIONE SHEET
&apos;	thisComponent.Sheets.getByName(oSheet.name).protect(&quot;&quot;)

	IF not oRanges.hasByName(tag &amp; &quot;1&quot;) Then 
		msgbox (&quot;Nel Libretto non è presente nessuna misura registrata!&quot;, 48 + 1, &quot;AVVISO!&quot;)
		Exit Sub
		else
		nSaln=idxSAL &apos;variabile impostata nel modulo _variabili
		Do while nSaln &gt; 0
			IF oRanges.hasByName(tag &amp; nSaln) THEN
				exit do
			end if
		nSaln=nSaln-1
		Loop
	end If
	Lsal = nSALn
oNamedRange=oRanges.getByName(tag &amp; nSaln).referredCells
	ThisComponent.CurrentController.Select(oNamedRange)
	Do while nSaln &gt; 0
		ThisComponent.CurrentController.Select(oRanges.getByName(tag &amp; nSaln).referredCells)
Raggruppa_righe &apos; raggruppo 
		oRanges.getByName(tag &amp; nSaln).referredCells.Rows.IsVisible=false
		unSelect &apos;deseleziona
		nSaln=nSaln-1
	Loop
	oRanges.getByName(tag &amp; LSal).referredCells.Rows.IsVisible=True
End Sub

Sub Togli_Struttura ()
	oSheet = ThisComponent.currentController.activeSheet
	oSheet.clearOutline()
end sub

&apos;__________visione &quot;corta&quot; delle voci&quot;__________________________________________________________
Sub Tronca_Altezza_Voci &apos; sceglie in base alla tab di contesto) descrizione breve
	oCell = thisComponent.getCurrentSelection() &apos;oCell.string
	
	Select case ThisComponent.currentController.activeSheet.Name
	Case &quot;Elenco Prezzi&quot;
		Tronca_Altezza_Voci_EP
	Case &quot;Analisi di Prezzo&quot;
		Tronca_Altezza_Analisi
	Case &quot;COMPUTO&quot;, &quot;VARIANTE&quot;, &quot;CONTABILITA&quot;
		ScriptPy(&quot;pyleeno.py&quot;,&quot;voce_breve&quot;)
	End Select
	If ThisComponent.currentController.activeSheet.name = &quot;Listino&quot; Then	 		
		Tronca_Altezza_Voci_Listino
		exit sub
	end If
&apos;ThisComponent.enableAutomaticCalculation(True)
	thisComponent.currentController.Select(oCell)
	unSelect &apos;unselect ranges 
end sub
&apos;#########################################################################
sub Tronca_Altezza_Voci_EP &apos; sull&apos;E.P. limita l&apos;altezza delle descrizioni per visualizzare più righe/voci
 &apos;	msgbox &quot;Spiacente ma funziona solo sulla tab &apos;Elenco Prezzi&apos;&quot;&amp; CHR$(10)_
 	&apos;		&amp; &quot; e NON sui suoi duplicati!&quot;				
	oSheet = ThisComponent.currentController.activeSheet										
	oRange = thiscomponent.NamedRanges.elenco_prezzi.ReferredCells&apos;
	with oRange.RangeAddress
		lrowStart= .startRow+1
		lrowEnd= .Endrow-1
	end with
	&apos;---------------
	lrow = range2cell
	if lrow = 0 Then lrow = 3 &apos; altrimenti rileva la riga di intestazione che è sempre uguale (e non commuta)

	if oSheet.GetCellByPosition(1 ,lrow).Rows.OptimalHeight = false then
			&apos; se la riga corrente è non &quot;adattata&quot; le allunga
		&apos;		oRange.Rows.OptimalHeight = true
				ScriptPy(&quot;pyleeno.py&quot;,&quot;adatta_altezza_riga&quot;)
		 else
			If thisComponent.Sheets.hasByName(&quot;S1&quot;) Then 
					If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).string = &quot;&quot; Then
						oSheet.GetCellRangeByPosition(0 , lrowStart, 0, lrowEnd).Rows.Height = 1200

					end if
					If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).value &lt;&gt; &quot;&quot; Then
						oSheet.GetCellRangeByPosition(0 , lrowStart, 0, lrowEnd).Rows.Height =_
						ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).value * 1000
					end If

				else
					oSheet.GetCellRangeByPosition(0 , lrowStart, 0, lrowEnd).Rows.Height = 1300
			end if
	endif 	
end sub


sub Tronca_Altezza_Analisi &apos; su Analisi limita l&apos;altezza delle descrizioni per visualizzare più righe/voci							
	oSheet = ThisComponent.currentController.activeSheet		
		 	Barra_chiudi_sempre_4	
			Barra_Apri_Chiudi_5(&quot;..Solo un attimo... Pazienta... &quot;, 30)
	oEnd=uFindString(&quot;Fine ANALISI&quot;, oSheet) 
	If isNull (oEnd) or isEmpty (oEnd) then 
			lLastUrowNN = getLastUsedRow(oSheet)
		else
			lLastUrowNN=oEnd.RangeAddress.EndRow &apos;-1
	end if
	
	lrow= Range2Cell
	if lrow = -1 then			 
			exit sub
	end if		
	oRange = osheet.getCellRangeByPosition (0,3,5,lLastUrowNN )									
	&apos;---------------
	If thisComponent.Sheets.hasByName(&quot;S1&quot;) Then 
			If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).value = &quot;&quot; then
				lAltezzaRiga = 1200
			end if
			If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).value &lt;&gt; &quot;&quot; then
				lAltezzaRiga =_
				ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,310).value * 1000
			end if	
		else
			lAltezzaRiga = 1300
	end if
		&apos;print lAltezzaRiga
	lAltezzaRiga = lAltezzaRiga * 1.20 &apos; maggiorato perché nelle analisi il grassetto della
	&apos;descrizione ne ha bisogno...

	if lrow &lt;= 1 then
		lrow= 5 &apos;altrimenti si incasina con le successive...
	end if
	if oSheet.GetCellByPosition(1 ,lrow).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow-1).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow-2).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow+1).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow+2).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow+3).Rows.OptimalHeight = false or _
		oSheet.GetCellByPosition(1 ,lrow+4).Rows.OptimalHeight = false then
			&apos; se la riga corrente non &quot;adattata&quot; le allunga
			oRange.Rows.OptimalHeight = true
		 else
		 	Barra_chiudi_sempre_4	
			Barra_Apri_Chiudi_5(&quot;..Solo un attimo... Pazienta... &quot;, 60)
			For i = 2 to lLastUrowNN
				&apos;oSheet.GetCellByPosition(1 , (I)).CellStyle = &quot;comp Art-EP&quot; &amp; s_R 
				if	oSheet.GetCellByPosition(1 , (I)).rows.Height &gt;= lAltezzaRiga then 
					 oSheet.GetCellByPosition(1 , (I)).rows.Height = lAltezzaRiga
				end if
			next I
	endif
 	Barra_chiudi_sempre_4 	
	ThisComponent.CurrentController.Select(oActiveCell1) 
	unSelect &apos;unselect ranges 	
	&apos; toglie la selezione 
fissa (0, idxrow)
end sub



sub Tronca_Altezza_Voci_Listino &apos; sull&apos;E.P. limita l&apos;altezza delle descrizioni per visualizzare più righe/voci

	oSheet = ThisComponent.currentController.activeSheet								
	lLastUrow = getLastUsedRow(oSheet)
	Set oRange = oSheet.getCellRangeByPosition(0, 2, 0, lLastUrow) 

	if oRange.Rows.OptimalHeight = true then
	 	oRange.rows.Height = 500
	 else
 		 oRange.Rows.OptimalHeight = true 
 end if		 
	ThisComponent.CurrentController.Select(oActiveCell1)
	unSelect &apos;unselect ranges 	
	&apos; toglie la selezione 	
end sub

</script:module>