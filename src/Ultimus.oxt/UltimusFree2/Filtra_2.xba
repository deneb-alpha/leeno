<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Filtra_2" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________
dim sStringa1 as string
dim sStringa2 as string
dim sStringa3 as string
dim sAnnulla as string
dim Dialog_Filtro as object&apos;

sub Dialog_Filtro_Apri 
	sAnnulla = &quot;tieni&quot;
&apos;print &quot;1 &quot; &amp; sAnnulla
	DialogLibraries.LoadLibrary(&quot;UltimusFree2&quot;)
	Dialog_Filtro=CreateUnoDialog(DialogLibraries.UltimusFree2.Dialog_Filtro)
 Dialog_Filtro.execute()
end sub

Sub Dialog_Filtro_Chiudi
		sAnnulla = &quot;tieni&quot;
		if Not isNull (Dialog_Filtro) then 
			Dialog_Filtro.endExecute() 
		end if
end sub


Sub Dialog_Filtro_Annulla
		sAnnulla = &quot;annulla&quot;
		do while sAnnulla = &quot;tieni&quot;
			wait 1 &apos; ma servirà o sto diventando paranoico?
		loop
		if Not isNull (Dialog_Filtro) then 
			Dialog_Filtro.endExecute() 
		end if
end sub


Sub Filtro &apos;(Optional oSheetG as object)&apos; Filtro Standard semplificato
	Dim oSheet &apos; Sheet filtered.
	Dim oFilterDesc &apos; Filter descriptor.
	oSheet = ThisComponent.currentController.activeSheet
	lLastUrow = getLastUsedRow(oSheet)
Barra_apri_chiudi_4 
	sAttributo = Trova_Attr_Sheet
	If sAttributo &lt;&gt; &quot;TIPO_EP&quot; and sAttributo &lt;&gt; &quot;TIPO_COMPUTO&quot; and sAttributo &lt;&gt; &quot;TIPO_CONTABILITA&quot; and _
 		not thisComponent.Sheets.hasByName(&quot;Listino&quot;) Then
 		Barra_chiudi_sempre_4
 		exit sub
	end If
	on error resume Next
&apos; il ciclo di for che segue serve ad eliminare il filtro
&apos; per impostare un nuovo filtro questo ciclo è inutile (un filtro sostituisce l&apos;altro)
&apos; ma se si vuole avere una sola shortcut per attivare e disattivare un filtro non vedo alternative...
&apos; qualche idea in merito?
	For i = 3 to lLastUrow
		If	oSheet.getRows().getByIndex(i).IsFiltered = true then
			oActiveCell1 = thisComponent.getCurrentSelection()
			oFilterDesc = oSheet.createFilterDescriptor(True)
 			oSheet.filter(oFilterDesc)
 			if oActiveCell1.CellAddress.Row &lt; lLastUrow then 
 				ThisComponent.CurrentController.Select(oActiveCell1)
 				Else
 				if	lLastUrow-10 &gt; 0 Then
 					lLastUrow=lLastUrow-10
 				end if
 				ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 1, lLastUrow))
 				end if
Barra_chiudi_sempre_4
			exit sub
		end if
	Next I 
Barra_apri_chiudi_4 
	sAttributo = Trova_Attr_Sheet
	If sAttributo = &quot;TIPO_ELENCOP&quot; OR _
		sAttributo = &quot;TIPO_EP&quot; Then	
		&apos; questa invece trova automaticamente la colonna giusta +col
		if oSheet.getCellByPosition(1,0).string = &quot; Descrizione &quot; or _
 			oSheet.getCellByPosition(1,0).string = &quot;Descrizione &quot; or _
 			oSheet.getCellByPosition(1,0).string = &quot;Descrizione&quot; then
		 	lcolbase = 0
		end if
 		if oSheet.getCellByPosition(2,0).string = &quot; Descrizione &quot; or _
 			oSheet.getCellByPosition(2,0).string = &quot;Descrizione &quot; or _
 			oSheet.getCellByPosition(2,0).string = &quot;Descrizione&quot; then
 			lcolbase = 1
		end if
 		if oSheet.getCellByPosition(3,0).string = &quot; Descrizione &quot; or _
 			oSheet.getCellByPosition(3,0).string = &quot;Descrizione &quot; or _
 			oSheet.getCellByPosition(3,0).string = &quot;Descrizione&quot; then
 			lcolbase = 2
		end if
		Barra_Apri_Chiudi_4
 		Crea_Filtro_EP_Computo (lcolbase+1) &apos; (1, &quot;AttEP&quot; )
 		Barra_chiudi_sempre_4
		exit sub
	end if
	If sAttributo = &quot;TIPO_COMPUTO&quot; Or sAttributo = &quot;TIPO_CONTABILITA&quot; Then	
Barra_Apri_Chiudi_4
Crea_Filtro_EP_Computo (2) &apos; (2, &quot;AttComp&quot;)
Barra_chiudi_sempre_4
		exit sub
	end if
	If 	thisComponent.Sheets.hasByName(&quot;Listino&quot;) and thisComponent.Sheets.hasByName(&quot;Temp&quot;) Then
			sAperto = 1
			Barra_Apri_Chiudi_4
			Crea_Filtro_Prezzari
			Barra_chiudi_sempre_4
			exit sub
	end if
	Barra_chiudi_sempre_4
End Sub


sub Crea_Filtro_EP_Computo (lcol as long) &apos;, sAttTipo as string) &apos;lcol è il nume della colonna dove applicare il filtro su EP o su Computo 
 
 	sStringa = InputBox (&quot;&quot; &amp; CHR$(10)_
 						&amp; &quot; Scrivi le parole chiave che vuoi Filtrare/cercare&quot; &amp; CHR$(10) &amp; CHR$(10)_
 						&amp; &quot;(Puoi inserire fino a 3 parole separate da uno spazio)&quot;&amp; CHR$(10) &amp; CHR$(10)_
 						 , &quot; Filtra le voci che contengono la parole (nell&apos;ordine)&quot;, SGenericoMemo)
	SGenericoMemo = sStringa
 If sStringa = &quot;&quot; then
 	exit sub
 end if
	Dim oFields(0) As New com.sun.star.sheet.TableFilterField

	oSheet = ThisComponent.currentController.activeSheet

&apos;	lLastUrowNN = getLastUsedRow(oSheet)

 &apos;questo wait annulla subito la finestra di dialogo
	wait 100
	

	dim ssStrFilter as string
	sStringa1 = Left( sStringa,(InStr (1,sStringa, &quot; &quot;)) )
	sStringaT = Replace_G (sStringa,sStringa1,&quot;&quot;) &apos;temporanea.. prob si può semplificare
	sStringa2 = Left( sStringaT,(InStr (1,sStringaT, &quot; &quot;)) )
	sStringa3 = Replace_G (sStringaT,sStringa2,&quot;&quot;)
	If sStringa1 &lt;&gt; &quot;&quot; then
		sStrFilter = &quot;.*&quot; &amp; sStringa1		
	end if
	if sStringa2 &lt;&gt; &quot;&quot; then
		sStrFilter = sStrFilter &amp; &quot;.*&quot; &amp; sStringa2	
	end if
	if sStringa3 &lt;&gt; &quot;&quot; then
		sStrFilter = sStrFilter &amp; &quot;.*&quot; &amp; sStringa3	
	end if
	sStrFilter = sStrFilter &amp; &quot;.*&quot;
&apos;	sStrFilter = &quot;.*&quot; &amp; sStrFilter &amp; &quot;.*&quot;
&apos;print sStrFilter	 
&apos;CHR$(10)_

&apos;print lcol
 rem If argument is True, creates an empty filter
 rem descriptor. If argument is False, create a 
 rem descriptor with the previous settings.
 oFilterDesc = oSheet.createFilterDescriptor(True)
&apos; sStringa = &quot;scavo&quot;
&apos; xray oFilterDesc
 With oFields(0)
 rem I could use the Connection property to indicate 
 rem how to connect to the previous field. This is 
 rem the first field so this is not required.
 &apos;.Connection = com.sun.star.sheet.FilterConnection.AND
 &apos;.Connection = com.sun.star.sheet.FilterConnection.OR

 rem The Field property is the zero based column
 rem number to filter. If you have the cell, you
 rem can use .Field = oCell.CellAddress.Column.
 .Field = lCol 

 rem Compare using a numeric or a string?
 .IsNumeric = false &apos;True

 rem The NumericValue property is used 
 rem because .IsNumeric = True from above.
 &apos;.NumericValue = 80
	
	
 rem If IsNumeric was False, then the 
 rem StringValue property would be used.
 rem .StringValue = &quot;what ever&quot;
 &apos; .StringValue = &quot;.*&quot; &amp; sStringa &amp; &quot;.*&quot; 
	.StringValue =	sStrFilter
 rem Valid operators include EMPTY, NOT_EMPTY, EQUAL,
 rem NOT_EQUAL, GREATER, GREATER_EQUAL, LESS,
 rem LESS_EQUAL, TOP_VALUES, TOP_PERCENT,
 rem BOTTOM_VALUES, and BOTTOM_PERCENT
 .Operator = com.sun.star.sheet.FilterOperator.EQUAL
 End With
 
 rem The filter descriptor supports the following
 rem properties: IsCaseSensitive, SkipDuplicates,
 &apos;UseRegularExpressions
&apos; XRAY oFilterDesc
 rem SaveOutputPosition, Orientation, ContainsHeader, 
 rem CopyOutputData, OutputPosition, and MaxFieldCount.
 oFilterDesc.setFilterFields(oFields())
 oFilterDesc.UseRegularExpressions = TRUE
 &apos; oFilterDesc.UseRegularExpressions = false
 oFilterDesc.ContainsHeader = True
 oSheet.filter(oFilterDesc)
 ThisComponent.CurrentController.setFirstVisibleRow (1) 
 
end sub


sub Crea_Filtro_EP_Computo____ (lcol as long) &apos;, &apos; prova con due criteri sAttTipo as string) 
&apos;lcol è la colonna dobe applicare il filtro su EP o su Computo 
 
 
 	sStringa = InputBox (&quot;&quot; &amp; CHR$(10)_
 						&amp; &quot; Scrivi qui sotto la stringa che vuoi Filtrare/cercare:&quot; &amp; CHR$(10) &amp; CHR$(10)_
	 					 , &quot; Filtra le voci che contengono la stringa!&quot;, SGenericoMemo)

	SGenericoMemo = sStringa
 If sStringa = &quot;&quot; then
 	exit sub
 end if
	Dim oFields(0) As New com.sun.star.sheet.TableFilterField
sStringa = scavo
sStringa1 = trincea
lcol1 = lcol
	oSheet = ThisComponent.currentController.activeSheet
&apos;	oRange = thiscomponent.NamedRanges.elenco_prezzi.ReferredCells

	lLastUrowNN = getLastUsedRow(oSheet)

 &apos;&apos;&apos; 	 oAddr = oSheet.getCellRangeByposition(0,0,lLastUcol,lLastUrowNN).getRangeAddress()

 
 rem If argument is True, creates an empty filter
 rem descriptor. If argument is False, create a 
 rem descriptor with the previous settings.
 oFilterDesc = oSheet.createFilterDescriptor(True)
&apos; sStringa = &quot;scavo&quot;
&apos; xray oFilterDesc
 With oFields(0)
 rem I could use the Connection property to indicate 
 rem how to connect to the previous field. This is 
 rem the first field so this is not required.
 &apos;.Connection = com.sun.star.sheet.FilterConnection.AND
 &apos;.Connection = com.sun.star.sheet.FilterConnection.OR

 rem The Field property is the zero based column
 rem number to filter. If you have the cell, you
 rem can use .Field = oCell.CellAddress.Column.
 &apos;.Connection = com.sun.star.sheet.FilterConnection.AND
 .Field = lCol 

 rem Compare using a numeric or a string?
 .IsNumeric = false &apos;True

 rem The NumericValue property is used 
 rem because .IsNumeric = True from above.
 &apos;.NumericValue = 80
	
	
 rem If IsNumeric was False, then the 
 rem StringValue property would be used.
 rem .StringValue = &quot;what ever&quot;
 .StringValue = &quot;.*&quot; &amp; sStringa &amp; &quot;.*&quot; 

 rem Valid operators include EMPTY, NOT_EMPTY, EQUAL,
 rem NOT_EQUAL, GREATER, GREATER_EQUAL, LESS,
 rem LESS_EQUAL, TOP_VALUES, TOP_PERCENT,
 rem BOTTOM_VALUES, and BOTTOM_PERCENT
 .Operator = com.sun.star.sheet.FilterOperator.EQUAL
 End With
&apos;xray ofields
 With oFields(1)
 rem I could use the Connection property to indicate 
 rem how to connect to the previous field. This is 
 rem the first field so this is not required.
 &apos;.Connection = com.sun.star.sheet.FilterConnection.AND
 &apos;.Connection = com.sun.star.sheet.FilterConnection.OR

 rem The Field property is the zero based column
 rem number to filter. If you have the cell, you
 rem can use .Field = oCell.CellAddress.Column.
 .Connection = com.sun.star.sheet.FilterConnection.AND
 .Field = lCol1 

 rem Compare using a numeric or a string?
 .IsNumeric = false &apos;True

 rem The NumericValue property is used 
 rem because .IsNumeric = True from above.
 &apos;.NumericValue = 80
	
	
 rem If IsNumeric was False, then the 
 rem StringValue property would be used.
 rem .StringValue = &quot;what ever&quot;
 .StringValue = &quot;.*&quot; &amp; sStringa1 &amp; &quot;.*&quot; 

 rem Valid operators include EMPTY, NOT_EMPTY, EQUAL,
 rem NOT_EQUAL, GREATER, GREATER_EQUAL, LESS,
 rem LESS_EQUAL, TOP_VALUES, TOP_PERCENT,
 rem BOTTOM_VALUES, and BOTTOM_PERCENT
 .Operator = com.sun.star.sheet.FilterOperator.EQUAL
 End With

 print sStringa &amp; &quot; &quot; &amp; sStringa2
 rem The filter descriptor supports the following
 rem properties: IsCaseSensitive, SkipDuplicates,
 &apos;UseRegularExpressions
&apos; XRAY oFilterDesc
 rem SaveOutputPosition, Orientation, ContainsHeader, 
 rem CopyOutputData, OutputPosition, and MaxFieldCount.
 oFilterDesc.setFilterFields(oFields())
 oFilterDesc.UseRegularExpressions = TRUE
 oFilterDesc.ContainsHeader = True
 oSheet.filter(oFilterDesc)
 ThisComponent.CurrentController.setFirstVisibleRow (1) 
 &apos; xray ThisComponent.CurrentController.getFirstVisibleRow
 &apos; ThisComponent.CurrentController.Select(oActiveCell1)
end sub




Sub removeSheetFilter() &apos;non usata ... solo una prova superata
 Dim oSheet &apos; Sheet filtered.
 Dim oFilterDesc &apos; Filter descriptor.
 xray oFilterDesc
 oSheet = ThisComponent.currentController.activeSheet
 	oActiveCell1 = thisComponent.getCurrentSelection()
	&apos;print &quot;tolgo&quot;
 oFilterDesc = oSheet.createFilterDescriptor(True)
 oSheet.filter(oFilterDesc)
 sAperto = &quot;&quot;
 ThisComponent.CurrentController.Select(oActiveCell1)
End Sub

Sub removeSF() &apos;non usata ... solo una prova superata &apos;temp di prova &apos;RIMUOVE IL &quot;FILTRO STANDARD&quot; SULLA SHEET CORRENTE
 Dim oSheet &apos; Sheet filtered.
 Dim oFilterDesc &apos; Filter descriptor.
 
 oSheet = ThisComponent.currentController.activeSheet
 lLastUrow = getLastUsedRow(oSheet)
 For i = 2 to lLastUrow
				if	oSheet.getRows().getByIndex(i).IsFiltered = true then
					sFiltro = 1
					goto pirla
				end if
 Next I 
 sfiltro = 0
 
 pirla:
 &apos;print sFiltro 
 
 if sfiltro = 0 then
 		exit sub
 else
 	&apos;	 print &quot;lo tolgo&quot;
 &apos;IsFiltered 
 &apos;	oFilterRange=oSheet.getSpreadsheet
 &apos;ThisComponent.getCurrentController.select(oFilterRange)
 &apos; xray orow &apos;.getSpreadsheet &apos; ThisComponent.getCurrentController.select(oFilterRange)
 &apos;	xray osheet.SheetFilterDescriptor
	&apos;print &quot;tolgo&quot;
&apos;	exit sub
 		 oFilterDesc = oSheet.createFilterDescriptor(True)
 &apos;	 xray oFilterDesc &apos;oSheet.filter(oFilterDesc)
	 oSheet.filter(oFilterDesc)
	&apos; sAperto = &quot;&quot;
 &apos;	ThisComponent.CurrentController.Select(oActiveCell1)
 	end if
End Sub


sub Crea_Filtro_Prezzari &apos;

dim sStringa1 as string
dim sStringa2 as string
dim sStringa3 as string

&apos;goto salto
 	sStringa = InputBox (&quot;&quot; &amp; CHR$(10)_
 						&amp; &quot; Scrivi le parole chiave che vuoi Filtrare/cercare&quot; &amp; CHR$(10) &amp; CHR$(10)_
 						&amp; &quot;(Puoi inserire fino a 3 parole separate da uno spazio)&quot;&amp; CHR$(10) &amp; CHR$(10)_
 						 , &quot; Filtra le voci che contengono la parole (nell&apos;ordine)&quot;, SGenericoMemo)
	SGenericoMemo = sStringa
 If sStringa = &quot;&quot; then
 	exit sub
 end if
&apos;salto:



goto salto_2 
	Dialog_Filtro_Apri 
&apos;
xray 	Dialog_Filtro &apos;.setControl(&quot;TextField1&quot;).text = sStringa1
	sStringa1 = Dialog_Filtro.getControl(&quot;TextField1&quot;).text
	sStringa2 = Dialog_Filtro.getControl(&quot;TextField2&quot;).text
	sStringa3 = Dialog_Filtro.getControl(&quot;TextField3&quot;).text
	 &apos;print stringa1 &amp; &quot; &quot; &amp; stringa2 &amp; &quot; &quot; &amp; stringa3
	iTempo = 50
	do while sAnnulla = &quot;tieni&quot; 
		itempo = iTempo+iTempo
 		if iTempo &gt;1000 then
			exit do
		end if
 		wait iTempo
	loop	
	if 	sAnnulla = &quot;annulla&quot; then
		Barra_chiudi_sempre_4
		exit sub
	end if
salto_2: 

 		&apos; exit sub
 		&apos; print &quot;.*&quot; &amp; sStringa1 &amp; &quot;.*&quot; &amp; sStringa2 &amp; &quot;.*&quot;
	Dim oFields(0) As New com.sun.star.sheet.TableFilterField
	oSheet = ThisComponent.currentController.activeSheet

&apos;	oRange = thiscomponent.NamedRanges.elenco_prezzi.ReferredCells
&apos;	lLastUrowNN = getLastUsedRow(oSheet)
 &apos;oRange=oSheet.getCellRangeByPosition(0,0,5,lLastUrowNN)
 
 &apos;questo wait annulla subito la finestra di dialogo
	wait 100
	
 &apos; Barra_Apri_Chiudi_4
 
 &apos;&apos;&apos; ThisComponent.CurrentController.Select(oRange)
 &apos;&apos;&apos; Thiscomponent.currentcontroller.setactivesheet(oSheet)


 rem If argument is True, creates an empty filter
 rem descriptor. If argument is False, create a 
 rem descriptor with the previous settings.&apos;
 oFilterDesc = oSheet.createFilterDescriptor(True)
dim ssStrFilter as string
&apos;sStringa = Replace_G (sStringa,&quot;&quot;&quot;&quot;,&quot;#&quot;)
&apos;print sStringa
sStringa1 = Left( sStringa,(InStr (1,sStringa, &quot; &quot;)) )
&apos;print sStringa1 
sStringaT = Replace_G (sStringa,sStringa1,&quot;&quot;) &apos;temporanea.. prob si può semplificare
sStringa2 = Left( sStringaT,(InStr (1,sStringaT, &quot; &quot;)) )
&apos;print sStringa2
sStringa3 = Replace_G (sStringaT,sStringa2,&quot;&quot;)
&apos;print sStringa3
If sStringa1 &lt;&gt; &quot;&quot; then
	sStrFilter = &quot;.*&quot; &amp; sStringa1		
end if
if sStringa2 &lt;&gt; &quot;&quot; then
	sStrFilter = sStrFilter &amp; &quot;.*&quot; &amp; sStringa2	
end if
if sStringa3 &lt;&gt; &quot;&quot; then
	sStrFilter = sStrFilter &amp; &quot;.*&quot; &amp; sStringa3	
end if
sStrFilter = sStrFilter &amp; &quot;.*&quot;
print &quot;&gt;&quot; &amp; sStrFilter &amp; &quot;&lt;&quot;
&apos;exit sub
 With oFields(0)
 rem I could use the Connection property to indicate 
 rem how to connect to the previous field. This is 
 rem the first field so this is not required.
 &apos;.Connection = com.sun.star.sheet.FilterConnection.AND
 &apos;.Connection = com.sun.star.sheet.FilterConnection.OR

 rem The Field property is the zero based column
 rem number to filter. If you have the cell, you
 rem can use .Field = oCell.CellAddress.Column.
 .Field = 4

 rem Compare using a numeric or a string?
 .IsNumeric = false &apos;True

 rem The NumericValue property is used 
 rem because .IsNumeric = True from above.
 &apos;.NumericValue = 80
	
	
 rem If IsNumeric was False, then the 
 rem StringValue property would be used.
 rem .StringValue = &quot;what ever&quot;
 
 &apos; .StringValue = &quot;.*&quot; &amp; sStringa &amp; &quot;.*&quot; 
 &apos; .StringValue = &quot;.*&quot; &amp; sStringa1 &amp; &quot;.*&quot; &amp; sStringa2 &amp; &quot;.*&quot;
 &apos; .StringValue = &quot;.*&quot; &amp; sStringa1 &amp; &quot;.*&quot; &amp; sStringa2 &amp; &quot;.*&quot; &amp; sStringa3 &amp; &quot;.*&quot; 
	.StringValue =	sStrFilter
&apos;	oActiveCell1 &apos; questa provo a disattivarla?
	
 rem Valid operators include EMPTY, NOT_EMPTY, EQUAL,
 rem NOT_EQUAL, GREATER, GREATER_EQUAL, LESS,
 rem LESS_EQUAL, TOP_VALUES, TOP_PERCENT,
 rem BOTTOM_VALUES, and BOTTOM_PERCENT
 .Operator = com.sun.star.sheet.FilterOperator.EQUAL
 End With
 rem The filter descriptor supports the following
 rem properties: IsCaseSensitive, SkipDuplicates,
 &apos;UseRegularExpressions
&apos; XRAY oFilterDesc
 rem SaveOutputPosition, Orientation, ContainsHeader, 
 rem CopyOutputData, OutputPosition, and MaxFieldCount.
 oFilterDesc.setFilterFields(oFields())
 oFilterDesc.UseRegularExpressions = TRUE
 oFilterDesc.ContainsHeader = True
 
&apos; la riga che segue è ETERNA... se qualcuno ha una buona idea me lo dica...
 oSheet.filter(oFilterDesc)
 

 &apos; disatt 080605 oProgressBar.End
 &apos; Barra_Apri_Chiudi_4
 &apos; oProgressBar.reset() 
 &apos; oProgressBar.setvalue(0)
 &apos; oProgressBar.setText(&quot;&quot;)
 
 ThisComponent.CurrentController.setFirstVisibleRow (1) 
 &apos; if not isnull (oActiveCell1) then
&apos; 	ThisComponent.CurrentController.Select(oActiveCell1)
&apos; end if
&apos;	ThisComponent.CurrentController.setFirstVisibleRow (1) 	
&apos;	xray oRange &apos;.AutoFilter = True 
end sub


</script:module>