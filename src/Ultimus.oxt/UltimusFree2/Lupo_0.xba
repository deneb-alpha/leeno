<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Lupo_0" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________


&apos;********************************************************
Global sUltimus as string
Global sUltimus2 as string
Global sLib As string &apos; libreria Ultimus settata dal documento in apertura
global oProgressBar as object
Global sTemp as string
&apos;global sVer2 as string &apos;versione della libreria installata

Sub Attiva_Sheets_di_Servizio
	If thisComponent.Sheets.hasByName(&quot;S1&quot;) Then
 	oSheet = ThisComponent.Sheets.getByName(&quot;S1&quot;)
 	oSheet.isVisible = TRUE
 end if
 If thisComponent.Sheets.hasByName(&quot;S2&quot;) Then
 	oSheet = ThisComponent.Sheets.getByName(&quot;S2&quot;)
 	oSheet.isVisible = TRUE
 end if
 	If Constrolla_se_M1 = true then
 	 	oSheet = ThisComponent.Sheets.getByName(&quot;M1&quot;)
 			oSheet.isVisible = TRUE
 	end if
END SUB


Sub Svuota_Globale &apos; svuota la variabile globale con file DCC
&apos; attivata all&apos;uscita del file... altrimenti se si tenta di inviare dei prezzi al DCC
On Error resume next

	oLibCont = createUnoService(&quot;com.sun.star.script.ApplicationScriptLibraryContainer&quot;)
 If oLibCont.hasByName(sLib)= false Then
 			exit sub
 end if

oDoc = ThisComponent&apos;.URL
URLStr = ThisComponent.getURL() &apos; con queste 2 righe si preleva il nome del file
oLibCont = createUnoService(&quot;com.sun.star.script.ApplicationScriptLibraryContainer&quot;)


If not oLibCont.hasByName(sLib)= true Then
	exit sub
end if 

&apos;
sNome = ConvertFromUrl (URLStr)
&apos;oNome = FileNameOutOfPath(URLStr) &apos;&apos;&apos;

oSheet = oDoc.currentcontroller.activesheet 
&apos;print &quot;sultimus &quot; &amp; sUltimus &amp; &quot;onome &quot; &amp; oNome
	if UltimusFree2.Lupo_0.sUltimus = sNome then

 		UltimusFree2.Lupo_0.sUltimus = &quot;&quot; &apos; variabile svuotata
 		Colora_M1(sURLStr)
	end if
	
	sUltimus2 = &quot;&quot;
	Colora_M1(URLStr)
	exit sub
	
&apos;ErrorHandler:	
&apos;msgbox &quot;Si è verificato un errore in &quot;&quot;Svuota_Globale&quot;&quot;&quot;
&apos;exit sub
END SUB

Function OpenDocument(DocPath as String, Args(), Optional bDisposable as Boolean)
Dim oComponents as Object
Dim oComponent as Object
	&apos; Search if one of the active Components ist the one that you search for
	oComponents = StarDesktop.Components.CreateEnumeration
	While oComponents.HasmoreElements
		oComponent = oComponents.NextElement
		If hasUnoInterfaces(oComponent,&quot;com.sun.star.frame.XModel&quot;) then
			If UCase(oComponent.URL) = UCase(DocPath) then
				OpenDocument() = oComponent
				If Not IsMissing(bDisposable) Then
					bDisposable = False
				End If
				Exit Function
			End If
		End If
	Wend
	If Not IsMissing(bDisposable) Then
		bDisposable = True
	End If
	OpenDocument() = StarDesktop.LoadComponentFromURL(DocPath,&quot;_default&quot;,0,Args())
End Function

&apos;***************************************************************+
Sub crea_stile_cella_1
	&apos; crea uno stile di cella, (e se c&apos;è già lo modifica) &gt; Non in questo caso specifico.

	dim sStileCella as string
	&apos;dim ostileCella as object
	sStileCella = &quot;Comp-Bianche in mezzo Descr_R_ep&quot; &apos;num_centro_bianco_ep
	if Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).hasByName(sStileCella)= false then
			&apos;se non esiste creo lo stile di cella
			Set ostileCella = ThisComponent.createInstance(&quot;com.sun.star.style.CellStyle&quot;)
					Call Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).insertByName(sStileCella, ostileCella )
						ostileCella.ParentStyle = &quot;Comp-Bianche in mezzo Descr_R&quot;
					&apos;	ostileCella.IsCellBackgroundTransparent = False
						ostileCella.CellBackColor = RGB(255,204,153)
					&apos;	ostileCella.CharFontName = &quot;Arial&quot; 
					&apos;	ostileCella.CharHeight = 10
					&apos;	ostileCella.HoriJustify = com.sun.star.table.CellHoriJustify.CENTER 
					&apos;	ostileCella.VertJustify = com.sun.star.table.CellVertJustify.CENTER 
					
		ELSE
			&apos; se c&apos;è lo modifico
		&apos;		oStile = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getByName(sStileCella)
		&apos;		oStile.IsCellBackgroundTransparent = False
		&apos;		oStile.CellBackColor = RGB(255,204,153)
	end if
	sStileCella = &quot;num_centro_bianco_ep&quot;
	if Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).hasByName(sStileCella)= false then
			&apos;se non esiste creo lo stile di cella
			Set ostileCella = ThisComponent.createInstance(&quot;com.sun.star.style.CellStyle&quot;)
					Call Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).insertByName(sStileCella, ostileCella )
						ostileCella.IsCellBackgroundTransparent = False
						ostileCella.CellBackColor = RGB(255,204,153)
	end if
End Sub



Sub crea_stile_cella_2
	&apos; verifica l&apos;esistenza di uno stile di cella, (e se c&apos;è già lo modifica)
	&apos; Modifica lo stile &quot;data&quot; rendendo il formato più corto (2011 &gt; 11)
	dim sStileCella as string
	sStileCella = &quot;Data&quot; 
	if Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).hasByName(sStileCella)= True then
				oStile = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getByName(sStileCella)
				oStile.NumberFormat = 37
	end if

End Sub


Sub crea_stile_cella_3
	&apos; crea uno stile di cella, (e se c&apos;è già lo modifica) &gt; Non in questo caso specifico.

	dim sStileCella as string
	&apos;dim ostileCella as object
	sStileCella = &quot;comp_sotto_E_cond&quot; &apos;
&apos;	if Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).hasByName(sStileCella)= false then
			&apos;se non esiste creo lo stile di cella
			Set ostileCella = ThisComponent.createInstance(&quot;com.sun.star.style.CellStyle&quot;)
					Call Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).insertByName(sStileCella, ostileCella )
						ostileCella.ParentStyle = &quot;comp sotto Euro 3_R&quot;
					&apos;	ostileCella.IsCellBackgroundTransparent = False
						ostileCella.CellBackColor = RGB(247,99,99)
					&apos;	ostileCella.CharFontName = &quot;Arial&quot;
					&apos;	ostileCella.CharHeight = 10
					&apos;	ostileCella.HoriJustify = com.sun.star.table.CellHoriJustify.CENTER 
					&apos;	ostileCella.VertJustify = com.sun.star.table.CellVertJustify.CENTER 
					
&apos;		ELSE
			&apos; se c&apos;è lo modifico
		&apos;		oStile = Thiscomponent.StyleFamilies.getByName(&quot;CellStyles&quot;).getByName(sStileCella)
		&apos;		oStile.IsCellBackgroundTransparent = False
		&apos;		oStile.CellBackColor = RGB(255,204,153)
&apos;	end if

End Sub


</script:module>