<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Import_acc" script:language="StarBasic">
rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________


Sub ForceCSVOpen &apos;main
&apos;print &quot;3&quot;
&apos;Use this line if you always want to load the same file at the same location
&apos;sUrl = &quot;file:///C:/WINDOWS/Desktop/test2.csv&quot; 

&apos;Alternatively, use this line if you want to browse for the file
&apos;sUrl = BrowseForFile(&quot;Browse for File to be imported as CSV&quot;, &quot;any file&quot;, &quot;C:\windows\desktop&quot;, &quot;*.*&quot;)
sUrl = converttourl(&quot;c:\p_importato.csv&quot;)
&apos;sUrl = converttourl(&quot;c:\tempo_csv.txt&quot;)
&apos;use this line if you always want to use the same specifications for the CSV import
&apos;for details, check http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.htm#1+2+2+3+2+Filter+Options+for+the+CSV+Filter
&apos;sFilter = &quot;CHR(64),,ANSI,1,&quot; &apos; Tab (Chr(9)) delimiter, no text delimiter, ANSI coding
&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;sFilter = &quot;/64,34,ANSI,1,2/2/8/2&quot;
&apos;sFilter = &quot;64,34,ANSI,1,2/2/9/2&quot;
&apos;sFilter = &quot;64,39,ANSI,1,2/2/8/2/2&quot;
sFilter = &quot;64,34,ANSI,1,2/2/8/2/2&quot;

&apos;&apos;&apos;&apos;
&apos; Alternatively, use this line if you want to be asked for the options every time
&apos;sFilter = GetFilterOptionsFromCSVImportDialog(sUrl)
&apos;print &quot;FILTRO :&quot; &amp; sfilter 
&apos;XRAY sFilter
if sFilter &lt;&gt;&quot;&quot; then
 o = loadCSVfromURL(sUrl, sFilter, false)
 endif
 	oDoc = ThisComponent
	sDocURL = oDoc.getURL()
&apos;print	sDocURL
&apos;	sSorgente = ThisComponent.getURL()
	sSorgente = sDocURL
End Sub

&apos;----- Basic laymen should not modify below this line

function loadCSVfromURL(sUrl as String, sFilter as String, bHidden as Boolean) as Object
Dim aProps(2) As New com.sun.star.beans.PropertyValue
aProps(0).Name = &quot;FilterName&quot;
aProps(0).Value = &quot;Text - txt - csv (StarCalc)&quot;
aProps(1).Name = &quot;FilterOptions&quot;
aProps(1).Value = sFilter 
aProps(2).Name = &quot;Hidden&quot;
aProps(2).Value = bHidden
loadCSVfromURL = StarDesktop.loadComponentFromURL(sUrl, &quot;_blank&quot;, 0, aProps())
end function
&apos;----------
&apos; Lets the user select a file with a given filter
&apos; call like sFile = BrowseForFile(&quot;Pick the file downloaded from Postbank&quot;, &quot;Postbank download file&quot;, &quot;C:\Windows\Desktop&quot;,&quot;PB*.csv&quot;)
&apos; returns &quot;&quot; when not successful

function BrowseForFile(sTitle as String, sFilterName as String, sStartDirectory as String, sFilter as String) as String
dim ars
o=CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
o.setTitle(sTitle)
o.appendFilter( sFilterName &amp; &quot;(&quot; &amp; sFilter &amp; &quot;)&quot;, sFilter)
o.setMultiSelectionMode(false)
o.setDisplayDirectory(ConvertToUrl(sStartDirectory))
 
if o.execute() = com.sun.star.ui.dialogs.ExecutableDialogResults.OK then
 ars = o.getFiles()
 BrowseForFile = ars(UBound(ars))
 else
 BrowseForFile = &quot;&quot;
 endif
end function


function GetFilterOptionsFromCSVImportDialog(sUrl) as String
GetFilterOptionsFromCSVImportDialog = &quot;&quot;

oSFA = createUNOService (&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
oInputStream = oSFA.openFileRead(sUrl)

Dim aProps(3) as new com.sun.star.beans.PropertyValue
aProps(0).Name = &quot;FilterOptions&quot;
aProps(0).Value = &quot;&quot;
aProps(1).Name = &quot;URL&quot;
aProps(1).Value = sUrl
aProps(2).Name = &quot;FilterName&quot;
aProps(2).Value = &quot;Text - txt - csv (StarCalc)&quot;
aProps(3).Name = &quot;InputStream&quot;
aProps(3).Value = oInputStream

o = createUnoService(&quot;com.sun.star.ui.dialogs.FilterOptionsDialog&quot;)
o.setPropertyValues(aProps())

if o.execute() = com.sun.star.ui.dialogs.ExecutableDialogResults.OK then
 aPropOut = o.getPropertyValues()
 GetFilterOptionsFromCSVImportDialog = aPropOut(0).Value
 endif
oInputStream.closeInput()
end function 


&apos;_______________________________________________________________________________________


Sub Main_Conversione &apos;da primus pwe a OO
 Clessid_lock_Start
&apos;print &quot;1&quot;
&apos;If ErroreDet = 1 then 
&apos;	on error goto Errore
&apos;end if 
&apos;
Dim oInputFile as Object
Dim oOutputStream as Object
Dim oStreamString as Object
Dim oUcb as Object
Dim sCRLF as String
Dim oInputStream as Object
Dim oOutputFile as Object
dim sLineaLetta as string
Dim sLineaDaScrivere as string
Dim sInputFilePath as string
Dim sOutputFilePath as string
&apos;dim sSuperC1 as string
&apos;Dim oUcb as Object
sInputFilePath = BrowseForFile(&quot;Browse for File.pwe to be imported as CSV&quot;, &quot;&quot;, &quot;C:\windows\desktop&quot;, &quot;*.pwe&quot;)
sInputFilePath = converttourl(sInputFilePath)
 &apos; sInputFilePath = converttourl(&quot;c:\restauri.pwe&quot;)
 sOutputFilePath = converttourl(&quot;c:\tempo_csv.txt&quot;)

	sCRLF = CHR(13) &amp; CHR(10) &apos;Serve per andare a capo
&apos;Apre il file da cui devi leggere
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	If oUcb.Exists(sInputFilePath) Then
		oInputStream = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
		oInputStream.Encoding = &quot;Latin-9&quot;
		oInputFile = oUcb.OpenFileReadWrite(sInputFilePath)
		oInputStream.SetInputStream(oInputFile.GetInputStream)
	End If
&apos;
&apos;Apre il file in cui devi scrivere
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oOutputStream = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	oOutputStream.Encoding = &quot;Latin-9&quot;
	If oUcb.Exists(sOutputFilePath) Then
		oUcb.Kill(sOutputFilePath)
	End If
	oOutputFile = oUcb.OpenFileReadWrite(sOutputFilePath)
	oOutputStream.SetOutputStream(oOutputFile.GetOutputStream)
&apos;xray oInputStream

	Do Until oInputStream.IsEOF
	&apos;	sLineaDaScrivere = &quot;&quot;

		do 
			sLineaLetta = oInputStream.ReadLine

				if sLineaLetta= &quot;PWE (PriMus EXCHANGE) - by ACCA&quot; then
					 sLinea = &quot;@@@@&quot; &amp; sInputFilePath &amp; CHR(13) &amp; CHR(10)
				end if
				if sLineaLetta= &quot;2.00&quot; then sLinea = &quot;&quot; &apos;&amp; CHR(13) &amp; CHR(10)
				if sLineaLetta= &quot;ANSI&quot; then sLinea = sLinea = &quot; &quot;&apos;&amp; CHR(13) &amp; CHR(10)
			&apos;	if sLineaLetta = &quot;@;Inizio Dati Generali&quot; then
			&apos;		exit do
			&apos;	end if
				
				if Left(sLineaLetta, 2) = &quot;@a&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@b&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@c&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@d&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@e&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@f&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@g&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@h&quot; then sLinea = &quot;&quot;

				if Left(sLineaLetta, 2) = &quot;@m&quot; then sLinea = &quot;&quot;	
				if Left(sLineaLetta, 2) = &quot;@n&quot; then sLinea = &quot;&quot;		
				if Left(sLineaLetta, 2) = &quot;@9&quot; then sLinea = &quot;&quot; &apos; ci sono molti 9 (9a, 9b etc)
				if Left(sLineaLetta, 2) = &quot;@;&quot; then sLinea = &quot;&quot;			
			
				if Left(sLineaLetta, 2) = &quot;@i&quot; then 
					sSuperC1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					sLinea = &quot;&quot;
				end if
			
				if Left(sLineaLetta, 2) = &quot;@j&quot; then sLinea = &quot;&quot;
			
				If Left(sLineaLetta, 2) = &quot;@k&quot; then
					 sC1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					sLinea = &quot;&quot;
				end if
				if Left(sLineaLetta, 2) = &quot;@l&quot; then
					 sSubC1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					sLinea = &quot;&quot;
				end if
			
				if Left(sLineaLetta, 2) = &quot;@H&quot; then
			
					 lInd1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					&apos; print lInd1
					 lInd1 = (CInt(lInd1)) -1
				 lpos = 1
					 for i=1 to lInd1	 	
						 lpos = InStr (lpos+1, sSuperC1, &quot;|&quot;) 
					 next
					 if lpos = 1 then lpos = lpos-1				 
					 sSuperC = Mid(sSuperC1, lpos+1,(Len (sSuperC1))- lpos)
				&apos;	 print sSuperC
					 If InStr (sSuperC, &quot;|&quot;) &gt; 0 then
						 sSuperC = Left(sSuperC, (InStr (sSuperC, &quot;|&quot;))-1) 
					 end if
					 sLinea = &quot;&quot; 	
				end if
				if Left(sLineaLetta, 2) = &quot;@J&quot; then
					 lInd1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					 lInd1 =(CInt(lInd1)) -1
				 lpos = 1
					 for i=1 to lInd1				 	
					 lpos = InStr (lpos+1, sC1, &quot;|&quot;) 
					 next
					 if lpos = 1 then lpos = lpos-1
					 sC = Mid(sC1, lpos+1,(Len (sC1))- lpos)
					 If InStr (sC, &quot;|&quot;) &gt; 0 then
						 sC = Left(sC, (InStr (sC, &quot;|&quot;))-1) &apos;&amp; CHR(13)&amp; CHR(10)
					 end if
					 sLinea = &quot;&quot; 
						 
				end if	
				if Left(sLineaLetta, 2) = &quot;@K&quot; then
					 lInd1 = (right(sLineaLetta, len(sLineaLetta) - 2))
					 lInd1 =(CInt(lInd1)) -1
				 lpos = 1
					 for i=1 to lInd1				 	
					 lpos = InStr (lpos+1, sSubC1, &quot;|&quot;) 
					 next
					 if lpos = 1 then lpos = lpos-1
						 sSubC = Mid(sSubC1, lpos+1,(Len (sSubC1))- lpos)
					 If InStr (sSubC, &quot;|&quot;) &gt; 0 then
					 	sSubC = Left(sSubC, (InStr (sSubC, &quot;|&quot;))-1) &apos;&amp; CHR(13) 
					 end if
					 sLinea = &quot;&quot; 
				end if	&apos;
				
				if Left(sLineaLetta, 2) = &quot;@V&quot; then
					 sLinea = &quot;@&quot; &amp; &quot;&apos;&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2)) &apos;&amp; sCRLF &apos; codice mod Acca
				end if
			&apos;

				If Left(sLineaLetta, 2) = &quot;@A&quot; then sLinea= &quot;&quot;	&apos; codice originale Basilicata		
				if Left(sLineaLetta, 2) = &quot;@;&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@I&quot; then sLinea = &quot;@&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2)) &apos; n. progressivo... creato dal pwe..
				if Left(sLineaLetta, 2) = &quot;@R&quot; then sLinea= &quot;@Z&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2))
	&apos;			if Left(sLineaLetta, 2) = &quot;@R&quot; then sLinea = &quot;@&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2)) &apos;descr sintetica (eliminare?)
	
				if Left(sLineaLetta, 2) = &quot;@D&quot; then &apos;&amp; &quot; &quot; &apos; descrizione estesa
						sLinea = &quot;@&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2))&amp; &quot; &quot;
				&apos;		sLineaLetta2 = oInputStream.ReadLine
				&apos;		if Left(sLineaLetta2,2 ) &lt;&gt; &quot;@U&quot; then
				&apos;			Do while Left(sLineaLetta2,2 ) &lt;&gt; &quot;@U&quot;
				&apos;				sLineaLetta2 = oInputStream.ReadLine
				&apos;&apos;				slinea = slinea &amp; sLineaLetta2
				&apos;			loop 
				&apos;			sLineaDaScrivere = sLinea
							&apos;exit do
				&apos;			goto temp
				&apos;		 end if
				end if
&apos;				if Left(sLineaLetta, 1) &lt;&gt; &quot;@&quot; then
&apos;				 sLinea = sLineaLetta
&apos;				end if 

				if Left(sLineaLetta, 1) &lt;&gt; &quot;@&quot; And sLineaLetta &lt;&gt; &quot;PWE (PriMus EXCHANGE) - by ACCA&quot; And sLineaLetta&lt;&gt; &quot;2.00&quot;_
								And sLineaLetta&lt;&gt; &quot;ANSI&quot; then
				 sLinea = sLineaLetta
				end if 
				 
				if Left(sLineaLetta, 2) = &quot;@U&quot; then sLinea = &quot;@@&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2)) &apos;um
				if Left(sLineaLetta, 2) = &quot;@N&quot; then sLinea = &quot;&quot;
				If Left(sLineaLetta, 2) = &quot;@Y&quot; then sLinea = &quot;&quot;	&apos; si elimina				
				if Left(sLineaLetta, 2) = &quot;@F&quot; then sLinea = &quot;&quot;
	&apos;ò			if Left(sLineaLetta, 2) = &quot;@O&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@O&quot; then sLinea = &quot;@XX&quot; &amp; (right(sLineaLetta, len(sLineaLetta) - 2)) &apos;ò
				if Left(sLineaLetta, 2) = &quot;@0&quot; then sLinea = &quot;&quot;
				if Left(sLineaLetta, 2) = &quot;@P&quot; then 
						if sLineaLetta= &quot;@P0|0|0|0|0&quot; then 
							sLinea= &quot;&quot;&apos; &amp; CHR(13) &amp; CHR(10)
						else
							sLinea=left(sLineaLetta, len(sLineaLetta) - 4)
							sLinea = right(sLinea, len(sLinea) - 2)
							sLinea = Str(&quot;@&quot; &amp; sLinea)
						&apos;	print &quot;dentro sLinea prezzo &quot; &amp; sLinea
					end if
				end if
				
		&apos;	temp:
			sLineaDaScrivere = sLineaDaScrivere &amp; sLinea
		
	&apos;	print sLineaDaScrivere
			if oInputStream.IsEOF then exit do

		Loop While Not (Left(sLineaLetta, 2) = &quot;@P&quot;)
	
		&apos;loop Until Left(sLineaLetta, 2) &lt;&gt; &quot;@P&quot;
		&apos;		if Left(sLineaLetta, 2) &lt;&gt; &quot;@0&quot;
			&apos;	print &quot;chiudo riga &quot; &amp; sLineaDaScrivere
			temp:
 			sLineaDaScrivere = sSuperC &amp; &quot; - &quot; &amp; sC &amp; &quot; - &quot; &amp; sSubC &amp; sLineaDaScrivere
			sSuperC=&quot;&quot;
			sC=&quot;&quot;
			sSubC =&quot;&quot;
			sLinea =&quot;&quot;
				&apos;	If 	sLineaDaScrivere &lt;&gt; &quot;&quot; then	
		&apos;&apos;	temp:
			oOutputStream.WriteString(sLineaDaScrivere &amp; sCRLF)
			&apos;	end if
			sLineaDaScrivere = &quot;&quot;
				&apos;	print &quot;ciclo grande&quot;
	Loop

	oOutputStream.CloseOutput()
	oInputStream.CloseInput()
&apos;	msgbox &quot;FINITO!!&quot;
	
	Clessid_lock_End
	&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
	Ri_passaggio
	 ForceCSVOpen
	&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;	 
	
&apos;	nome
&apos;	nomi
&apos;	oDoc = ThisComponent
&apos;	sDocURL = oDoc.getURL()
&apos;print	sDocURL
&apos;	sSorgente = ThisComponent.getURL()
&apos;	sSorgente = sDocURL
&apos;print &quot;tornato ancora sorgente &quot; &amp; sSorgente
	Conversione_2&apos;
	&apos;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;	 
&apos;	exit sub

	exit sub &apos;function
	Errore:
		oOutputStream.CloseOutput()
	oInputStream.CloseInput()
		&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	
		Clessid_lock_End
		&apos;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;	
		DETENTORE_GENERALE_ERRORI(sModulSubName, Erl, Err, Error$ )
End Sub



Sub Ri_passaggio
&apos;print &quot;2&quot;
&apos;If ErroreDet = 1 then 
&apos;	on error goto Errore
&apos;end if 

 Clessid_lock_Start
 
Dim oInputFile as Object
Dim oOutputStream as Object
Dim oStreamString as Object
Dim oUcb as Object
Dim sCRLF as String
Dim oInputStream as Object
Dim oOutputFile as Object
dim sLineaLetta as string
Dim sLineaDaScrivere as string
Dim sInputFilePath as string
Dim sOutputFilePath as string

 &apos; sInputFilePath = converttourl(&quot;c:\prova4.txt&quot;)
 sInputFilePath = converttourl(&quot;c:\tempo_csv.txt&quot;)
 sOutputFilePath = converttourl(&quot;c:\p_importato.csv&quot;)

	sCRLF = CHR(13) &amp; CHR(10) &apos;Serve per andare a capo
&apos;Apre il file da cui devi leggere
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	If oUcb.Exists(sInputFilePath) Then
		oInputStream = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
		oInputStream.Encoding = &quot;Latin-9&quot;
		oInputFile = oUcb.OpenFileReadWrite(sInputFilePath)
		oInputStream.SetInputStream(oInputFile.GetInputStream)
	End If
&apos;
&apos;Apre il file in cui devi scrivere
	oUcb = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oOutputStream = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	oOutputStream.Encoding = &quot;Latin-9&quot;
	If oUcb.Exists(sOutputFilePath) Then
		oUcb.Kill(sOutputFilePath)
	End If
	oOutputFile = oUcb.OpenFileReadWrite(sOutputFilePath)
	oOutputStream.SetOutputStream(oOutputFile.GetOutputStream)
&apos;xray oInputStream

	Do Until oInputStream.IsEOF
		sLineaDaScrivere = &quot;&quot;
	&apos;	Do
			sLineaLetta = oInputStream.ReadLine
			sLinea = sLineaLetta
			ricerca =&quot;@XX1&quot;
		&apos;	print slinea
		If InStr (1, sLinea,&quot;@XX1&quot;) &lt;&gt; 0 then
			&apos;	sLinea = Replace(sLinea, &quot;@XX1&quot;, &quot;@&quot;)
			&apos;&apos;&apos;	slinea = &quot;@@&quot; &amp; slinea
		&apos;&apos;	&apos;	sLinea = Replace(sLinea, &quot;@Z&quot;, &quot;@@&quot;)
			&apos;	sLinea = Replace(sLinea, &quot;@Z&quot;, &quot;@@@&quot;)
				
		&apos;	else
		&apos;&apos;	&apos;	sLinea = Replace(sLinea, &quot;@Z&quot;, &quot;@&quot;)
		&apos;&apos;	&apos;	sLinea = Replace(sLinea, &quot;@XX0&quot;, &quot;@&quot;)
		&apos;		sLinea = Replace(sLinea, &quot;@Z&quot;, &quot;@&quot;)
		&apos;		sLinea = Replace(sLinea, &quot;@XX0&quot;, &quot;@&quot;)
				
				sLinea = replaceA(sLinea, &quot;@XX1&quot;, &quot;@&quot;)
				sLinea = replaceA(sLinea, &quot;@Z&quot;, &quot;@@&quot;)
				
			else
				sLinea = replaceA(sLinea, &quot;@Z&quot;, &quot;@&quot;)
				sLinea = replaceA(sLinea, &quot;@XX0&quot;, &quot;&quot;)
		end if
			sLineaDaScrivere = sLineaDaScrivere &amp; sLinea
			if oInputStream.IsEOF then exit do
	&apos;	Loop While Not (Left(sLineaLetta, 2) = &quot;@P&quot;)
	oOutputStream.WriteString(sLineaDaScrivere &amp; sCRLF)
	Loop
	oOutputStream.CloseOutput()
	oInputStream.CloseInput()
	
	Clessid_lock_End
&apos;	msgbox &quot;FINITO!!&quot;
&apos;	ForceCSVOpen

End Sub






Sub Conversione_2&apos;(sOutputFilePath)


&apos;	sSorgente = sOutputFilePath
		sSorgente = ThisComponent.getURL() 
	
&apos;print	thiscomponent.getURL()	

&apos;	print &quot;sorgente...: &quot; &amp; sSorgente
	sInputFilePath = BrowseForFile(&quot;CERCA IL FILE Template_Prezzario.ods E APRILO... &quot;, &quot;&quot;, &quot;C:\windows\desktop&quot;, &quot;*.ods&quot;)
&apos;
	sDestinazione = sInputFilePath 

	sUrlDest = converttourl(sDestinazione)
	
	oDocDest=stardesktop.LoadComponentFromUrl(sUrlDest, &quot;_default&quot;, 0, Array()) 
	wait 1000 
	print	thiscomponent.getURL()
	sNameDest2 = FileNameOutOfPath(ThisComponent.getURL() )
	sNameDest2 = GetFileNameWithoutExtension(sNameDest2)
	print sNameDest2	
&apos;print	thiscomponent.getURL()	
	
	sUrlSrc = converttourl(sSorgente) 			

&apos;	sNameDest2	= &quot;Template_Prezzario-TV&quot;

	
&apos;	sUrlSrc = converttourl(&quot;c:\p_importato&quot;)
&apos;	sUrlSrc = ThisComponent.getURL()
&apos;	print sUrlSrc
	oDocsrc=stardesktop.LoadComponentFromUrl(sUrlSrc, &quot;_default&quot;, 0, Array())
	

&apos;	oDocsrc=stardesktop.LoadComponentFromUrl( sSorgente, &quot;_default&quot;, 0, Array())
	
	oSheet = ThisComponent.Sheets.getByName(&quot;Tabella1&quot;) 
	oCell = oSheet.GetCellByPosition( 5, 5 )
	ThisComponent.CurrentController.Select(sheet)
&apos;print	thiscomponent.getURL()	
&apos;xray ThisComponent.CurrentController
	Copia_Sheet_2_AltroDoc (sNameDest2)
&apos;print
&apos;xray oDocsrc
	oDocsrc.Close(true) &apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;*********************
	
	oDocsrc=stardesktop.LoadComponentFromUrl(sUrlDest, &quot;_default&quot;, 0, Array()) 
&apos;	oSheets = oDoc.Sheets
&apos;xray ThisComponent
	oSheet = ThisComponent.Sheets.getByName(&quot;Tabella1&quot;) 
	oSheetDest = ThisComponent.Sheets.getByName(&quot;Listino&quot;)
	ilastRow = getLastUsedRow(oSheet)
	oSrc = oSheet.getCellRangeByPosition(0,0,25,ilastRow).RangeAddress
	insRows (3, ilastRow+2 ) &apos;insertByIndex non funziona
&apos;	oSheetDest.getRows.insertByIndex(3, ilastRow+2 )
&apos;&apos;	print
	oDest = oSheetDest.GetCellByPosition(0,3 ).CellAddress
 oSheetDest.copyRange(oDest, oSrc)
	oCell = oSheetdest.GetCellByPosition( 0, 3 )
	
	osheets= thiscomponent.sheets
	oSheets.removeByName(&quot;Tabella1&quot;) 
	


Conversione_3
&apos;	xray oRange
End Sub


&apos;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


SUB Conversione_3 &apos; RIFINISCILA_BENE_A

&apos;	oSheet = ThisComponent.currentController.activeSheet
	oSheet =ThisComponent.Sheets.getByName(&quot;Listino&quot;)
	ThisComponent.CurrentController.Select(oSheet)
	oCell=oSheet.GetCellByPosition(3,3)
	ThisComponent.CurrentController.Select(oCell)
	ilastRow = getLastUsedRow(oSheet)
	oSheet.Columns.insertbyindex(0,1)
	&apos;print &quot;2&quot;
	oRange = oSheet.getCellRangeByposition(3, 2 ,3,ilastRow)
	oSrc = oRange.RangeAddress
 oDest = oSheet.GetCellByPosition(0,3).CellAddress
 oSheet.moveRange(oDest, oSrc)
 
&apos; xray oSheet.Columns
	oSheet.Columns.removeByindex(3,1)
	
 

&apos;	oRange = oSheet.getCellRangeByposition(1, 0 ,1,ilastRow)
&apos;	oSrc = oRange.RangeAddress
 &apos; oDest = oSheet.GetCellByPosition(2,0).CellAddress
 &apos; oSheet.moveRange(oDest, oSrc) 
 
&apos;	oRange = oSheet.getCellRangeByposition(8, 0 ,8,ilastRow)
&apos;	oSrc = oRange.RangeAddress
&apos; oDest = oSheet.GetCellByPosition(7,0).CellAddress
 &apos; oSheet.moveRange(oDest, oSrc)
 
&apos;	Osheet.Columns.getbyname(&quot;F&quot;).HoriJustify = 2
 Osheet.Columns.getbyname(&quot;A&quot;).Width=2900
 Osheet.Columns.getbyname(&quot;B&quot;).Width=2900
 Osheet.Columns.getbyname(&quot;C&quot;).Width=3000
 Osheet.Columns.getbyname(&quot;D&quot;).Width=12000
 Osheet.Columns.getbyname(&quot;G&quot;).Width=2000 
 Osheet.Columns.getbyname(&quot;F&quot;).Width=1500
 Osheet.Columns.getbyname(&quot;E&quot;).Width=18500

 Osheet.Columns.getbyname(&quot;H&quot;).Width=2500
 Osheet.Columns.getbyname(&quot;i&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;j&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;k&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;l&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;m&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;n&quot;).Width=2000
 Osheet.Columns.getbyname(&quot;v&quot;).Width=2000

	oSpalte1 = oSheet.getColumns().getByName(&quot;a&quot;) 
	oSpalte1.isVisible = false &apos;TRUE 
	oSpalte1 = oSheet.getColumns().getByName(&quot;b&quot;) 
	oSpalte1.isVisible = TRUE 
	oSpalte1 = oSheet.getColumns().getByName(&quot;d&quot;) 
	oSpalte1.isVisible = false &apos;TRUE 
	oSpalte1 = oSheet.getColumns().getByName(&quot;e&quot;) 
	oSpalte1.isVisible = TRUE 	
	oSpalte1 = oSheet.getColumns().getByName(&quot;f&quot;) 
	oSpalte1.isVisible = TRUE 
	oSpalte1 = oSheet.getColumns().getByName(&quot;f&quot;) 
	oSpalte1.isVisible = TRUE 

 &apos; Osheet.Columns.getbyname(&quot;a&quot;).HoriJustify = 2
 &apos; oRange = oSheet.getCellRangeByposition(0, 3 ,4,ilastRow)
 &apos; ThisComponent.CurrentController.Select(oRange)
&apos;	oRange.IsTextWrapped=true
&apos;	ThisComponent.CurrentController.Select(oSheet.getCellByposition(2, 0))
&apos;	print &quot;adesso converto...?&quot;
	oRange = oSheet.getCellRangeByposition(7, 3 ,7,ilastRow)
	 Che_Digerisce_Quasi_Tutto_e_Lo_Converte_In_Numeri(oRange )
	 
	oRange = oSheet.getCellRangeByposition(8, 3 ,8,ilastRow)
	oSrc = oRange.RangeAddress
 oDest = oSheet.GetCellByPosition(7,3).CellAddress
 &apos;oSheet.copyRange(oDest, oSrc)	
 oSheet.moveRange(oDest, oSrc)
 &apos; sSorgente = ThisComponent.getURL() 
&apos; Esegui_Da_Template_Prezzario_A
	ilastRow = getLastUsedRow(oSheet)

&apos;	oRange = oSheet.getCellRangeByPosition(0,2,0,ilastRow)
&apos;	oRange.CellStyle=&quot;piccolo&quot;
	
	oRange = oSheet.getCellRangeByPosition(1,2,1,ilastRow)
	oRange.CellStyle=&quot;piccolo&quot;
	
	oRange = oSheet.getCellRangeByPosition(0,2,0,ilastRow)
	oRange.CellStyle=&quot;Prezzario&quot;
	
	oRange = oSheet.getCellRangeByPosition(2,2,3,ilastRow)
	oRange.CellStyle=&quot;pSIN&quot;
	
	oRange = oSheet.getCellRangeByPosition(4,2,4,ilastRow)
	oRange.CellStyle=&quot;pSIN&quot;
	
	oRange = oSheet.getCellRangeByPosition(5,2,5,ilastRow)
	oRange.CellStyle=&quot;P NOTE&quot;

		
	oRange = oSheet.getCellRangeByPosition(6,2,6,ilastRow)
	oRange.CellStyle=&quot;p3&quot;
	oRange = oSheet.getCellRangeByPosition(7,2,7,ilastRow)
	oRange.CellStyle=&quot;p4&quot;

 msgbox &quot;FINITO!!! &quot; &amp; chr(10)_
 &amp;&quot; SISTEMA LE RIGHE 3, 4,5... C&apos;E&apos; UN PO&apos; DI CASINO...&quot; &amp; chr(10)_
 &amp;&quot; SISTEMATI UN PO&apos; LA LARGHEZZA DELLA COLONNA &quot;&quot;DESCRIZIONE&quot;&quot;&quot; &amp; chr(10)_
 &amp; &quot; SCRIVI LA SIGLA DEL PREZZIARIO NELLA CELLA B1&quot; &amp; chr(10)_
 &amp; &quot;SALVA IL FILE CON UN NOME APPROPRIATO!&quot; &amp; chr(10) &amp; chr(10)_
 &amp; &quot;E&apos; possibile che le oprazioni descritte sopra siano inibite...&quot; &amp; chr(10)_
 &amp; &quot;In tal caso devi prima salvare il file, chiuderlo e riaprirlo...&quot;
END SUB

Function replaceA (Source As String, Search As String, NewPart As String)
Dim Result As String
Dim StartPos As Long
Dim CurrentPos As Long
Result = &quot;&quot;
StartPos = 1
CurrentPos = 1
If Search = &quot;&quot; Then
Result = Source
Else
Do While CurrentPos &lt;&gt; 0
CurrentPos = InStr(StartPos, Source, Search)
If CurrentPos &lt;&gt; 0 Then
Result = Result + Mid(Source, StartPos, _
CurrentPos - StartPos)
Result = Result + NewPart
StartPos = CurrentPos + Len(Search)
Else
Result = Result + Mid(Source, StartPos, Len(Source))
End If &apos; Position &lt;&gt; 0
Loop
End If
replaceA = Result
End Function

sub Copia_Sheet_2_AltroDoc_Alt (sNameDocDest as string, sCurr_Sheet, sDest_sheet)&apos;(nome nudo senza astensione)
&apos;print sNameDocDest &amp; &quot; &quot;&amp; sCurr_Sheet &amp; &quot; &quot; &amp; sDest_sheet
 firstDoc = ThisComponent
 &apos; selectSheetByName(firstDoc, &quot;Sheet2&quot;)
 
 
 		selectSheetByName(firstDoc, sCurr_Sheet)
 		document.getCurrentController.select(document.getSheets().getByName(sNameDocDest))
 		
 dispatchURL(firstDoc,&quot;.uno:SelectAll&quot;)
 &apos; print &quot;vediamo&quot;
 dispatchURL(firstDoc,&quot;.uno:Copy&quot;)
 &apos;secondDoc = StarDesktop.loadComponentFromUrl(&quot;private:factory/scalc&quot;,&quot;_blank&quot;,0,dimArray())
		secondDoc = stardesktop.LoadComponentFromUrl(sNameDocDest, &quot;_default&quot;, 0, Array())
	&apos;	secondDoc = stardesktop.LoadComponentFromUrl(sNameDocDest, &quot;_default&quot;, thiscomponent.Sheets.Count, Array())
	&apos; 080610 notevole miglioria,,, thiscomponent.Sheets.Count della riga dopo mette le tabelle al fondo
 secondDoc.getSheets().insertNewByName(sDest_sheet, thiscomponent.Sheets.Count)
 selectSheetByName(secondDoc, sDest_sheet)
 &apos; selectSheetByName(secondDoc, &quot;inserted&quot;)
 dispatchURL(secondDoc,&quot;.uno:Paste&quot;)
End Sub
</script:module>