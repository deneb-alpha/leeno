<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="X_TMP" script:language="StarBasic">rem ***** BASIC *****
Sub createButton
 	oSheet=ThisComponent.currentController.activeSheet 
 oCell = oSheet.GetCellbyPosition( 0, 0 )
 oCursor = oSheet.createCursorByRange(oCell)
createButton(&quot;untesto&quot;, &quot;suonome&quot;, &quot;sTag1&quot;, oCursor, 4)
end sub


Sub createButton_exe (sText, sName, sTag, oCursor, way, optional macro, optional oDocument)
 if isMissing(oDocument) Then
 oDocument = ThisComponent
 end if
 Dim button, shape, drawpage
 Dim oSize as new com.sun.star.awt.Size
 Dim oPosition as new com.sun.star.awt.Point

 button = createUnoService(&quot;com.sun.star.form.component.CommandButton&quot;)
 button.Label = sText
 button.Enabled = True
 button.Printable = False
 button.Name = sName
 button.Tag = sTag

 shape = oDocument.createInstance(&quot;com.sun.star.drawing.ControlShape&quot;)
 oSize.Height = 1000
 oSize.Width = 3000
 oPosition.X = 0
 oPosition.Y = 0
 shape.setSize(oSize)
 shape.setPosition(oPosition)
 shape.LayerName = &quot;Controls&quot;
 shape.AnchorType = com.sun.star.text.TextContentAnchorType.AS_CHARACTER
 shape.setControl(button)
 shape.attach(oCursor)

 if not isMissing(macro) then
 Dim oListener
 Dim id,form, oEvent as new com.sun.star.script.ScriptEventDescriptor
 	if way=1 then
 &apos; METHOD 1
	 oEvent.ListenerType = &quot;XActionListener&quot;
	 oEvent.EventMethod = &quot;actionPerformed&quot;
	 oEvent.ScriptType = &quot;Basic&quot;
	 oEvent.ScriptCode = &quot;document:&quot;+macro
	 form = oDocument.DrawPage.getForms().getByIndex(0)
	 id = form.getCount() -1
	 form.registerScriptEvent(id,oEvent)
 	elseif way=2 then
 &apos; METHOD 2
	 oEvent.ListenerType = &quot;XActionListener&quot;
	 oEvent.EventMethod = &quot;actionPerformed&quot;
	 oEvent.ScriptType = &quot;StarBasic&quot;
	 oEvent.ScriptCode = &quot;document:&quot;+macro
	 form = oDocument.DrawPage.getForms().getByIndex(0)
	 id = form.getCount() -1
	 form.registerScriptEvent(id,oEvent)
 	elseif way=3 then
 &apos; METHOD 3
	 oEvent.ListenerType = &quot;XActionListener&quot;
	 oEvent.EventMethod = &quot;actionPerformed&quot;
	 oEvent.ScriptType = &quot;Script&quot;
	 oEvent.ScriptCode = &quot;document:&quot;+macro
	 form = oDocument.DrawPage.getForms().getByIndex(0)
	 id = form.getCount() -1
	 form.registerScriptEvent(id,oEvent)
 	elseif way=4 then
 &apos; METHOD 4
	 oEvent.ListenerType = &quot;XActionListener&quot;
	 oEvent.EventMethod = &quot;actionPerformed&quot;
	 oEvent.ScriptType = &quot;Script&quot;
	 oEvent.ScriptCode = &quot;vnd.sun.star.script:&quot;+macro+&quot;?language=Basic&amp;location=document&quot;
	 form = oDocument.DrawPage.getForms().getByIndex(0)
	 id = form.getCount() -1
	 form.registerScriptEvent(id,oEvent)
 	end if
 end if
End Sub



&apos; by Villeroy
&apos;http://user.services.openoffice.org/en/forum/viewtopic.php?f=45&amp;t=4958&amp;p=22959&amp;hilit=copy+sheets#p22959
rem copy first sheet of this document to position 2 of a new one
Sub copia_foglio &apos;NON copia gli oggetti e i pulsanti (rapida)


rem source document
Dim sURL$, sLinkSheetName$
 sURL = thisComponent.getURL()
 
 	oSheet=ThisComponent.currentController.activeSheet 
	iSheet_num = oSheet.RangeAddress.sheet 
 
 sLinkSheetName = thisComponent.Sheets.getByIndex(iSheet_num).getName()
 
rem target document
Dim doc, sheets, sName$, pos%
 doc = StarDesktop.loadComponentFromURL(&quot;private:factory/scalc&quot;, &quot;_default&quot;,0, Array())
 sheets = doc.getSheets()
 sName = getUniqueName(sheets, &quot;Copied&quot;)
 pos = 1

rem new sheet
Dim sh
 sheets.insertNewByName(sName, pos)
 sh = sheets.getByName(sName)
 
rem link the new sheet
 sh.link(sURL, sLinkSheetName, &quot;calc8&quot;, &quot;&quot;, com.sun.star.sheet.SheetLinkMode.NORMAL)
 
rem break link
 sh.setLinkMode(com.sun.star.sheet.SheetLinkMode.NONE)
End Sub

Function getUniqueName(oContainer,sName$)
Dim i%,sNew$
 sNew = sName
 Do while oContainer.hasByName(sNew)
 i = i +1
 sNew = sName &amp;&quot;_&quot;&amp; i 
 loop
 getUniqueName = sNew
End Function

&apos;_____________________________________________________________________


Sub ciapa
	on error goto errore
	l = 0.0 /10 
errore:
DETENTORE_GENERALE_ERRORI(sModulSubName, Erl, Err, Error$ )
end sub

SUB Property2default(oRange as object) &apos;FUNZIONA
	&apos; queste sono solo alcune delle proprietà... :-(
	&apos;aggiungere man mano che si trovano 
	&apos; ci dovrebbe essere il modo, recuperare le proprietà (un array)
	&apos; e reimpostarle tutte in automatico
	&apos;xray oRange
	oRange.setPropertyToDefault(&quot;CellBackColor&quot;)
	oRange.setPropertyToDefault(&quot;CharFontName&quot;)
	oRange.setPropertyToDefault(&quot;CharHeight&quot;)
	oRange.setPropertyToDefault(&quot;IsTextWrapped&quot;)
	oRange.setPropertyToDefault(&quot;NumberFormat&quot;)
	oRange.setPropertyToDefault(&quot;HoriJustify&quot;)
	oRange.setPropertyToDefault(&quot;VertJustify&quot;)
	oRange.setPropertyToDefault(&quot;ParaLeftMargin&quot;)
	oRange.setPropertyToDefault(&quot;ParaRightMargin &quot;)
	oRange.setPropertyToDefault(&quot;ParaTopMargin&quot;)
	oRange.setPropertyToDefault(&quot;ParaBottomMargin&quot;)
	oRange.setPropertyToDefault(&quot;CharWeight&quot;)
	oRange.setPropertyToDefault(&quot;CharFontStyleName&quot;)	
	oRange.setPropertyToDefault(&quot;CharUnderline&quot;) 
	oRange.setPropertyToDefault(&quot;ValidationLocal&quot;)
 	oRange.setPropertyToDefault(&quot;Validation&quot;) 
	oRange.setPropertyToDefault(&quot;ShadowFormat&quot;) 
	oRange.setPropertyToDefault(&quot;ShrinkToFit&quot;) 
	oRange.setPropertyToDefault(&quot;Charemphasis&quot;)
	oRange.setPropertyToDefault(&quot;CharPosture&quot;)
	oRange.setPropertyToDefault(&quot;CharWeight&quot;)
End sub



Sub popi_serva &apos;accrocchio solo per giuserpe...
	oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
	oCelle=thisComponent.getCurrentSelection().getCellAddress() 
	lrowStart = oCelle.Row 

	if msgbox (&quot;Questa macro è per Esperti &quot; &amp; CHR(10)_
		&amp; &quot; serve a inserire una riga vuota &quot;&quot;a passo&quot;&quot; in una tabella con dei dati&quot; &amp; CHR(10)_
		&amp; &quot; è stata creata per GiuSerpe... e che io sappia la usa solo lui...)&quot; &amp; CHR(10)_
		&amp; &quot; Procedo ? &quot; &amp; CHR$(10) &amp; CHR$(10)_
		&amp; &quot;&quot; ,36, &quot;&quot;) &lt;&gt; 6 then
		exit sub
	end if			
	sScelta = msgbox (CHR$(10) &amp;&quot;Vuoi Cominciare dall&apos;inizio della Tabella? &quot; &amp; CHR$(10)&amp; CHR$(10)_
				&amp; &quot;(Se NO! inizio dalla riga corrente...) &quot;&amp; CHR$(10)&amp; CHR$(10)_
				&amp; &quot;&quot; ,291, &quot;&quot;) 
				
	If sScelta = 2 then &apos; se Annulla
		exit sub
		else 
		If sScelta = 6 then &apos;se SI
				lrow = 0
			else
				lrow=lrowStart
		end if
	end if	
	
	
	oCell = oSheet.GetCellByPosition( 0, lrow )
 	lLastUrow = getLastUsedRow(oSheet)
	lpasso = inputbox (&quot; Inserisci il passo di inserimento...&quot;) &apos;
	if lpasso = &quot;&quot; then
		 exit sub
	end if
 	lrows = inputbox (&quot;Scrivi il numero di righe vuote da inserire...&quot;) 
 	if lrows = &quot;&quot; then
		 exit sub
 	end if

&apos;	lrow=oCelle.Row 
 	lLastUrow = getLastUsedRow(oSheet)
	lrow = lrow+lpasso
	lDove = lrow&apos;+lrows
&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 0, lrow ))&apos;debug
&apos;		print &quot;vediamo all&apos;inizio &quot; &amp; lDove

	Do while lrow &lt; lLastUrow+lpasso
		insRows (lDove, lrows)
&apos;		oSheet.getRows.insertByIndex(lDove, lrows)

		lLastUrow = getLastUsedRow(oSheet)
		lrow = lrow+lrows+lpasso
		lDove = lrow &apos;+1 &apos;+lpasso&apos;+lrows
	&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 0, lrow ))&apos;debug
	&apos;	print &quot;dentro e fatto &quot; &amp; lrow
	&apos;	ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 0, lrow ))&apos;debug	
	&apos;	print lLastUrow &amp; &quot; &quot; &amp; lrow
	loop
End Sub


Sub BackGround_2_default
	on error goto errore

	oSheet = ThisComponent.Sheets.getByName(_
	ThisComponent.currentcontroller.activesheet.name)
 	ocell = thiscomponent.currentselection()
	sCellStyle = ocell.CellStyle
&apos;	msgbox &quot;Il colore di sfondo dello Stile &lt;&quot; &amp; sCellStyle &amp; &quot;&gt; applicato alla cella selezionata&quot; &amp; CHR$(10)_
	&apos; &amp; &quot; è stato resettato a &quot;&quot;Default&quot;&quot; &quot; 
&apos;	dim oMyStyleCell as object
	oMyStyleCell = Thiscomponent._
		StyleFamilies.CellStyles.getByName(sCellStyle)
		
&apos;	xray 	oMyStyleCell&apos;.getPropertyDefaults(&quot;b&quot;)
&apos;	getParentStyle ( ) AS string 
&apos;getPropertyDefault
	&apos;________________________________
oMyStyleCell.setPropertyToDefault(&quot;CellBackColor&quot;)

&apos;oMyStyleCell.setPropertyToDefault(&quot;topborder.OuterLineWidth&quot;)

&apos;oMyStyleCell.setPropertyToDefault(&quot;OuterLineWidth&quot;)
&apos;
&apos;___questa funzia__________________________________________________
errore:
DETENTORE_GENERALE_ERRORI(sModulSubName, Erl, Err, Error$ )

end Sub


Sub Validation_2_default
	oSheet = ThisComponent.Sheets.getByName(_
	ThisComponent.currentcontroller.activesheet.name)
 	ocell = thiscomponent.currentselection()
	sCellStyle = ocell.CellStyle
&apos;	msgbox &quot;Il colore di sfondo dello Stile &lt;&quot; &amp; sCellStyle &amp; &quot;&gt; applicato alla cella selezionata&quot; &amp; CHR$(10)_
	&apos; &amp; &quot; è stato resettato a &quot;&quot;Default&quot;&quot; &quot; 
&apos;	dim oMyStyleCell as object
	oMyStyleCell = Thiscomponent._
		StyleFamilies.CellStyles.getByName(sCellStyle)
		
&apos;	xray 	oMyStyleCell&apos;.getPropertyDefaults(&quot;b&quot;)
&apos;	getParentStyle ( ) AS string 
&apos;getPropertyDefault
	&apos;________________________________

xray oMyStyleCell
oMyStyleCell.setPropertyToDefault(&quot;ValidationLocal&quot;)

&apos;oMyStyleCell.setPropertyToDefault(&quot;topborder.OuterLineWidth&quot;)

&apos;oMyStyleCell.setPropertyToDefault(&quot;OuterLineWidth&quot;)
&apos;
&apos;___questa funzia__________________________________________________
end sub




Sub Border_2_default
	oSheet = ThisComponent.Sheets.getByName(_
	ThisComponent.currentcontroller.activesheet.name)
 	ocell = thiscomponent.currentselection()
	sCellStyle = ocell.CellStyle
	msgbox &quot;I bordi dello Stile &lt;&quot; &amp; sCellStyle &amp; &quot;&gt; applicati alla cella selezionata&quot; &amp; CHR$(10)_
	 &amp; &quot; sono stati resettati a &quot;&quot;Default&quot;&quot; &quot; 
&apos;	dim oMyStyleCell as object
	oMyStyleCell = Thiscomponent._
		StyleFamilies.CellStyles.getByName(sCellStyle)
&apos;	xray 	oMyStyleCell
&apos;________________________________
oMyStyleCell.setPropertyToDefault(&quot;ShadowFormat&quot;)&apos;?????????????


&apos;___questa funzia__________________________________________________

End Sub

Function Verifica_chiudi_preview &apos;(optional sPrima as string)
	dim document as object
	dim dispatcher as object
	 if ThisComponent.getCurrentController.getFrame.LayoutManager.isElementVisible _
	 ( &quot;private:resource/toolbar/previewbar&quot; ) Then &apos; controlla se si è in preview 
 Verifica_chiudi_preview = &quot;Attiva&quot;
 	 document = ThisComponent.CurrentController.Frame 
 	 dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;) 
 	 dispatcher.executeDispatch(document, &quot;.uno:ClosePreview&quot;, &quot;&quot;, 0, Array()) 
	 End If 
End Function
</script:module>