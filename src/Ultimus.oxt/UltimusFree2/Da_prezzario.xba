<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Da_prezzario" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

Global oUltimo_indirizzo_conosciuto as object
Global sUltimo_indirizzo_conosciuto as string
Global sPrezzario_in_uso as string
&apos;Global sFlag as string&apos;

sub ApriAltroCapitoloPrezzario &apos;giuseppe vizziello 2013
on error goto avviso
&apos;	on error goto errore_apri
	Dim mArgs()
	Dim sUrl As String
	Dim sName As String
	Dim lFlags As Long
	Dim oDoc as Object
	Dim oDocOld as Object
	If NOT GlobalScope.BasicLibraries.isLibraryLoaded( &quot;Tools&quot; ) Then 
		GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; ) 
	End If 
	If NOT GlobalScope.BasicLibraries.isLibraryLoaded( &quot;Gimmicks&quot; ) Then 
		GlobalScope.BasicLibraries.LoadLibrary( &quot;Gimmicks&quot; ) 
	End If
	oDoc = ThisComponent
	If (oDoc.hasLocation()) Then
		sDocURL = oDoc.getURL() &apos;url
		sUrl = DirectoryNameoutofPath(sDocURL, &quot;/&quot;) &apos;path
		sFileName = GetFileNameWithoutExtension(sDocURL, &quot;/&quot;) &apos;file
	End If
	&apos;oSheet.GetCellbyPosition( 0, i ).string
	&apos;sName = oDoc.CurrentSelection.getString()
	Dim oSelezione as Object
	oSelezione = ThisComponent.getCurrentSelection()
	oSheet = ThisComponent.Sheets.getByName(&quot;Listino&quot;)
	lrow= oSelezione.CellAddress.Row
	sName = oSheet.GetCellbyPosition( 4, lrow ).String
	sFile = sUrl + &quot;/&quot; + sName + &quot;.ods&quot;
	lFlags = com.sun.star.frame.FrameSearchFlag.CREATE + _
	com.sun.star.frame.FrameSearchFlag.ALL
&apos;	sFile =&quot;file:///&quot; + sPath + sUrl
&apos;	MsgBox sFile
	oDocument = StarDesktop.loadComponentFromURL( sFile, &quot;_blank&quot;, lFlags, mArgs())
 	oSheet = ThisComponent.Sheets.getByName(&quot;listino&quot;)
 ThisComponent.CurrentController.Select(oSheet.GetCellByPosition(0, 4))
	oDoc.close(true)
	goto fine
	errore_apri:
	msgbox &quot;Devi selezionare il nome file del Capitolo, oppure il file è inesistente!&quot;
	exit sub
	avviso:
 ThisComponent.CurrentController.Select(oSheet.GetCellByPosition(0, 4))
	msgbox &quot;Seleziona il nome di un Capitolo&quot;,48,&quot;ATTENZIONE!&quot;
	fine:
	&apos;Close sDocURL
End Sub
Sub Vai_a_Contabilita

	If UltimusFree2.Lupo_0.sUltimus = &quot;&quot; then &apos; se non è definoto...
				Select case msgbox (&quot;Al momento non c&apos;è un Documento di Contabilità Corrente (DCC) definito!&quot; &amp; CHR$(10) &amp; CHR$(10)_
					&amp; &quot;Puoi definirlo adesso caricando il documento di Computo dal tuo HardDisk &quot; &amp; CHR$(10)_
					&amp; &quot;(lo devi &apos;caricare&apos; nuovamente... anche se è già aperto)&quot; &amp; CHR$(10)_
					&amp;&quot; Carico il documento ?... &quot; &amp; CHR$(10) _
 					&amp; CHR$(10) &amp; &quot;&quot;,35, &quot;Definisco il documento di Contabilità DCC ?&quot;) 
 				
					case 6 &apos;SI
						sSourceURL = GetFileURL( _
						&quot;CARICA IL TUO DOCUMENTO DI COMPUTO&quot;)
						If sSourceURL &lt;&gt; &quot;&quot; Then 
 								Stardesktop.LoadComponentFromUrl(sSourceURL, &quot;_default&quot;, 1, Array())
 								wait 100 &apos; 
 							else
								msgbox (&quot;Non hai selezionato il file.&quot; &amp; CHR$(10) &amp; CHR$(10)_
								 &amp; &quot;Operazione annullata!&quot; &amp; CHR$(13)&amp; CHR$(13), 0, &quot;AVVISO!&quot;)
								exit sub
 						end if
					case 7
	 					exit sub
 	 				case 2
 						exit sub
 			end select	
			Scrivi_Globale &apos;registra il doc come DCC 
	end if
 	 SUrl = UltimusFree2.Lupo_0.sUltimus
	sUrl2 = ConvertToUrl (UltimusFree2.Lupo_0.sUltimus)
	oDoc=StarDesktop.LoadComponentFromUrl(sUrl2, &quot;_default&quot;, 0, Array())
	iTemp = 200 &apos; tantra techniquespirlo
	do while thisComponent.Sheets.hasByName(&quot;Listino&quot;)
			iTemp = iTemp +Itemp
			if iTemp &gt;3000 then
				exit do
			end if
			wait iTemp
	loop			
 	Sel_Elenco_Prezzi
END SUB



Sub Voce_a_ElencoPrezzi &apos;Corretta/Modificata da Lido
&apos;---------------------------------------------------------------------------
sQualeTipoCodice = &quot;interno&quot;
Voce_a_ElencoPrezzi_Alt (sQualeTipoCodice)

end sub

&apos;_______________________________________________________________________________________+++++++++++++++++++++++++++++++++++++++++

Sub Voce_a_ElencoPrezzi_cod_orig 
&apos;---------------------------------------------------------------------------
sQualeTipoCodice = &quot;originale&quot;
Voce_a_ElencoPrezzi_Alt (sQualeTipoCodice)

end sub


 
Sub SpostaCursore_su_Prezzario
&apos;xray oUltimo_indirizzo_conosciuto
&apos;print &quot;Adesso: SpostaCursore_su_Prezzario&quot;
	dim iSheetNum as integer
	dim lrow as long
	on error resume next
	Set oCalcApp = ThisComponent
&apos;xray UltimusFree2.Da_prezzario.oUltimo_indirizzo_conosciuto
	If isNull( oUltimo_indirizzo_conosciuto) then &apos; or oUltimo_indirizzo_conosciuto=&quot;&quot; then
		exit sub
	end if
		iSheetNum = UltimusFree2.Da_prezzario.oUltimo_indirizzo_conosciuto.RangeAddress.Sheet
	lrow = UltimusFree2.Da_prezzario.oUltimo_indirizzo_conosciuto.RangeAddress.StartRow
	Set oSheet = oCalcApp.sheets.getByIndex(iSheetNum)
	Set oCalcView = oCalcApp.CurrentController 
	If IsNull (oUltimo_indirizzo_conosciuto) then
	&apos;	print &quot;vuota&quot;
		exit sub
	end if
 ThisComponent.CurrentController.Select(oUltimo_indirizzo_conosciuto) 
	oCell = oSheet.GetCellByPosition(2 , lrow )
	ThisComponent.CurrentController.Select(oCell)
END SUB



Sub Ritorna_al_prezziario() &apos;Alt-Z
	&apos;salta sull&apos;ultimo prezzario usato (se è noto...)
	&apos; altrimenti, se è un prezzario, e se può torna la
	&apos; computo corrente 
	 &apos;oSheet = ThisComponent.currentController.activeSheet
&apos;	 sSheetName= ThisComponent.currentcontroller.activesheet.name
	If thisComponent.Sheets.hasByName(&quot;Computo&quot;) Then
		If sPrezzario_in_uso &lt;&gt; &quot;&quot; then
			 oDoc=StarDesktop.LoadComponentFromUrl(ConvertToUrl (sPrezzario_in_uso), &quot;_default&quot;, 0, Array())
			else
			 msgbox &quot;OOPS! ... mi sono dimenticato su quale prezzario stavamo lavorando...&quot;
		end if
	 Else
		Vai_a_Contabilita 	
	end if
end sub



&apos;*****************************************************************************************



&apos;_________________________________________________________________________________________________________________________
SUB ACCODA_PREZZO_UNIVERS_TV_SIC &apos; versione con incidenza + sicurezza. variante con livelli ( per elettrici Piemonte)
&apos; al momento è strutturarata per digerire Milano e Piemonte, Cuneo, Marche
dim xA as string
dim xC as string
dim xD as string
dim oSheet as object
dim oCell as object
dim oCellS as object
dim livelli as long
&apos;&apos;&apos;on error goto msgerr
 oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
 oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;) 
 oCell=thisComponent.getCurrentSelection()
 oCellS = oCell &apos; punto di inizio 
 lrow=oCell.RangeAddress.StartRow 
 oCell = oSheet.GetCellByPosition( 7, lrow ) 

	xA = oCell.string
	If xA = &quot;&quot; or lrow &lt; 2 Then
		 ThisComponent.CurrentController.Select(oCellS)
		 MsgBox &quot;HAARG!!! :-( /*\# La riga selezionata NON contiene una voce (figlia) VALIDA!&quot;_
		 &amp; &quot;(Infatti non trovo il prezzo!) Il cursore deve stare su una riga che contiene un PREZZO!!!!&quot;_
		 &amp; &quot; Controlla se sei sulla riga giusta e riprova!!&quot;
		&apos; ThisComponent.CurrentController.Select(oCellS)
		 exit sub
	end if

	sCategoria = oSheet.GetCellByPosition( 0, lrow).string
	livelli = oSheet.GetCellByPosition( 6, 0).value 
&apos;		ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 6, 0))
&apos;	print livelli
	if livelli &gt; 3 then
		print &quot;sup&quot;
		ocell = oSheet.GetCellByPosition( 6, 0)&apos;.value 
 		ThisComponent.CurrentController.Select(oCell)
		msgbox &quot; Il numero dei Livelli impostato è &quot; &amp; livelli &amp; CHR$(10)_
			&amp; &quot; Al momento Ultimus gestisce solo 3 livelli...&quot; &amp; CHR$(10)_
			&amp; &quot; pertanto devi ridurre il numero dei livelli ad un numero non superiore a 3&quot; &amp; CHR$(10) &amp; CHR$(10)_
				&amp; &quot;(Se qualcuno ritiene utile o necessario avere ulteriori livelli me lo faccia sapere...)&quot;
				exit sub
	end if
	
	if livelli = 0 then 
		oSheet.GetCellByPosition( 6, 0).value=1
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
		livelli =oSheetTemp.GetCellByPosition( 0, 6 ).value
		msgbox &quot;Il livello di accodamento voce era vuoto!&quot; &amp; CHR$(10) &amp; CHR$(10)_
					&amp;	&quot;Di default ho assegnato 1, ma puoi modificare il valore direttamente&quot; &amp; CHR$(10)_
					&amp; &quot;nella cella G1 (tabella &quot;&quot;Listino&quot;&quot;) !&quot; &amp; CHR$(10)_
					&amp; &quot;Fai qualche prova....&quot;&amp; CHR$(10)_
					&amp; &quot;&quot;
					
		oCell = oSheet.GetCellByPosition( 7, lrow ) 
	end if

	Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string

	&apos; Se invece B9 è vuota viene impostata a 2 ed eseguito il Case 2, buono per Milano e Piemonte
	&apos; Nel caso di nuove tipologie sarà sufficiente impostare del codice adatto e creare un altro case 
	if tipologia = &quot;&quot; then
		tipologia = &quot;Normale&quot;
	end if

	if tipologia = &quot;Normale&quot; then
&apos;	print &quot;normale&quot;
		if oSheetTemp.GetCellByPosition( 4, 8).string = &quot;sic_%_13&quot; then &apos; versione con sicurezza e manodop a scela automatica
				Accoda_Normale_4(livelli, lrow)
			else
				Accoda_Normale(livelli, lrow)
		end if
	end if
	if tipologia = &quot;CN&quot; then
&apos;	print &quot;cn&quot;
		Accoda_CN(livelli, lrow)
	end if
	if tipologia = &quot;MS&quot; then
&apos;	print &quot;MS&quot;
		Accoda_MS(livelli, lrow)
	end if
	if tipologia = &quot;MARCHE&quot; then
&apos;	print &quot;MARCHE&quot;
		Accoda_MARCHE(livelli, lrow)
	end if
end sub


&apos;_________________________________________________________________________-

SUB ACCODA_PREZZO_UNIVERS_TV &apos; versione con incidenza------ variante con livelli ( per elettrici Piemonte)
&apos; al momento è strutturarata per digerire Milano e Piemonte Cuneo
&apos; Questa DEVE ESSERE QUELA BUONA (la più avanzata) (ma allora TVsic ?)
dim xA as string
dim xC as string
dim xD as string
dim oSheet as object
dim oCell as object
dim oCellS as object
dim livelli as long
&apos;&apos;&apos;on error goto msgerr
 oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
 oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;) 
 oCell=thisComponent.getCurrentSelection()
 oCellS = oCell &apos; punto di inizio 
 lrow=oCell.RangeAddress.StartRow 
 oCell = oSheet.GetCellByPosition( 7, lrow ) 
&apos;print oCell.value

	&apos; questa supera il problema possibile
	&apos; di avere dei prezzi in formATO STRINGA
	if oCell.value = isNotANumber then
			xA = oCell.string
		else
			xA = oCell.value
	end if

	If xA = &quot;&quot; or xA = 0 or lrow &lt; 2 Then
		 ThisComponent.CurrentController.Select(oCellS)
		 MsgBox &quot;HAARG!!! :-( /*\# La riga selezionata NON contiene una voce (figlia) VALIDA!&quot;_
		 &amp; &quot;(Infatti non trovo il prezzo!) Il cursore deve stare su una riga che contiene un PREZZO!!!!&quot;_
		 &amp; &quot; Controlla se sei sulla riga giusta e riprova!!&quot;
		&apos; ThisComponent.CurrentController.Select(oCellS)
		 exit sub
	end if

	sCategoria = oSheet.GetCellByPosition( 0, lrow).string
	&apos;oSheetTemp = thisComponent.sheets.getbyname(&quot;Listino&quot;)
	
&apos; la cella B9 viene usata per inserire un eventuale codice che identifica la tipologia
&apos; del prezzario. 
&apos;	Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string 
	livelli = oSheet.GetCellByPosition( 6, 0).value 
&apos;		ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 6, 0))
&apos;	print livelli
	if livelli &gt; 3 then
		print &quot;sup&quot;
		ocell = oSheet.GetCellByPosition( 6, 0)&apos;.value 
 		ThisComponent.CurrentController.Select(oCell)
		msgbox &quot; Il numero dei Livelli impostato è &quot; &amp; livelli &amp; CHR$(10)_
			&amp; &quot; Al momento Ultimus gestisce solo 3 livelli...&quot; &amp; CHR$(10)_
			&amp; &quot; pertanto devi ridurre il numero dei livelli ad un numero non superiore a 3&quot; &amp; CHR$(10) &amp; CHR$(10)_
				&amp; &quot;(Se qualcuno ritiene utile o necessario avere ulteriori livelli me lo faccia sapere...)&quot;
				exit sub
	end if
	
	if livelli = 0 then 
			oSheet.GetCellByPosition( 6, 0).value=1
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
			livelli =oSheetTemp.GetCellByPosition( 0, 6 ).value
			msgbox &quot;Il livello di accodamento voce era vuoto!&quot; &amp; CHR$(10) &amp; CHR$(10)_
					&amp;	&quot;Di default ho assegnato 1, ma puoi modificare il valore direttamente&quot; &amp; CHR$(10)_
					&amp; &quot;nella cella G1 (tabella &quot;&quot;Listino&quot;&quot;) !&quot; &amp; CHR$(10)_
					&amp; &quot;Fai qualche prova....&quot;&amp; CHR$(10)_
					&amp; &quot;&quot;
					
			oCell = oSheet.GetCellByPosition( 7, lrow ) 
		&apos;	oSheetTemp.GetCellByPosition( 1, 1 ).value=2
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
	end if

Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string

oUltimo_indirizzo_conosciuto = ThisComponent.CurrentSelection
	&apos; sUltimo_indirizzo_conosciuto = 
&apos;	 oConv = ThisComponent.createInstance(&quot;com.sun.star.table.CellAddressConversion&quot;)
 &apos; oConv.Address = oUltimo_indirizzo_conosciuto.getRangeAddress
 &apos; oLdescAnalisi = &quot;=$&quot; + oConv.UserInterfaceRepresentation
&apos; xray oUltimo_indirizzo_conosciuto &apos; oConv
&apos;print tipologia

&apos; Se invece B9 è vuota viene impostata a 2 ed eseguito il Case 2, buono per Milano e Piemonte
&apos; Nel caso di nuove tipologie sarà sufficiente impostare del codice adatto e creare un altro case 
	if tipologia = &quot;&quot; then
		tipologia = &quot;Normale&quot;
	end if
	if tipologia = &quot;Normale&quot; then
		if oSheetTemp.GetCellByPosition( 4, 8).string = &quot;sic_%_13&quot; then &apos; versione con sicurezza e manodop a scela automatica
				Accoda_Normale_4(livelli, lrow)
			else
				Accoda_Normale(livelli, lrow)
		end if
	end if

	if tipologia = &quot;CN&quot; then
&apos;	print &quot;cn&quot;
		Accoda_CN08(livelli, lrow)
	end if
	if tipologia = &quot;CN08&quot; then
&apos;	print &quot;cn&quot;
		Accoda_CN08(livelli, lrow)
	end if
	if tipologia = &quot;MS&quot; then
&apos;	print &quot;MS&quot;
		Accoda_MS(livelli, lrow)
	end if
		if tipologia = &quot;DEA&quot; then
	&apos;	print &quot;DEA&quot; &apos; per il prezziario DEA che è sempliciotto ma difficile
		Accoda_DEA(livelli, lrow)
	end if
	if tipologia = &quot;SCNVA&quot; then
	&apos;	print &quot;SCNVA&quot; &apos; per il prezziario ambientale Trento che ha le descrizioni senza codici
		Accoda_SCNVA(livelli, lrow)
	end If

	oSheetListino = thisComponent.sheets.getbyname(&quot;Listino&quot;)
	
	If ucase(oSheetListino.GetCellByPosition(8, 0).getstring) = &quot;SÌ&quot; Or _
		ucase(oSheetListino.GetCellByPosition(8, 0).getstring) = &quot;SI&quot; Or _
		ucase(oSheetListino.GetCellByPosition(8, 0).getstring) = &quot;SI&apos;&quot; Then Voce_a_ElencoPrezzi_cod_orig
end sub


&apos;_______________________________________________________________________________


SUB ACCODA_PREZZO_UNIVERS &apos; al momento è strutturarata per digerire Milano e Piemonte 
&apos;ay oSheet.GetCellByPosition( 7, lrow)
dim xA as string
dim xC as string
dim xD as string
&apos;dim oSheet as object
dim oCell as object
dim oCellS as object
&apos;&apos;&apos;on error goto msgerr
 oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
 oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;) 
 oCell=thisComponent.getCurrentSelection()
 oCellS = oCell &apos; punto di inizio 
 lrow=oCell.RangeAddress.StartRow 
 oCell = oSheet.GetCellByPosition( 7, lrow ) 
 
	xA = oCell.string
	If xA = &quot;&quot; Then
		 MsgBox &quot;HAARG!!! :-( /*\# La riga selezionata NON contiene una voce (figlia) VALIDA!&quot;_
		 &amp; &quot;(Infatti non trovo il prezzo!) Il cursore deve stare su una riga che contiene un PREZZO!!!!&quot;_
		 &amp; &quot; Controlla se sei sulla riga giusta e riprova!!&quot;
		 ThisComponent.CurrentController.Select(oCellS)
		 exit sub
	end if
	
	
	if oSheet.GetCellByPosition( 7, lrow).value = isNotANumber then
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getstring
				else
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getvalue
	end if
	sUM = oSheet.GetCellByPosition( 6, lrow).string
	sDescr0 = oSheet.GetCellByPosition( 4, lrow).string
	sAlfaNum0 = oSheet.GetCellByPosition( 2, lrow).string
	sAlfaNum1 = oSheet.GetCellByPosition( 2, lrow-1).string
	lAlfa0 = Len (sAlfaNum0)
	oCell = oSheet.GetCellByPosition( 2, lrow )
	lAlfaA = Len(oCell.string)
	sAlfac1 = oSheet.GetCellByPosition( 2, lrow-1).string
	sCategoria = oSheet.GetCellByPosition( 0, lrow).string
	oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;)
	
&apos; la cella B9 viene usata per inserire un eventuale codice che identifica la tipologia
&apos; del prezzario. 
	Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string 
&apos; Al momento funziona così:	se la cella contiene &quot;CN&quot;
&apos; viene eseguito un Case &quot;CN&quot; con istruzioni di accodamento specifiche per Cuneo
&apos; Se invece B9 è vuota viene impostata a 2 ed eseguito il Case 2, buono per Milano e Piemonte
&apos; Nel caso di nuove tipologie sarà sufficiente impostare del codice adatto e creare un altro case 
	if tipologia = &quot;&quot; then
		tipologia = 2
	end if

	
	Select Case Tipologia
	
	Case &quot;CN&quot; 
		Do while sAlfaNum0 = sAlfaNum1 
				lrow = lrow-1
				oCell = oSheet.GetCellByPosition( 2, lrow )
				&apos;lAlfaA = Len( oCell.string)
				sAlfaNum1 = oSheet.GetCellByPosition( 2, lrow).string			
		loop 
		lrow = lrow+1
		If oSheet.GetCellByPosition( 7, lrow).getvalue = 0 then 
					sDescr1 = oSheet.GetCellByPosition( 4, lrow).string
					goto voce_completa
			else
					sDescr1 = oSheet.GetCellByPosition( 4, lrow-1).string
		end if

	Case 2 &apos; per Milano e Piemonte (se cella B9 è vuota Tipologia = 0)
			lrow = lrow-1
			oCell = oSheet.GetCellByPosition( 2, lrow )
			lAlfaA = Len( oCell.string)
			sAlfac1 = oSheet.GetCellByPosition( 3, lrow).string

			Do while lAlfaA = lAlfa0 AND sAlfac1 &lt;&gt; &quot;P&quot; 
				lrow = lrow-1
				oCell = oSheet.GetCellByPosition( 2, lrow )
				lAlfaA = Len( oCell.string)
				sAlfac1 = oSheet.GetCellByPosition( 3, lrow).string			
			&apos;	ThisComponent.CurrentController.Select(oCell)&apos;debug	
			loop 
			sDescr1 = oSheet.GetCellByPosition( 4, lrow).string
	
			If sAlfac1 = &quot;P&quot; then &apos; se è milano...
	
					sDescr1 = oSheet.GetCellByPosition( 4, lrow).string
					goto voce_completa
			end if
			
&apos;		PRINT &quot;SECONDO&quot;
			&apos;lrow = lrow+1 
			oCell = oSheet.GetCellByPosition( 2, lrow )
		&apos;	ThisComponent.CurrentController.Select(oCell)&apos;debug	
			
			lAlfa0 = lAlfaA
			lAlfaA = Len( oCell.string)
	
			Do while lAlfaA = lAlfa0 
				lrow = lrow-1
				oCell = oSheet.GetCellByPosition( 2, lrow )
				lAlfaA = Len( oCell.string)
				sAlfac1 = oSheet.GetCellByPosition( 3, lrow).string
			loop
			IF lAlfaA &gt; lAlfa0 then
				goto voce_completa
			end if
			sDescr2 = oSheet.GetCellByPosition( 4, lrow).string			
			oCell = oSheet.GetCellByPosition( 2, lrow )

	End select
	 

	voce_completa:
	
	If sDescr1 = sDescr2 then &apos; su milano ci sono voci dove 
	&apos;la descr è ripetuta tal quale... e possiamo eliminarla subito.
		sDescr2 = &quot;&quot; &apos;
	end if
	If sDescr0 = sDescr1 then
		sDescr1 = &quot;&quot;
	end if	
	&apos;
	
	 oUltimo_indirizzo_conosciuto = ThisComponent.CurrentSelection

 
&apos;print oUltimo_indirizzo_conosciuto
&apos; tutti i dati sono adesso stivati nelle variabili
	oSheet = oSheetTemp
	Thiscomponent.currentcontroller.setactivesheet(oSheet)


	Flags = com.sun.star.sheet.CellFlags.STRING
	oRange = oSheet.getCellRangeByPosition (1,2,5,2)
 	oRange.clearContents(Flags)


	if sCategoria &lt;&gt; &quot;&quot; then
		oSheet.getCellByPosition(5,5).string = sCategoria 
	end if

	SCompleta1 = sAlfaNum0
	oSheet.getCellByPosition(1,2).string = SCompleta1

	if Len( sDescr3) &lt;&gt; 0 then
		 sDescr3 = sDescr3 &amp; CHR(13)
	end if
	if Len( sDescr2) &lt;&gt; 0 then
		 sDescr2 = sDescr2 &amp; CHR(13)
	end if
	if Len( sDescr1) &lt;&gt; 0 then
		 sDescr1 = sDescr1 &amp; CHR(13)
	end if

	SCompleta2 = sDescr3 &amp; sDescr2 &amp; sDescr1 &amp; sDescr0
 	oSheet.getCellByPosition(2,2).string=SCompleta2

	SCompleta3 = sUM
	oSheet.getCellByPosition(3,2).string=SCompleta3 
	
	SCompleta4 = Prezzo
	oSheet.getCellByPosition(4,2).value = SCompleta4 &apos;Attenzione!	
	&apos; il prezzo DEVE essere un numero VERO (non stringa)

&apos;	SCompleta5 = &quot;=CONCATENATE(&quot;&quot;(&quot;&quot;;F5; &quot;&quot;)&quot;&quot;; &quot;&quot; &quot;&quot;; &quot; &amp; &quot; &quot; &amp; &quot;&quot;&quot;&quot; &amp; sAlfaNum0 &amp; &quot;&quot;&quot;&quot; &amp; &quot;)&quot;
	SCompleta5 = &quot;=CONCATENATE(&quot;&quot;(&quot;&quot;;F5; &quot;&quot;)&quot;&quot;; &quot;&quot; &quot;&quot;; &quot; &amp; &quot; &quot; &amp; &quot;&quot;&quot;&quot; &amp; sAlfaNum0 &amp; &quot;&quot;&quot;&quot; &amp; &quot;)&quot;

	oSheet.getCellByPosition(5,2).formula = SCompleta5
	
&apos;	print &quot;trallala&quot;
 oCell=oSheet.getCellByPosition(2,2) 
 ThisComponent.CurrentController.Select(oCell)
	ScriptPy(&quot;pyleeno.py&quot;,&quot;adatta_altezza_riga&quot;)
&apos; sQualeCella = &quot;$C$3&quot;
 &apos; Seleziona_Cella (sQualeCella)

END SUB

SUB ACCODA_PREZZO_UNIVERS_T1 &apos; variante con livelli ( per elettrici Piemonte)
&apos; al momento è strutturarata per digerire Milano e Piemonte Cuneo

dim xA as string
dim xC as string
dim xD as string
dim oSheet as object
dim oCell as object
dim oCellS as object
dim livelli as long
&apos;&apos;&apos;on error goto msgerr
 oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
 oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;) 
 oCell=thisComponent.getCurrentSelection()
 oCellS = oCell &apos; punto di inizio 
 lrow=oCell.RangeAddress.StartRow 
 oCell = oSheet.GetCellByPosition( 7, lrow ) 

	xA = oCell.string
	If xA = &quot;&quot; or lrow &lt; 2 Then
		 ThisComponent.CurrentController.Select(oCellS)
		 MsgBox &quot;HAARG!!! :-( /*\# La riga selezionata NON contiene una voce (figlia) VALIDA!&quot;_
		 &amp; &quot;(Infatti non trovo il prezzo!) Il cursore deve stare su una riga che contiene un PREZZO!!!!&quot;_
		 &amp; &quot; Controlla se sei sulla riga giusta e riprova!!&quot;
		&apos; ThisComponent.CurrentController.Select(oCellS)
		 exit sub
	end if

	if oSheet.GetCellByPosition( 7, lrow).value = isNotANumber then
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getstring
				else
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getvalue
	end if
	sUM = oSheet.GetCellByPosition( 6, lrow).string
	sDescr0 = oSheet.GetCellByPosition( 4, lrow).string
	sAlfaNum0 = oSheet.GetCellByPosition( 2, lrow).string
	sAlfaNum1 = oSheet.GetCellByPosition( 2, lrow-1).string
	lAlfa0 = Len (sAlfaNum0)
	oCell = oSheet.GetCellByPosition( 2, lrow )
	lAlfaA = Len(oCell.string)
	sAlfac1 = oSheet.GetCellByPosition( 2, lrow-1).string
	sCategoria = oSheet.GetCellByPosition( 0, lrow).string
	&apos;oSheetTemp = thisComponent.sheets.getbyname(&quot;Listino&quot;)
	
&apos; la cella B9 viene usata per inserire un eventuale codice che identifica la tipologia
&apos; del prezzario. 
&apos;	Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string 


	livelli = oSheet.GetCellByPosition( 6, 0).value 
&apos;		ThisComponent.CurrentController.Select(oSheet.GetCellByPosition( 6, 0))
&apos;	print livelli
	if livelli &gt; 3 then
		print &quot;sup&quot;
		ocell = oSheet.GetCellByPosition( 6, 0)&apos;.value 
 		ThisComponent.CurrentController.Select(oCell)
		msgbox &quot; Il numero dei Livelli impostato è &quot; &amp; livelli &amp; CHR$(10)_
			&amp; &quot; Al momento Ultimus gestisce solo 3 livelli...&quot; &amp; CHR$(10)_
			&amp; &quot; pertanto devi ridurre il numero dei livelli ad un numero non superiore a 3&quot; &amp; CHR$(10) &amp; CHR$(10)_
				&amp; &quot;(Se qualcuno ritiene utile o necessario avere ulteriori livelli me lo faccia sapere...)&quot;
				exit sub
	end if
	
	if livelli = 0 then 
			oSheet.GetCellByPosition( 6, 0).value=1
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
			livelli =oSheetTemp.GetCellByPosition( 0, 6 ).value
			msgbox &quot;Il livello di accodamento voce era vuoto!&quot; &amp; CHR$(10) &amp; CHR$(10)_
					&amp;	&quot;Di default ho assegnato 1, ma puoi modificare il valore direttamente&quot; &amp; CHR$(10)_
					&amp; &quot;nella cella G1 (tabella &quot;&quot;Listino&quot;&quot;) !&quot; &amp; CHR$(10)_
					&amp; &quot;Fai qualche prova....&quot;&amp; CHR$(10)_
					&amp; &quot;&quot;
					
			oCell = oSheet.GetCellByPosition( 7, lrow ) 
		&apos;	oSheetTemp.GetCellByPosition( 1, 1 ).value=2
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
	end if

Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string

&apos; Se invece B9 è vuota viene impostata a 2 ed eseguito il Case 2, buono per Milano e Piemonte
&apos; Nel caso di nuove tipologie sarà sufficiente impostare del codice adatto e creare un altro case 
	if tipologia = &quot;&quot; then
		tipologia = &quot;Normale&quot;
	end if

	if tipologia = &quot;Normale&quot; then
		Accoda_Normale(livelli, lrow)
	end if
	if tipologia = &quot;CN&quot; then
&apos;	print &quot;cn&quot;
		Accoda_CN(livelli, lrow)
	end if
end sub


SUB ACCODA_PREZZO_UNIVERS_2
&apos;Decisamente Osoleta... NON usarla... prima o poi cancellare...
 &apos; variante con livelli ( per elettrici Piemonte)
&apos; al momento è strutturarata per digerire Milano e Piemonte 

dim xA as string
dim xC as string
dim xD as string
dim oSheet as object
dim oCell as object
dim oCellS as object
dim livelli as long
&apos;&apos;&apos;on error goto msgerr
 oSheet = ThisComponent.currentController.activeSheet &apos; sheet corrente 
 oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;) 
 oCell=thisComponent.getCurrentSelection()
 oCellS = oCell &apos; punto di inizio 
 lrow=oCell.RangeAddress.StartRow 
 oCell = oSheet.GetCellByPosition( 7, lrow ) 

	xA = oCell.string
	If xA = &quot;&quot; Then
		 MsgBox &quot;HAARG!!! :-( /*\# La riga selezionata NON contiene una voce (figlia) VALIDA!&quot;_
		 &amp; &quot;(Infatti non trovo il prezzo!) Il cursore deve stare su una riga che contiene un PREZZO!!!!&quot;_
		 &amp; &quot; Controlla se sei sulla riga giusta e riprova!!&quot;
		 ThisComponent.CurrentController.Select(oCellS)
		 exit sub
	end if

	if oSheet.GetCellByPosition( 7, lrow).value = isNotANumber then
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getstring
				else
			Prezzo = oSheet.GetCellByPosition( 7, lrow).getvalue
	end if
	sUM = oSheet.GetCellByPosition( 6, lrow).string
	sDescr0 = oSheet.GetCellByPosition( 4, lrow).string
	sAlfaNum0 = oSheet.GetCellByPosition( 2, lrow).string
	sAlfaNum1 = oSheet.GetCellByPosition( 2, lrow-1).string
	lAlfa0 = Len (sAlfaNum0)
	oCell = oSheet.GetCellByPosition( 2, lrow )
	lAlfaA = Len(oCell.string)
	sAlfac1 = oSheet.GetCellByPosition( 2, lrow-1).string
	sCategoria = oSheet.GetCellByPosition( 0, lrow).string
&apos;	oSheetTemp = thisComponent.sheets.getbyname(&quot;Listino&quot;)
	oSheetTemp = thisComponent.sheets.getbyname(&quot;Temp&quot;)
&apos; la cella B9 viene usata per inserire un eventuale codice che identifica la tipologia
&apos; del prezzario. 
&apos;	Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string 

	livelli = oSheetTemp.GetCellByPosition( 1, 1).value 
&apos;	print livelli
	if livelli &gt; 3 then
		&apos;print &quot;sup&quot;
		ocell = oSheetTemp.GetCellByPosition( 1, 1)
 		ThisComponent.CurrentController.Select(oCell)
		msgbox &quot; Il numero dei Livelli impostato è &quot; &amp; livelli &amp; CHR$(10)_
			&amp; &quot; Al momento Ultimus gestisce solo 3 livelli...&quot; &amp; CHR$(10)_
			&amp; &quot; pertanto devi ridurre il numero dei livelli ad un numero non superiore a 3&quot; &amp; CHR$(10) &amp; CHR$(10)_
				&amp; &quot;(Se qualcuno ritiene utile o necessario avere ulteriori livelli me lo faccia sapere...)&quot;
				exit sub
	end if
	
	if livelli = 0 then 
			oSheetTemp.GetCellByPosition( 1, 1 ).value=2
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
			livelli =oSheetTemp.GetCellByPosition( 0, 6 ).value
			msgbox &quot;Il livello di accodamento voce era vuoto!&quot; &amp; CHR$(10) &amp; CHR$(10)_
					&amp;	&quot;Di default ho assegnato 1, ma puoi modificare il valore direttamente&quot; &amp; CHR$(10)_
					&amp; &quot;nella cella G1 (tabella &quot;&quot;Listino&quot;&quot;) !&quot; &amp; CHR$(10)_
					&amp; &quot;Fai qualche prova....&quot;&amp; CHR$(10)_
					&amp; &quot;&quot;
					
			oCell = oSheet.GetCellByPosition( , lrow ) 
			oSheetTemp.GetCellByPosition( 1, 1 ).value=1
		&apos;	ThisComponent.CurrentController.Select(oSheetTemp.GetCellByPosition( 1, 1 ))
	end if
tipologia =&quot;&quot;
&apos;ThisComponent.CurrentController.Select(oSheetTemp)
&apos;print tipologia
Tipologia = oSheetTemp.GetCellByPosition( 1, 8).string

&apos; Se invece B9 è vuota viene impostata a 2 ed eseguito il Case 2, buono per Milano e Piemonte
&apos; Nel caso di nuove tipologie sarà sufficiente impostare del codice adatto e creare un altro case 
	if tipologia = &quot;&quot; then
		tipologia = &quot;Normale&quot;
	end if
&apos;print tipologia
	if tipologia = &quot;Normale&quot; then
&apos;	print tipologia
		Accoda_Normale(livelli, lrow)
	end if
	if tipologia = &quot;CN&quot; then
		Accoda_CN(livelli, lrow)
	end if
end sub


</script:module>