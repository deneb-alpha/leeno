<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="PY_bridge" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

Sub ScriptPy (sModulo, sFunzione, Optional arg1, Optional arg2, Optional arg3) As Variant 
rem questa serve ad avviare le funzioni/script di python
rem tocca appiccicarle ad &quot;eventi&quot;: pulsanti o toolbar, altrimenti non vanno
	args() = Array()
	If not ismissing (arg1) Then Appenditem(args(), arg1)
	If not ismissing (arg2) Then Appenditem(args(), arg2)
	If not ismissing (arg3) Then Appenditem(args(), arg3)
	rem RIF: http://bit.ly/1b4d3dF

	Dim MasterScriptProviderFactory as Object
	Dim MasterScriptProvider as Object
	Dim Script as Object
	Dim Url as String
	sName = FileNameoutofPath(LeenO_Path) &apos;nome oxt

	Url = &quot;vnd.sun.star.script:&quot; &amp; sName &amp; &quot;|python|pythonpath|&quot; &amp; sModulo &amp; &quot;$&quot; &amp; sFunzione &amp;&quot;?language=Python&amp;location=user:uno_packages&quot;

	MasterScriptProviderFactory = createUnoService(&quot;com.sun.star.script.provider.MasterScriptProviderFactory&quot;)
	MasterScriptProvider = MasterScriptProviderFactory.createScriptProvider(&quot;&quot;)
	Script = MasterScriptProvider.getScript(Url)

	PythonResult = Script.invoke(args,Array(),Array())

ScriptPy = PythonResult
End Sub
rem ######################################################################
Sub vai_a_M1
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_M1&quot;)
End Sub
rem ######################################################################
Sub vai_a_S1
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_S1&quot;)
End Sub
rem ######################################################################
Sub vai_a_S2
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_S2&quot;)
End Sub
rem ######################################################################
Sub vai_a_variabili
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_variabili&quot;)
End Sub
rem ######################################################################
Sub vai_a_ElencoPrezzi
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_ElencoPrezzi&quot;)
End Sub
rem ######################################################################
Sub inizializza_analisi
	ScriptPy(&quot;pyleeno.py&quot;,&quot;inizializza_analisi&quot;)
End Sub
rem ######################################################################
Sub vai_a_Computo
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_Computo&quot;)
End Sub
rem ######################################################################
Sub genera_variante
	ScriptPy(&quot;pyleeno.py&quot;,&quot;genera_variante&quot;)
End Sub
rem ######################################################################
Sub attiva_contabilita
	ScriptPy(&quot;pyleeno.py&quot;,&quot;attiva_contabilita&quot;)
End Sub
rem ######################################################################
Sub vai_a_Scorciatoie
	ScriptPy(&quot;pyleeno.py&quot;,&quot;vai_a_Scorciatoie&quot;)
End Sub
rem ######################################################################
Sub ssUltimus
	ScriptPy(&quot;pyleeno.py&quot;,&quot;ssUltimus&quot;)
End Sub
</script:module>