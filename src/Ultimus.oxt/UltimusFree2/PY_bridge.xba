<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="PY_bridge" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________
&apos;Elenco delle macro che vengono avviate tramite pulsanti nei riquadri di dialogo.

Dim oDialogViste_N as Object

SUB chiudi_dialoghi &apos; chiude tutte le dialog
	if Not isNull (oDialogViste_N) then oDialogViste_N.endExecute() 
Exit Sub 
			&apos; modificare qui se si aggiungono delle dialog
	if Not isNull (oDialogViste_A) then
		oDialogViste_A.endExecute()
		else
		print &quot;prova&quot;
    endif
&apos;	if Not isNull (oDialogViste_EP) then oDialogViste_EP.endExecute() 
&apos;	if Not isNull (oDialogViste_AN) then oDialogViste_AN.endExecute() 
&apos;	if Not isNull (oDialogViste_N) then oDialogViste_N.endExecute() 
	
&apos;	if Not isNull (oDialogScenari_A) then oDialogScenari_A.endExecute()
&apos;	if Not isNull (oDialogScenari_EP) then oDialogScenari_EP.endExecute() 
&apos;	if Not isNull (oDialogScenari_AN) then oDialogScenari_AN.endExecute() 
&apos;	if Not isNull (oDialogScenari_2) then oDialogScenari_2.endExecute()
&apos;	if Not isNull (oDlgMain) then CreateUnoDialog( DialogLibraries.UltimusFree2.DlgMain).endExecute()
END SUB


Sub ScriptPy (sModulo, sFunzione, Optional arg1, Optional arg2, Optional arg3, Optional arg4, Optional arg5) As Variant 

	&apos; questa funzione sfrutta il servizio dispatcher di LeenO per eseguire da basic
	&apos; dele funzioni in Python, senza i problemi legati ai percorsi fissi

	&apos; se il nome del modulo finisce in .py, elimina la parte finale
	if Right(sModulo, 3) = &quot;.py&quot; then
		sModulo = Left(sModulo, Len(sModulo)- 3)
	end if

	args = Array()
	If not ismissing (arg1) Then Appenditem(args, arg1)
	If not ismissing (arg2) Then Appenditem(args, arg2)
	If not ismissing (arg3) Then Appenditem(args, arg3)
	If not ismissing (arg4) Then Appenditem(args, arg4)
	If not ismissing (arg5) Then Appenditem(args, arg5)

	Dim bridge as Object
	bridge = GetProcessServiceManager().createInstanceWithArguments(&quot;org.giuseppe-vizziello.leeno.dispatcher&quot;, args )
&apos;	bridge = GetProcessServiceManager().createInstance(&quot;org.giuseppe-vizziello.leeno.dispatcher&quot;)
&apos;	print sModulo + &quot;.&quot; + sFunzione
	bridge.trigger(sModulo + &quot;.&quot; + sFunzione)

End Sub

rem ######################################################################
&apos;Sub MENU_debug
&apos;	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;MENU_debug&quot;)
&apos;End Sub
rem ######################################################################
Sub DlgMain
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;DlgMain&quot;)
End Sub
rem ######################################################################
Sub attiva_contabilita
	chiudi_dialoghi
	ScriptPy(&quot;LeenoContab&quot;,&quot;attiva_contabilita&quot;)
End Sub
rem ######################################################################
Sub genera_variante
	chiudi_dialoghi
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;genera_variante&quot;)
End Sub
rem ######################################################################
Sub vai_a_M1
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_M1&quot;)
End Sub
rem ######################################################################
Sub vai_a_S1
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_S1&quot;)
End Sub
rem ######################################################################
Sub vai_a_S2
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_S2&quot;)
End Sub
rem ######################################################################
Sub vai_a_variabili
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_variabili&quot;)
End Sub
rem ######################################################################
Sub vai_a_ElencoPrezzi
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_ElencoPrezzi&quot;)
End Sub
rem ######################################################################
Sub inizializza_analisi
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;inizializza_analisi&quot;)
End Sub
rem ######################################################################
Sub vai_a_Computo
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_Computo&quot;)
End Sub
rem ######################################################################
Sub vai_a_Scorciatoie
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;vai_a_Scorciatoie&quot;)
End Sub
rem ######################################################################
Sub ssUltimus
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;ssUltimus&quot;)
End Sub
rem ######################################################################
Sub voce_breve
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;voce_breve&quot;)
End Sub
rem ######################################################################
Sub tante_analisi_in_ep
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;tante_analisi_in_ep&quot;)
End Sub
rem ######################################################################
Sub analisi_in_ElencoPrezzi
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;analisi_in_ElencoPrezzi&quot;)
End Sub
rem ######################################################################
Sub inizializza_elenco
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;inizializza_elenco&quot;)
End Sub
rem ######################################################################
Sub riordina_ElencoPrezzi
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;riordina_ElencoPrezzi&quot;)
End Sub
rem ######################################################################
&apos;Sub struttura_Elenco
&apos;	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;struttura_Elenco&quot;)
&apos;End Sub
rem ######################################################################
Sub cancella_voci_non_usate
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;cancella_voci_non_usate&quot;)
End Sub
rem ######################################################################
Sub richiesta_offerta
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;richiesta_offerta&quot;)
End Sub
rem ######################################################################
Sub trova_np
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;trova_np&quot;)
End Sub
rem ######################################################################
Sub rigenera_tutte
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;rigenera_tutte&quot;)
End Sub
rem ######################################################################
Sub trova_ricorrenze
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;trova_ricorrenze&quot;)
End Sub
rem ######################################################################
Sub set_larghezza_colonne
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;set_larghezza_colonne&quot;)
End Sub
rem ######################################################################
Sub config_default
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;config_default&quot;)
End Sub
rem ######################################################################
Sub donazioni
	ScriptPy(&quot;LeenoBasicBridge&quot;,&quot;donazioni&quot;)
End Sub
rem ######################################################################
Sub invia_voce
	ScriptPy(&quot;pyleeno&quot;,&quot;MENU_invia_voce&quot;)
End Sub
rem ######################################################################
Sub GeneraAttiContabili
	ScriptPy(&quot;LeenoContab&quot;,&quot;GeneraAttiContabili&quot;)
End Sub
rem ######################################################################
Sub Vedi
	ScriptPy(&quot;LeenoToolbars&quot;,&quot;Vedi&quot;)
End Sub
rem ######################################################################
Sub svuotaContabilita
	ScriptPy(&quot;LeenoContab&quot;,&quot;Menu_svuotaContabilita&quot;)
End Sub
rem ######################################################################
</script:module>