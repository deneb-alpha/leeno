<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Accessori_2" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti all&apos;indirizzo qui sopra.
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________



&apos;Option Explicit


sub SwitchDesign &apos;Bozza_on_off 101221 &apos; questo è lo switc
&apos; 	SwitchDesignMode() &apos; basta questa riga
&apos;	ThisComponent.ApplyFormDesignMode = False &apos;True
ToggleToolbarVisible(ThisComponent, &quot;private:resource/toolbar/formcontrols&quot;, 1)
&apos;exit sub
	 If isDesignModeOn() Then
	&apos; 		ToggleToolbarVisible(ThisComponent, &quot;private:resource/toolbar/formcontrols&quot;, 1)
	 	else
	 &apos;		ToggleToolbarVisible(ThisComponent, &quot;private:resource/toolbar/formcontrols&quot;, 0)
	 end if
end sub

Sub ToggleToolbarVisible(oDoc, sURL, prepinac)
 Dim oLayout
 oLayout = oDoc.CurrentController.getFrame().LayoutManager
&apos; xray oLayout
&apos;xray oLayout.isElementVisible(sURL)
&apos;xray oLayout.isElementLocked(sURL)
&apos;xray oLayout.isElementFloating(sURL)
&apos;oLayout.Visible=true
 Select Case prepinac
 Case 0 rem --- hide toolbar
 	 oLayout.hideElement(sURL)
 	&apos;oLayout.hideElement(sURL).setVisible(False)
 Case 1 rem --- show toolbar
 oLayout.showElement(sURL)
 &apos; oLayout.hideElement(sURL).setVisible(True)
 Case 2 rem --- switch toolbar
 If oLayout.isElementVisible(sURL) Then
 oLayout.hideElement(sURL)
 Else
 oLayout.showElement(sURL)
 End If
 End Select
End Sub



Sub Bozza_ON &apos;101221
 If NOT isDesignModeOn() Then
	 SwitchDesignMode()
 	ThisComponent.ApplyFormDesignMode = True
 end if
End Sub

sub Bozza_OFF &apos;(quindi esegue) 101221
 If isDesignModeOn() Then
	 SwitchDesignMode()
	 ThisComponent.ApplyFormDesignMode = True
 End If
end sub

Function isDesignModeOn() As Boolean
 Dim oFrame &apos; Current frame
 Dim oDisp &apos; The created dispatcher
 Dim oParser &apos; URL Transformer to parse the URL.
 Dim oStatusListener &apos; The status listener that is created
 Dim sListenerName &apos; The type of listener that is created
 Dim oUrl as New com.sun.star.util.URL

 rem Location 3 is used to prevent the state from being
 rem recorded more than once. Probably not really required.
 repository(3, True)

 rem Parse the URL as required
 rem and then save it in the registry at location 0.
 oUrl.Complete = &quot;.uno:SwitchControlDesignMode&quot;
 oParser = createUnoService(&quot;com.sun.star.util.URLTransformer&quot;)
 oParser.parseStrict(oUrl)
 repository(0, oUrl)

 rem See if the current Frame supports this UNO command
 rem then save the dispatch in the registry.
 oFrame = ThisComponent.getCurrentController().getFrame()
 oDisp = oFrame.queryDispatch(oUrl,&quot;&quot;,0)
 repository(1, oDisp)

 rem Create the status listener and save a reference to it in the repository
 If (Not IsNull(oDisp)) Then
 sListenerName = &quot;com.sun.star.frame.XStatusListener&quot;
 oStatusListener = CreateUnoListener(&quot;Status_&quot;, sListenerName)
 repository(2, oStatusListener)
 oDisp.addStatusListener(oStatusListener, oURL)
 isDesignModeOn = repository(4)
 Else
 isDesignModeOn = False
 End If
End Function

rem The definition of the listener requires this, but we do not use this.
Function Status_disposing(oEvt)
End Function

rem This is called whtn the status changes. In other words, when
rem the design mode is toggled and when the listener is first created.
Function Status_statusChanged(oEvt)
 &apos;Print &quot;In status changed: &quot; &amp; oEvt.State
 If repository(3) Then
 repository(3, False)
 repository(4, oEvt.State)
 End If
 removeStatusListener()
End Function

Function removeStatusListener()
 Dim oStatusListener &apos; The saved status listener to remove.
 Dim oUrl &apos; The saved URL object
 Dim oDisp &apos; The saved dispatcher object
 Dim x &apos; This is an empty variant variable!

 rem Verify that the dispatcher exists before trying to remove
 rem the status listener.
 oDisp = repository(1)
 If NOT IsEmpty(oDisp) AND NOT IsNull(oDisp) Then
 oUrl = repository(0)
 oStatusListener = repository(2)
 repository(0, x) &apos; remove the URL
 repository(1, x) &apos; remove the dispatch
 repository(2, x) &apos; remove the status listener
 oDisp.removeStatusListener(oStatusListener, oURL)
 End If
End Function

rem This is used to store a series of variables rather than pollute
rem the global name space. If the optional argument is passed, then
rem it is added to the array. Either way, the value is returned.
Function repository(n As Integer, Optional x)
 Static oObj(5) As Variant
 If Not IsMissing(x) Then oObj(n) = x
 repository = oObj(n)
End Function


Sub sproteggi_sheet_corrente

	oSheet = ThisComponent.currentController.activeSheet
&apos; oSheet.protect(&quot;&quot;)
&apos; oSheet.unprotect(&quot;&quot;)
 ScriptPy(&quot;pyleeno.py&quot;, &quot;sproteggi_sheet_TUTTE&quot;)
&apos;Dim myProtection As New com.sun.star.util.CellProtection
&apos;ocell = mysheet.getCellByPosition(0,0)
&apos;myProtection.IsLocked=false
&apos;oCell.CellProtection=myProtection
&apos;oSheet.protect()

End Sub

Sub refreshAllSheetLinks() &apos;fa il refresh dei link esterni&apos;
&apos; credo in tutto il doc... ____ Alt K _______
	Clessid_lock_Start 
	oEnum = thisComponent.AreaLinks.createEnumeration
	while oEnum.hasMoreElements
	 oLink = oEnum.NextElement
	 oLink.refresh
	wend
	oEnum = thisComponent.SheetLinks.createEnumeration
	while oEnum.hasMoreElements
	 oLink = oEnum.NextElement
	 oLink.refresh
	wend
	oEnum = thisComponent.DDELinks.createEnumeration
	while oEnum.hasMoreElements
	 oLink = oEnum.NextElement
	 oLink.refresh
	wend
	 Clessid_lock_End
End Sub

&apos;Sub Visualizza_sheet_TUTTE
&apos;Rimetti_in_ordine_tab
&apos;	oSheets = ThisComponent.Sheets
&apos;	For I = 0 to oSheets.Count -1 
&apos;		oCalcSheet = ThisComponent.Sheets.getByIndex(I)
&apos;		oCalcSheet.unprotect(&quot;&quot;)
&apos;		oCalcSheet.isVisible = TRUE
&apos;	Next I	
&apos;End Sub
rem ----------------------------------------------------------------------

SUB Rifa_GG_G1G1_Contab &apos; RIFA ANCHE le formule di somma.se
prind 
&apos;manomessa da Giuseppe Vizziello 2014
&apos; rifà le aree GG e G1G1 in CONTABILITA (servono per la formula somma.se)
	If Not thisComponent.Sheets.hasByName(&quot;CONTABILITA&quot;) Then Exit Sub
	
&apos;	ThisComponent.enableAutomaticCalculation(False)
	
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) &apos; da sostituire o integrare
	oRanges = ThisComponent.NamedRanges
	&apos; con qualcosa che esegua sia se nome sia se Attributo ???
&apos;	sString$ = &quot;T O T A L E&quot;
&apos;	oEnd=uFindString(sString$, oSheet)
&apos;	lLastUrow=oEnd.RangeAddress.EndRow
	lLastUrow = ultima_voce
	oStart=uFindString(&quot;LAVORAZIONI&quot; &amp; chr$(10) &amp; &quot;O PROVVISTE&quot;, oSheet)
	rIntest=oStart.CellAddress.Row+1
	lLastUrow = getLastUsedRow(oSheet)
	lrowInizio=oStart.CellAddress.Row+1
&apos;_____________________
chiudi_dialoghi 
&apos;_____________________
	lLastUrow = getLastUsedRow(oSheet)
rem ----------------------------------------------------------------------
rem Recupero il nome dell&apos;ultimo SAL registrato e ricalcolo lLastUrow
	IF oRanges.hasByName(&quot;#Lib#1&quot;) THEN
		nSal=idxSAL &apos;variabile impostata nel modulo _variabili
		Do while nSal &gt; 0
			IF oRanges.hasByName(&quot;#Lib#&quot; &amp; nSal) THEN
		&apos;			nSal=nSal-1
				exit do
			end if
		nSal=nSal-1
		Loop
		oNamedRange=oRanges.getByName(&quot;#Lib#&quot; &amp; nSal).referredCells&apos;.RangeAddress
		lLastUrow = oNamedRange.RangeAddress.EndRow
	End If 

ScriptPy(&quot;pyleeno.py&quot;,&quot;rifa_nomearea&quot;, &quot;CONTABILITA&quot;,&quot;$AJ$&quot; &amp; rIntest &amp; &quot;:$AJ$&quot; &amp; lLastUrow,&quot;GG&quot;) &apos;tagC - articolo
ScriptPy(&quot;pyleeno.py&quot;,&quot;rifa_nomearea&quot;, &quot;CONTABILITA&quot;,&quot;$S$&quot; &amp; rIntest &amp; &quot;:$S$&quot; &amp; lLastUrow,&quot;G1G1&quot;) &apos;quantità
ScriptPy(&quot;pyleeno.py&quot;,&quot;rifa_nomearea&quot;, &quot;CONTABILITA&quot;,&quot;$AK$&quot; &amp; rIntest &amp; &quot;:$AK$&quot; &amp; lLastUrow,&quot;conEuro&quot;) &apos;importi
	
&apos;sistemo la colonna &quot;Importi senza errori&quot;
	nEndRow = ultima_voce
&apos;	Print lLastUrow
	oSheet.getCellByPosition(36 ,1).formula = &quot;=SUBTOTAL(9;AK3:AK&quot; &amp; nEndRow+1 &amp; &quot;)&quot;
	For i = 0 To nEndRow &apos;row by row.
		If oSheet.GetCellByPosition( 0, i ).CellStyle = &quot;Comp End Attributo_R&quot; then &apos;
			oSheet.getCellByPosition(36 , i).formula = &quot;=IF(ISERROR(P&quot; &amp; i+1 &amp; &quot;);&quot;&quot;&quot;&quot;;IF(P&quot; &amp; i+1 &amp; &quot;&lt;&gt;&quot;&quot;&quot;&quot;;P&quot; &amp; i+1 &amp; &quot;;&quot;&quot;))&quot;
			oSheet.GetCellByPosition(36, i ).CellStyle = &quot;comp -controolo&quot;
		EndIf
	Next i

	oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
	oEnd=uFindString(&quot;Fine elenco&quot;, oSheet)
	If isNull (oEnd) or isEmpty (oEnd) then &apos;11111
		ThisComponent.CurrentController.Select(oSheet.getCellByPosition(0, getLastUsedRow(oSheet)))
		msgbox &quot; Manca la riga rossa di chiusura della tabella! PROVVEDI ! &quot;
		exit sub
	end If 
	if lcolbase = &quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; then
		print lcolbase
		exit sub
	end If
	lrowF=oEnd.RangeAddress.EndRow
	oStart=uFindString(&quot;DESCRIZIONE DEI LAVORI E DELLE SOMMINISTRAZIONI&quot;, oSheet)
	rIntest=oStart.CellAddress.Row+1
	lcolbase = Colonna_giusta_EP (oSheet)
		
	sCol= ColumnNameOf(lcolbase+idxcol)
	sCol1= ColumnNameOf(lcolbase+idxcol+13) &apos;quantità
	sCol2= ColumnNameOf(lcolbase+idxcol+14)
	sCol4 = ColumnNameOf(lcolbase+idxcol+4) &apos;col E
			
	oSheet.getColumns.getByIndex(lcolbase+13+idxcol).isVisible = true
	oSheet.getColumns.getByIndex(lcolbase+14+idxcol).isVisible = true
			
i=rIntest
&apos;	oSheet.GetCellByPosition(16,i).STRING=&quot;TOTALE&quot; &apos;totale computo
&apos;	oSheet.GetCellByPosition(16,i).cellstyle=&quot;EP statistiche_Contab_q&quot; &apos;totale computo

&apos; FORMULE DELLA CONTABILITA&apos;
	oSheet.GetCellByPosition(lcolbase + 19 , i).formula = &quot;=V4/$V$2&quot;
	oSheet.GetCellByPosition(lcolbase + 19 , i).cellstyle = &quot;EP-mezzo %&quot;
	oSheet.GetCellByPosition(lcolbase + 20 , i).formula = &quot;=SUMIF(GG;A4;G1G1)&quot;
	oSheet.GetCellByPosition(lcolbase + 20 , i).cellstyle = &quot;EP statistiche_q&quot;
	oSheet.GetCellByPosition(lcolbase + 21 , i).formula = &quot;=SUMIF(GG;A4;conEuro)&quot;
&apos;	oSheet.GetCellByPosition(lcolbase + 21 , i).formula = &quot;=IF(C4=&quot;&quot;%&quot;&quot;;Q4*E4/100;Q4*E4)&quot;
	oSheet.GetCellByPosition(lcolbase + 21 , i).cellstyle = &quot;EP statistiche&quot;
&apos;	ThisComponent.enableAutomaticCalculation(True)
END Sub

</script:module>