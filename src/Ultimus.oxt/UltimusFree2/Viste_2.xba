<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Viste_2" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL http://www.gnu.org/licenses/lgpl.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

Sub Scelta_Viste_2()
&apos;	sAttributo = Trova_Attr_Sheet
 &apos; If sAttributo &lt;&gt; &quot;TIPO_COMPUTO&quot; Then
 &apos; 	msgbox &quot;questa opzione non è disponibile su questa tabella!&quot;&amp; CHR$(10)_
&apos;&apos;		 			&amp; &quot;Sei certo di essere su una tabella di computo?&quot;
	&apos;	 	exit sub
&apos; 	end if &apos;
	DialogLibraries.LoadLibrary(&quot;UltimusFree2&quot;)&apos; &quot;Standard&quot; )
	oDialogScenari_2 = CreateUnoDialog( DialogLibraries.UltimusFree2.Dialogviste_N) &apos; Inizializza il dialogo
	oDialogScenari_2.Execute() &apos; Esegue il dialogo, cioè appare sullo schermo
END SUB

&apos;----------------------------------------------------------------

sub temp_carica
	dim Tabella1 as string
	dim Config1 as string
	oSheet = ThisComponent.currentController.activeSheet
&apos;	oCell = ThisComponent.CurrentSelection
&apos;	 lrow = oCell.CellAddress.row
&apos;	 lcol = oCell.CellAddress.column
	lrow= Range2Cell
	if lrow = -1 then
			 
			exit sub
	end if
	Tabella1 = oSheet.GetCellByPosition( 208 , lrow).string	
	Config1 = oSheet.GetCellByPosition( 207 , lrow).string	
	oSheet = ThisComponent.Sheets.getByName(Tabella1)
	ThisComponent.CurrentController.Select(oSheet)
	pippo = Carica_vista_da_schema(Tabella1, Config1)
end sub

sub Apri_tutto_CONTABILITA
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Tutte&quot;
	Carica_vista_da_schema(Tabella1, Config1)
end sub

sub Apri_CONTABILITA_C
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;CONTABILITA_C&quot;
	Carica_vista_da_schema(Tabella1, Config1)
end sub

sub Apri_Sommario
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Sommario&quot;
	Carica_vista_da_schema(Tabella1, Config1)
end sub

Sub fixme &apos; questa è appiccicata ad eventi di Analisi di Prezzo
&apos;Print &quot;lkl&quot;
&apos;	if ThisComponent.currentcontroller.activesheet.name = &quot;CONTABILITA&quot; then
&apos;		ThisComponent.CurrentController().freezeAtPosition(0,2)
&apos;	end if
&apos;		
end sub

sub Apri_Registro_Standard
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Registro-Standard&quot;
	on error resume next
	&apos;registro la posizione attuale del cursore
	iRow_PosIniz = Range2Cell
&apos;print iRow_PosIniz
&apos;	oPos = ThisComponent.getCurrentSelection()

 	lrowStart=thisComponent.getCurrentSelection().getCellAddress().Row 
	&apos;print lrowstart
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.currentController.activeSheet
	iLastRow = getLastUsedRow(oSheet)
	for i = 2 to iLastRow &apos; nasconde le righe di chiusura sal
		if left ( (oSheet.GetCellByPosition(2 , (i)).CellStyle),8 ) = &quot;Reg-SAL-&quot; then
				oSheet.getRows().getByindex(i).isvisible = False
		end if
	next
&apos;	ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(2 ,lrowStart )
&apos;print &quot;ecco&quot;
	ThisComponent.CurrentController.Select((oSheet.getCellByPosition(2,2))		
	
	ThisComponent.CurrentController().freezeAtPosition(47,1)
&apos;nascondi la colonna SICUREZZA
			oSheet.getColumns().getByindex(17).isVisible = false	
&apos; riporta il cursore sulla posizione di partenza
&apos;	ThisComponent.CurrentController.Select( oPos )
	ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(2 ,iRow_PosIniz) &apos; + iConta)
	&apos; toglie la selezione 
&apos;	thisComponent.currentController.Select(thisComponent.CreateInstance(&quot;com.sun.star.sheet.SheetCellRanges&quot;)) &apos;unselect ranges
Tronca_Altezza_Voci
RIR_
&apos;togli_salti_pagina
			sString$ = &quot;T O T A L E&quot;
			oEnd=uFindString(sString$, oSheet)
			iEndRow=oEnd.RangeAddress.EndRow
	rem SAL PROGRESSIVO sul T O T A L E
	sFormulaSomma =&quot;=SUBTOTAL(9;Z3&quot; &amp; &quot;:Z&quot; &amp; iEndRow+1 &amp; &quot;)&quot;
	oSheet.GetCellByPosition(25,iEndRow).FORMULA = sFormulaSomma

end sub



sub Imposta_libretto_Cart
 dim Tabella1 as string
 dim Config1 as string
	&apos;_____________________
 chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
	
	&apos; ambaradan che controlla la modalità di tenuta del libretto delle Misure
 if ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,330).value = 1 then
		if msgbox ( &quot;Questa contabilità è impostata per un &quot;&quot;Libretto&quot;&quot; gestito in modalità elettronica!&quot; &amp; CHR$(10)_
			&amp; &quot;Sei certo di voler impostare la modalità tradizionale?&quot; &amp; CHR$(10)_
			&amp; &quot; Procedo ? &quot; &amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot;&quot; ,292, &quot;&quot;) &lt;&gt; 6 then			
		&apos;	print 1 &apos; cioè no
	&apos;		&amp; &quot;Cosulta la guida al capitolo: Libretto delle Misure&quot;
			exit sub
		end if

		&apos; adesso controllo se la contabilità è vuota
		oSheet = ThisComponent.currentController.activeSheet	
		sString$ = &quot;Fine Computo&quot;
		oEnd=uFindString(sString$, oSheet)
		If isNull (oEnd) or isEmpty (oEnd) then
			msgbox &quot; Manca la riga rossa di chiusura !&quot; &amp; CHR$(10)_
				&amp; &quot; potresti avere risultati non corretti in coda alla tabella&quot;
				lLastUrow = getLastUsedRow(oSheet)
		end if 
		lrowFine =oEnd.CellAddress.Row 
		For I = 4 To lrowFine Step 1
		ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(20 , i) &apos;debug
	&apos;	print oSheet.GetCellByPosition(20 , i).string
			if oSheet.GetCellByPosition(20 , i).string &lt;&gt; &quot;&quot; then &apos;se trova dati 
			&apos; se non lo è chiedo se impostare la tenuta del libretto elettronico
				if msgbox (&quot;Mi risulta ci siano dei numeri di pag. già scritti!&quot; &amp; CHR$(10)_
						&amp; &quot; se procedo impostando adesso la modalità Cartacea del Libretto delle Misure quei dati saranno sovrascritti!&quot; &amp; CHR$(10)_
						&amp; &quot; Sei certo di questo? (Magari cosulta la guida al capitolo: Libretto delle Misure)&quot; &amp; CHR$(10)_
						&amp; &quot; Proseguo ??&quot; &amp; CHR$(10)_
						&amp; &quot;&quot; ,291, &quot;&quot;) &lt;&gt; 6 then
						sMsg = &quot;interrompo&quot;
				end if
				if sMsg = &quot;interrompo&quot; then
					exit sub
				end if
				exit for
			end if
		next			
		&apos;chiedo ulteriore conferma
		if msgbox (&quot;Sei proprio certo di voler impostare la modalità Tradizionale di tenuta del Libretto delle Misure su questo foglio di Contabilità?&quot; &amp; CHR$(10)_
				&amp; &quot;Ti ricordo che i numeri di pagina esistenti saranno sovrascritti!&quot; &amp; CHR$(10)_
						&amp; &quot;Sei certo di questo? (Magari cosulta la guida al capitolo: Libretto delle Misure)&quot; &amp; CHR$(10)_
						&amp; &quot;Proseguo ?&quot; &amp; CHR$(10)_
						&amp; &quot;&quot; ,291, &quot;&quot;) &lt;&gt; 6 then
						sMsg = &quot;interrompo&quot;
				end if
				if sMsg = &quot;interrompo&quot; then
					exit sub
		end if
		ThisComponent.Sheets.getByName(&quot;S1&quot;).unprotect(&quot;&quot;)
		ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,330).value = 0 
		ThisComponent.Sheets.getByName(&quot;S1&quot;).protect(&quot;&quot;)
		msgbox &quot;Adesso questa contabilità è impostata per la tenuta tradizionale del Libretto delle misure (ovvero con Libretto delle Misure su carta)&quot;&amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot; e verrà attivata la vista &apos;Registro di contabilità&apos; &quot;&amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot; (se il Libretto è su carta non esiste nessun Libretto elettronico da visualizzare)&quot;			
	else
		msgbox &quot;Questa contabilità mi risulta già impostata sulla Modalità tradizionale (ovvero con Libretto delle Misure su carta)&quot;&amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot;pertanto, non esistendo un Libretto Elettronico da visualizzare, la vista sarà impostata come &apos;Registro di contabilità&apos; &quot;
		&apos;Apri_Registro_Standard 
		&apos;exit sub
end if
	&apos; Apro la visualizzazione del Registro
	Apri_Registro_Standard 
	&apos;	Reg_Sal_No_COL
end sub


sub Apri_libretto_misure &apos; e imposta la modalità Libretto Elettronico
Mostra_Tutto
	dim Tabella1 as string
	dim Config1 as string
	togli_struttura
&apos;	togli_salti_pagina
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
	oPos = ThisComponent.getCurrentSelection()	
	&apos; ambaradan che controlla la modalità di tenuta del libretto delle Misure
Exit Sub 
	if ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,330).value = 0 then
		if msgbox ( &quot;Questa contabilità attualmente è impostata per un &quot;&quot;Libretto&quot;&quot; cartaceo!&quot; &amp; CHR$(10)_
			&amp; &quot;Pertanto la visualizzazione del Libretto delle Misure è incompatibile e non è di nessuna utilità!&quot;&amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot; Procedo Comunque ? &quot; &amp; CHR$(10) &amp; CHR$(10)_
			&amp; &quot;&quot; ,292, &quot;&quot;) &lt;&gt; 6 then			
	&apos;		print 1 &apos; cioè no
	&apos;		&amp; &quot;Cosulta la guida al capitolo: Libretto delle Misure&quot;
			exit sub
		end if
		&apos; adesso controllo se la contabilità è vuota
		oSheet = ThisComponent.currentController.activeSheet	
		sString$ = &quot;Fine Computo&quot;
		oEnd=uFindString(sString$, oSheet)
		If isNull (oEnd) or isEmpty (oEnd) then
			msgbox &quot; Manca la riga rossa di chiusura !&quot; &amp; CHR$(10)_
				&amp; &quot; potresti avere risultati non corretti in coda alla tabella&quot;
				lLastUrow = getLastUsedRow(oSheet)
		end if 
		lrowFine =oEnd.CellAddress.Row 
		For I = 4 To lrowFine Step 1
		ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(20 , i) &apos;debug
	&apos;	print oSheet.GetCellByPosition(20 , i).string
			if oSheet.GetCellByPosition(20 , i).string &lt;&gt; &quot;&quot; then &apos;se trova dati 
			&apos; se non lo è chiedo se impostare la tenuta del libretto elettronico
				if msgbox (&quot;Mi risulta ci siano dei numeri di pag. già scritti!&quot; &amp; CHR$(10)_
						&amp; &quot; se procedo impostando adesso la Modalità Elettronica di tenuta del Libretto delle Misure quei dati saranno sovrascritti!&quot; &amp; CHR$(10)_
						&amp; &quot; Sei certo di questo? (Magari cosulta la guida al capitolo: Libretto delle Misure)&quot; &amp; CHR$(10)_
						&amp; &quot; Proseguo ??&quot; &amp; CHR$(10)_
						&amp; &quot;&quot; ,291, &quot;&quot;) &lt;&gt; 6 then
						sMsg = &quot;interrompo&quot;
				end if
				if sMsg = &quot;interrompo&quot; then
					exit sub
				end if
				exit for
			end if
		next			
		&apos;chiedo ulteriore conferma
		if msgbox (&quot;Sei proprio certo di voler di voler impostare la modalità di tenuta del Libretto delle Misure in forma elettronica su questo foglio di Contabilità?&quot; &amp; CHR$(10)_
				&amp; &quot; (Ti ricordo che i numeri di pagina saranno sovrascritti!&quot; &amp; CHR$(10)_
						&amp; &quot; Sei certo di questo? (Magari cosulta la guida al capitolo: Libretto delle Misure)&quot; &amp; CHR$(10)_
						&amp; &quot; Proseguo ??&quot; &amp; CHR$(10)_
						&amp; &quot;&quot; ,291, &quot;&quot;) &lt;&gt; 6 then
						sMsg = &quot;interrompo&quot;
				end if
				if sMsg = &quot;interrompo&quot; then
					exit sub
		end if
		For I = 4 To lrowFine Step 1 &apos; mbo.. è in test... elimina il numero del libretto quando si 
			&apos; communta da una modalità all&apos;altra
			if oSheet.GetCellByPosition(19 , i).string &lt;&gt; &quot;&quot; then 
				oSheet.GetCellByPosition(19 , i).string = &quot;&quot;
			end if
		next
		ThisComponent.Sheets.getByName(&quot;S1&quot;).unprotect(&quot;&quot;)
		ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,330).value = 1 
		ThisComponent.Sheets.getByName(&quot;S1&quot;).protect(&quot;&quot;)
		msgbox &quot;Adesso questa contabilità è impostata sulla Modalità: Libretto Elettronico&quot; &amp; CHR$(10)_
			&amp; &quot;(Libretto delle Misure in formato elettronico)!&quot;
	end if

	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;libretto_Mis&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.currentController.activeSheet
	iLastRow = getLastUsedRow(oSheet)

set_larghezza_colonne
end sub

sub Reg_Sal_No_COL &apos; nome poco significativo... cosa c&apos;entra la Col?
	&apos; Visualizza la configurazione con le righe di chiusura dei SAL
	dim Tabella1 as string
	dim Config1 as string
	
	&apos;registro la posizione attuale del cursore &apos;minella
	lrowStart = Range2Cell
 &apos;	lrowStart=thisComponent.getCurrentSelection().getCellAddress().Row 

	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	oSheet = ThisComponent.currentController.activeSheet
	

	
	iLastRow = getLastUsedRow(oSheet)
	for i=2 to iLastRow &apos; Visualizza le righe di chiusura sal 
		if left ( (oSheet.GetCellByPosition(2 , (i)).CellStyle),8 ) = &quot;Reg-SAL-&quot; OR _
		oSheet.GetCellByPosition(2 , (i)).CellStyle= &quot;Comp TOTALI&quot;	then
				oSheet.getRows().getByindex(i).isvisible = True
		end if
	next
&apos;	for i = 11 to 17
&apos;		oSheet.getColumns().getByIndex (i).isVisible = false
&apos;	next
	
	&apos; riporta il cursore sulla posizione di partenza
&apos;	ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(2 ,lrowStart )
	fissa(47,3, 0,lrowStart)
	&apos; toglie la selezione 
	thisComponent.currentController.Select(thisComponent.CreateInstance(&quot;com.sun.star.sheet.SheetCellRanges&quot;)) &apos;unselect ranges 		
	ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(2 ,lrowStart )
end sub

 





sub Reg_Sal_N_on_off &apos; universale... per N SAL
	&apos; visualizza la colonna solo se uguale o inferiore a 6..
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	sNumSal = InputBox (&quot; Scrivi il NUMERO del SAL che vuoi VISUALIZZARE&quot;&amp; CHR$(10)_
 							&amp; &quot; &quot;,&quot; VISUALIZZA un SAL&quot;, &quot;1&quot;)&apos; &amp; CHR$(10) 
 	If sNumSal = &quot;&quot; then &apos; si preme annulla Inputbox restituisce una stringa vuota
 			exit sub		
 	end if	
 	dim iNumSal as integer
 	iNumSal = sNumSal &apos; la trasformo in valore
	iColSal = 11 + iNumSal
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	if iNumSal &lt;= 6 then 
		If oSheet.getColumns().getByIndex (iColSal).isVisible = false then
				sMark = 1 
			 else
			 	sMark = 0 	 		
		end if
		oSheet.getColumns().getByindex(iColSal).isVisible = sMark
	end if
&apos;	oSheet = ThisComponent.currentController.activeSheet
	for i=2 to getLastUsedRow(oSheet) 
		if left ( (oSheet.GetCellByPosition(1 , (i)).CellStyle),16 ) = &quot;Reg-SAL-chiudi_&quot; &amp; iNumSal then
				oSheet.getRows().getByindex(i).isvisible = sMark
				oSheet.getRows().getByindex(i+1).isvisible = sMark				
		end if
	next
end sub

sub Reg_Sal_1_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	iNumSal = 1
	iColSal = 11 + iNumSal
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByIndex (iColSal).isVisible = false then
			sMark = 1 
		 else
		 	sMark = 0 	 		
	end if
	oSheet.getColumns().getByindex(iColSal).isVisible = sMark
	oSheet = ThisComponent.currentController.activeSheet
	for i=2 to getLastUsedRow(oSheet) 
		if left ( (oSheet.GetCellByPosition(1 , (i)).CellStyle),16 ) = &quot;Reg-SAL-chiudi_&quot; &amp; iNumSal then
				oSheet.getRows().getByindex(i).isvisible = sMark
				oSheet.getRows().getByindex(i+1).isvisible = sMark				
		end if
	next
end sub

sub Reg_Sal_2_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;N&quot;).isVisible = false then
			sMark = 1 
		 else
		 	sMark = 0 	 		
	end if
	oSheet.getColumns().getByName(&quot;N&quot;).isVisible = sMark
	oSheet = ThisComponent.currentController.activeSheet
	for i=2 to getLastUsedRow(oSheet) 
		if left ( (oSheet.GetCellByPosition(1 , (i)).CellStyle),8 ) = &quot;Reg-SAL-&quot; then
				oSheet.getRows().getByindex(i).isvisible = sMark
		end if
	next
end sub

sub Reg_Sal_3_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;O&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;O&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;O&quot;).isVisible = false 
	end if
end sub

sub Reg_Sal_4_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;P&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;P&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;P&quot;).isVisible = false 
	end if
end sub

sub Reg_Sal_5_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;Q&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;Q&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;Q&quot;).isVisible = false 
	end if
end sub

sub manodopera_on_off
	dim Tabella1 as string
	dim Config1 as string
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;Reg_sal&quot;
&apos;	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) 
	If oSheet.getColumns().getByName(&quot;AD&quot;).isVisible = false or _
		oSheet.getColumns().getByName(&quot;AE&quot;).isVisible = false	 then
			oSheet.getColumns().getByName(&quot;AD&quot;).isVisible = TRUE 
			oSheet.getColumns().getByName(&quot;AE&quot;).isVisible = TRUE 
	 else	 
			oSheet.getColumns().getByName(&quot;AD&quot;).isVisible = false 
			oSheet.getColumns().getByName(&quot;AE&quot;).isVisible = false 			
	end if
end sub



sub sicurezza_on_off
	dim Tabella1 as string
	dim Config1 as string
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________

	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) 
	

	If oSheet.getColumns().getByName(&quot;R&quot;).isVisible = false then&apos;or _
	&apos;	oSheet.getColumns().getByName(&quot;AE&quot;).isVisible = false	 then
			oSheet.getColumns().getByName(&quot;R&quot;).isVisible = TRUE 
	 else	 
			oSheet.getColumns().getByName(&quot;R&quot;).isVisible = false 
	end if
end sub


sub Residui_on_off
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
&apos;	dim Tabella1 as string
&apos;	dim Config1 as string
&apos;	Tabella1 = &quot;CONTABILITA&quot;
&apos;	Config1 = &quot;Reg_sal&quot;
&apos;	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) 
	If oSheet.getColumns().getByName(&quot;AC&quot;).isVisible = false then 
		oSheet.getColumns().getByName(&quot;AC&quot;).isVisible = TRUE
		if oSheet.getColumns().getByName(&quot;AV&quot;).isVisible = TRUE then 	 
			oSheet.getColumns().getByName(&quot;AW&quot;).isVisible = TRUE 
		end if
		goto fine
	end if
	If oSheet.getColumns().getByName(&quot;AC&quot;).isVisible = true then 
		oSheet.getColumns().getByName(&quot;AC&quot;).isVisible = false 
		oSheet.getColumns().getByName(&quot;AW&quot;).isVisible = false
	end if
	fine:
end sub



sub progetto_imp_on_off
	dim Tabella1 as string
	dim Config1 as string
	Tabella1 = &quot;CONTABILITA&quot;
	Config1 = &quot;progetto_imp&quot;
&apos;	Carica_vista_da_schema(Tabella1, Config1)
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) 

	If oSheet.getColumns().getByName(&quot;s&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;S&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;S&quot;).isVisible = false 
	end if

end sub

sub Quantita_prevista_aComputo_on_off
	dim Tabella1 as string
	dim Config1 as string
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;j&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;j&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;j&quot;).isVisible = false 
	end if
end sub

sub Figure_Annotazioni_Computo_on_off
	dim Tabella1 as string
	dim Config1 as string
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;)
	If oSheet.getColumns().getByName(&quot;AM&quot;).isVisible = false then
			oSheet.getColumns().getByName(&quot;AM&quot;).isVisible = TRUE 
	 else	 		
			oSheet.getColumns().getByName(&quot;AM&quot;).isVisible = false 
	end if
end sub


Function Carica_vista_da_schema (Tabella as string, Config as string)
&apos;lo schema sta in S1 celle FA151:HA151 (e righe successive)
dim iNumCol as integer
dim iString as integer
dim bValue as boolean
dim sValue as string
dim sString as string
	&apos;_____________________
&apos;	chiudi_dialoghi &apos; chiude tutti i dialoghi
	&apos;_____________________
oSheet = ThisComponent.Sheets.getByName(&quot;S4&quot;)
iRow = 150
Do while oSheet.GetCellByPosition(207 , iRow ).string &lt;&gt; Config or _
	oSheet.GetCellByPosition(208 , iRow ).string &lt;&gt; Tabella
	iRow = iRow + 1
	if oSheet.GetCellByPosition(207 , iRow ).string = &quot;&quot; then
		exit do
	end if
loop
&apos;print ThisComponent.CurrentController.Select( oSheet.GetCellByPosition(207 , iRow ) &apos;debug
&apos;adesso abbiamo la riga della conf richiesta per una data sheet
&apos;oSheetD = ThisComponent.Sheets.getByName(Tabella)???
&apos; e possiamo lavorare anche su un&apos;altra tabella
oSheetD = ThisComponent.currentController.activeSheet
ThisComponent.CurrentController.Select(oSheetD.GetCellByPosition(1 , 1 ))
For i = 0 to 99
&apos;ThisComponent.CurrentController.Select(oSheetD.GetCellByPosition(i , 3 ))
&apos;print oSheet.GetCellByPosition(i+156 , iRow ).string
		Select Case oSheet.GetCellByPosition(i+156 , iRow ).string
	 			case = &quot;T&quot;
	 				oSheetD.GetCellByPosition(i, 2 ).Columns.IsVisible = true
	 			case = &quot;F&quot;	
	 				oSheetD.GetCellByPosition(i, 2 ).Columns.IsVisible = False
	 			case = &quot;&quot;
		end select
&apos;	if oSheet.GetCellByPosition(i+156 , iRow ).string = &quot;T&quot; then
&apos;			oSheetD.GetCellByPosition(i, 2 ).Columns.IsVisible = true
&apos;		else
&apos;			oSheetD.GetCellByPosition(i, 2 ).Columns.IsVisible = False
&apos;	end if

next
END FUNCTION




Sub Registra_conf_colonne_2 &apos;scrive la configurazione con una stringa su una sheet 
&apos; la configurazione nascondi/mostra di 30 colonne
dim iNumCol as integer
dim bValue as boolean
dim sValue as string
&apos;dim sList as string
&apos;sList = &quot;&quot;
oSheet = ThisComponent.currentController.activeSheet
&apos;iNumCol = -1

&apos;For i = 0 to 39
&apos;	iNumCol = iNumCol +1

&apos;	oCell = oSheet.GetCellByPosition(iNumCol, 2 )
&apos;	ThisComponent.CurrentController.Select(oCell) 
&apos;	bValue = oCell.Columns.IsVisible
&apos;	sValue = bValue
&apos;	sList = sList + left(sValue, 1)
&apos;next
&apos;print sList
&apos;sNomeConf = inputbox (&quot;scrivi il nome della configurazione&quot;,,&quot;Temp&quot;)

oSheetDest = ThisComponent.Sheets.getByName(&quot;S4&quot;)
iRow = 150

&apos;oCell = oSheet.GetCellByPosition(1 , iRow )
Do while oSheetDest.GetCellByPosition(157 , iRow ).string &lt;&gt; &quot;&quot;
ThisComponent.CurrentController.Select(oSheetDest.GetCellByPosition(157 , iRow ))
	iRow = iRow + 1
loop
&apos;iRow = iRow + 1

&apos;iNumCol = 156

For i = 0 to 50
	if oSheet.GetCellByPosition(i, 2 ).Columns.IsVisible = true then
			oSheetDest.GetCellByPosition(i+156 , iRow ).string = &quot;T&quot;
			oSheetDest.GetCellByPosition(i+156 , iRow ).cellstyle = &quot;ROSSA&quot;
		else
			oSheetDest.GetCellByPosition(i+156 , iRow ).string = &quot;F&quot;
			oSheetDest.GetCellByPosition(i+156 , iRow ).cellstyle=&quot;Bordo_fine&quot;
	end if
&apos;	print oSheetDest.GetCellByPosition(i , iRow ).string	
&apos;	oCell = oSheet.GetCellByPosition(iNumCol, 2 )
&apos;	ThisComponent.CurrentController.Select(oCell) 
&apos;	bValue = oCell.Columns.IsVisible
&apos;	sValue = bValue
&apos;	sList = sList + left(sValue, 1)
next
&apos;print sList
sNomeConf = inputbox (&quot;scrivi il nome della configurazione&quot;,,&quot;Temp&quot;)

oSheetDest.GetCellByPosition(i+156 , iRow ).string = sNomeConf 
oSheetDest.GetCellByPosition(i+156 , iRow ).cellstyle=&quot;Bordo_fine&quot;
oSheetDest.GetCellByPosition(i+156+1 , iRow ).string = oSheet.name 
oSheetDest.GetCellByPosition(i+156+1 , iRow ).cellstyle=&quot;Bordo_fine&quot;
&apos;oCell = oSheet.GetCellByPosition(1 , iRow )	
&apos;oCell.string = sList
&apos;oCell = oSheet.GetCellByPosition(i , iRow )
&apos;oCell.string = sNomeConf
oCell = oSheetDest.GetCellByPosition(i+156 , iRow )
&apos;xray oSheetDest
If oSheetDest.isVisible = false then
		oSheetDest.isVisible = TRUE
 	else
 		oSheetDest.isVisible = false
end if
ThisComponent.CurrentController.Select(oCell) 
&apos;msgbox &quot;La configurazione On/Off delle colonne è stata &quot;&quot;sintetizzata&quot;&quot; in questa stringa&quot;&amp; CHR$(10)_
&apos;	&amp;&quot; Usandola come parametro della funzione Viste_nuove puoi creare una nuova Configurazione o modificarne una esistente...&quot;&amp; CHR$(10)_
&apos;	&amp; &quot;Vedi il modulo &quot;&quot;Viste&quot;&quot; della libreiria UltimusFree2...&quot;

END SUB
</script:module>