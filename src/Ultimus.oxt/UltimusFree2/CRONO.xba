<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="CRONO" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

Sub Transfer2Cron &apos; 
&apos; da sistemare la visualizzazione finale... funzia solo se si sposta verso il basso
dim oSrow as long
dim oErow as long
dim StartRow as long
dim lrowDest as integer
oDoc = thisComponent
&apos;.........................................................................................................

	iRow= Range2Cell &apos; queste 4 righe per ridurre a cella iniziale una eventuale 
	if iRow = -1 then
		 
		exit sub
	end if
	oSheet = ThisComponent.currentController.activeSheet

	oSheetSRC = oDoc.Sheets.getByName(odoc.currentcontroller.activesheet.name)
	oRangeSRC = osheet.getCellRangeByPosition (0,iRow,3,iRow)

	 oSheetDest = oDoc.Sheets.getByName(&quot;CronoP&quot;)

	ThisComponent.CurrentController.Select(oSheetDest)	 
&apos;	print &quot;3&quot;
 	 SelectedRange = getRange() &apos; richiama il listeners
	 lrowDest = getRigaIniziale(SelectedRange) &apos;che restituisce la riga di destinazione
	oSheetDest.unprotect(&quot;&quot;)
	insRows (lrowDest, 1) &apos;insertByIndex non funziona
&apos;	oSheetDest.getRows.insertByIndex(lrowDest, 1)

	oSrc = oSheetSRC.getCellRangeByPosition(0,iRow,3,iRow).RangeAddress
 oDest = oSheetDest.GetCellByPosition(1,lrowDest ).CellAddress
 oSheetDest.copyRange(oDest, oSrc)
 &apos;exit sub 
	oRange = oSheetDest.getCellRangeByPosition (1,lrowDest,4,lrowDest)

	Flags = com.sun.star.sheet.CellFlags.FORMULA+_
			com.sun.star.sheet.CellFlags.HARDATTR+_
		com.sun.star.sheet.CellFlags.STYLES

 	aSaveData = oRange.getDataArray()
 	&apos;Questa linea salva i dati delle varie celle prima di cancellare le formule altrimenti
 	&apos;una volta cancellate le relative celle risulterebbero vuote
 	oRange.clearContents(Flags)
	oRange.setDataArray( aSaveData )&apos; rimette tutti i dati nelle rispettive celle 

	oCell = oSheetDest.GetCellByPosition( 0 , lrowDest)
	sFormula = &quot;=A&quot; &amp; lrowDest &amp; &quot;+1&quot;
	oCell.setformula(sFormula)&apos; formula per progressivo nuovo

	oCell = oSheetDest.GetCellByPosition( 0 , lrowDest+1)
	sFormula = &quot;=A&quot; &amp; lrowDest+1 &amp; &quot;+1&quot;
	oCell.setformula(sFormula)&apos; ri-formula per progressivo vecchio


 oCell = oSheetDest.GetCellByPosition( 1 , lrowDest)
						oCell.CellStyle=&quot;planning rif&quot;
 oCell = oSheetDest.GetCellByPosition( 4 , lrowDest)
						oCell.CellStyle=&quot;planning bla&quot;
	ThisComponent.CurrentController.Select(oCell)
End Sub

SUB GRIGIA
	 oSheet = ThisComponent.currentController.activeSheet
	 oCell = ThisComponent.CurrentSelection
	 
	oCeck=HasUnoInterfaces(oCell, &quot;com.sun.star.table.XCell&quot; )
	if oCeck then 
		irow = oCell.celladdress.row
		icol = oCell.celladdress.column
			else
		msgbox &quot;Hai probabilmente selezionato un range! Devi selezionare una cella...&quot;
	end if 
	oCell.CellStyle=&quot;planning colore&quot;

	sCol= ColumnNameOf(icol)
	sFormula = &quot;=$F$6+$&quot; &amp; sCol &amp; 4
&apos;	print sFormula
	oCell.setformula(sFormula)	
END SUB

&apos;++++++++++++++++++++++++++++++++++++++++++++++++++

Sub Inser_Col_Cron &apos;

dim oSrow as long
dim oErow as long
dim StartRow as long
dim lrowDest as integer

If ThisComponent.Sheets.getByName(&quot;S1&quot;).GetCellByPosition(7,300).value=1 then 
	on error goto Gestione_Errore
end if
oDoc = thisComponent
&apos;.........................................................................................................

	oCell = thisComponent.CurrentSelection
	
	 lrowDest = oCell.CellAddress.row
	 lcol = oCell.CellAddress.column

	oSheetDest = oDoc.Sheets.getByName(&quot;CronoP&quot;)
	
	oSheetDest.unprotect(&quot;&quot;)
	oSheetDest.getColumns.insertByIndex(lcol, 1)

&apos;	oCell = oSheetDest.GetCellByPosition( 0 , lrowDest)
&apos;	sFormula = &quot;=A&quot; &amp; lrowDest &amp; &quot;+1&quot;
&apos;	oCell.setformula(sFormula)&apos; formula per progressivo nuovo
&apos;	oCellp = oSheetDest.GetCellByPosition( 0 , lrowDest+1)
&apos;	sFormula = &quot;=A&quot; &amp; lrowDest+1 &amp; &quot;+1&quot;
&apos;	oCellp.setformula(sFormula)&apos; ri-formula per progressivo vecchio

	oCelld = oSheetDest.GetCellByPosition( lcol , 3)
	sCol= ColumnNameOf(lcol-1)
	sColb = ColumnNameOf(lcol)
	sFormula = &quot;=&quot; &amp; scol &amp; &quot;4+&quot; &amp; sColb &amp; 5
&apos;	print sFormula
	oCelld.setformula(sFormula)

	ilastRow = getLastUsedRow(oSheetDest)
	oRange1 = oSheetDest.getCellRangeByPosition (lcol,6,lcol,ilastRow)
	oRange1.CellStyle=&quot;planning&quot;
	
 oCell = oSheetDest.GetCellByPosition( 1 , lrowDest)
						oCell.CellStyle=&quot;planning rif&quot;
						oCell.CellBackColor =15132415
 oCell = oSheetDest.GetCellByPosition( 4 , lrowDest)
						oCell.CellStyle=&quot;planning bla&quot;
						oCell.CellBackColor = 15132415
						
	oCell1 = oSheetDest.GetCellByPosition( lcol , lrowDest)
&apos;	oCell1.CellStyle=&quot;planning colore&quot;
	sCol= ColumnNameOf(lcol)
	sFormula = &quot;=$F$4+$&quot; &amp; sCol &amp; 4
&apos;	oCell1.setformula(sFormula)	

	ThisComponent.CurrentController.Select(oCell1)
	exit sub&apos;
	
	Gestione_Errore:
	DETENTORE_GENERALE_ERRORI(sModulSubName, Erl, Err, Error$ )
End Sub


&apos;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Sub Inser_riga_Cron

dim oSrow as long
dim oErow as long
dim StartRow as long
dim lrowDest as integer
oDoc = thisComponent
&apos;.........................................................................................................

	lrowDest = Range2Cell &apos; queste 4 righe per ridurre a cella iniziale una eventuale 
	if lrowDest = -1 then
		exit sub
	end if
	 oSheetDest = oDoc.Sheets.getByName(&quot;CronoP&quot;)
	oSheetDest.unprotect(&quot;&quot;)
	insRows (lrowDest, 1) &apos;insertByIndex non funziona
&apos;	oSheetDest.getRows.insertByIndex(lrowDest, 1)

	oCell = oSheetDest.GetCellByPosition( 0 , lrowDest)
	sFormula = &quot;=A&quot; &amp; lrowDest &amp; &quot;+1&quot;
	oCell.setformula(sFormula)&apos; formula per progressivo nuovo

	oCell = oSheetDest.GetCellByPosition( 0 , lrowDest+1)
	sFormula = &quot;=A&quot; &amp; lrowDest+1 &amp; &quot;+1&quot;
	oCell.setformula(sFormula)&apos; ri-formula per progressivo vecchio
	
	ilastCol = getLastUsedCol(oSheetDest)
&apos;	print ilastCol
	oRange1 = oSheetDest.getCellRangeByPosition (5,lrowDest,ilastCol-1,lrowDest)
	oRange1.CellStyle=&quot;planning&quot;

 oCell = oSheetDest.GetCellByPosition( 1 , lrowDest)
						oCell.CellStyle=&quot;planning rif&quot;
						oCell.CellBackColor =15132415
 oCell = oSheetDest.GetCellByPosition( 4 , lrowDest)
						oCell.CellStyle=&quot;planning bla&quot;
						oCell.CellBackColor =15132415	
					
										
	ThisComponent.CurrentController.Select(oCell)
End Sub


Sub elimina_riga_CronoP 

Dim oSheets As Object
dim oCelle As Object
Dim CellRangeAddress As New com.sun.star.table.CellRangeAddress
Dim CellAddress As New com.sun.star.table.CellAddress
dim lrowStart as integer
dim lcolStart as integer
dim lrowEnd as integer
Dim oView As Object
Dim nome_sheet as string
Dim OcalcSheet as Object
Dim I as long
Dim oSheet_num as integer
dim oSelection As Object

	oDoc = thisComponent
	oSelection = oDoc.CurrentSelection
	oSheet = oDoc.Sheets.getByName(&quot;CronoP&quot;)
	oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;)
	with oSelection.RangeAddress
		lrowStart= .startRow
		lrowEnd= .Endrow
	end with
	
	if lrowStart &lt; 4 then
		Msgbox &quot;Se proprio vuoi farti del male cancellando questa riga usa l&apos;interfaccia standard di OO&quot;
		exit sub
	end if
	oSheets = odoc.Sheets
	oView = ThisComponent.CurrentController
	nome_sheet = oView.GetActiveSheet.Name
	oCalcSheet = oSheets.GetByIndex(0)
	For I = 0 to oSheets.Count -1 
		oCalcSheet = oSheets(I) &apos;recuperiamo la tabella
		if oCalcSheet.Name = nome_sheet Then
			oSheet_num = I
		end if
	Next I
	oCell = oSheet.GetCellByPosition( 0 , lrowStart+1)
	sFormula = &quot;=A&quot; &amp; lrowStart &amp; &quot;+1&quot;
	oCell.setformula(sFormula)&apos; ri-formula per progressivo vecchio

	oSheets = oDoc.Sheets (oSheet_num)
	CellRangeAddress.Sheet = oSheet_num
	CellRangeAddress.StartColumn = 	0
	CellRangeAddress.StartRow = lrowStart
	CellRangeAddress.EndColumn = 250 &apos;espediente vomitevole...
	CellRangeAddress.EndRow = lrowStart
	oSheets.removeRange(CellRangeAddress, com.sun.star.sheet.CellDeleteMode.UP)

END SUB

Sub elimina_Colonna_CronoP 

dim nome as string
Dim oDoc As Object
Dim oSheets As Object
dim oCelle As Object
Dim CellRangeAddress As New com.sun.star.table.CellRangeAddress
Dim CellAddress As New com.sun.star.table.CellAddress
dim lrowStart as integer
dim lcolStart as integer
dim lrowEnd as integer
Dim oView As Object
Dim nome_sheet as string
Dim OcalcSheet as Object
Dim I as long
Dim oSheet_num as integer
dim oSelection As Object

	oDoc = thisComponent
	oSelection = oDoc.CurrentSelection
	oSheet = oDoc.Sheets.getByName(&quot;CronoP&quot;)
	oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;)
	with oSelection.RangeAddress
		lcolStart= .startColumn
		lcolEnd= .EndColumn
		
	end with
&apos;	print lcolStart
	if lcolStart &lt; 6 then
		Msgbox &quot;Se proprio vuoi farti del male cancellando questa colonna usa l&apos;interfaccia standard di OO&quot;
		exit sub
	end if
	oSheets = odoc.Sheets
	oView = ThisComponent.CurrentController
	nome_sheet = oView.GetActiveSheet.Name
	oCalcSheet = oSheets.GetByIndex(0)
	For I = 0 to oSheets.Count -1 
		oCalcSheet = oSheets(I) &apos;recuperiamo la tabella
		if oCalcSheet.Name = nome_sheet Then
			oSheet_num = I
		end if
	Next I
	
	oSheets = oDoc.Sheets (oSheet_num)
	CellRangeAddress.Sheet = oSheet_num
	CellRangeAddress.StartColumn = lcolStart
	CellRangeAddress.StartRow = 0
	CellRangeAddress.EndColumn = lcolEnd
	CellRangeAddress.EndRow = 5000 &apos;espediente vomitevole...
	oSheets.removeRange(CellRangeAddress, com.sun.star.sheet.CellDeleteMode.LEFT)
	
	oCell = oSheet.GetCellByPosition( lcolStart , 1)
	sCol= ColumnNameOf(lcolStart-1)
	sColb= ColumnNameOf(lcolStart)
	sFormula = &quot;=&quot; &amp; sCol &amp; &quot;2+&quot; &amp; sColb &amp; 3
&apos;	print sFormula 
	oCell.setformula(sFormula)&apos; 



END SUB

</script:module>